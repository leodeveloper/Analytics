@using InnonAnalytics.Model.DTO
@model InnonAnalytics.Model.DTO.AttributeTypeDTO


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Resources.AddNewAttributeHeader</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            
            @Html.Label(Resources.AttributeName , htmlAttributes: new { @class = "control-label col-md-2" })
            @foreach (var languageDTO in (List<LanguageDTO>)ViewData["languageDTO"])
            {
                <div class="col-md-10">
                    <div class="input-group">
                        <div class="input-group-addon">@languageDTO.CultureValue</div>
                        @Html.Editor(@languageDTO.CultureValue, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
                </div>
            }

          
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValueType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ValueType", ViewBag.ValueType as SelectList, "----Select ValueType----")
                @Html.ValidationMessageFor(model => model.ValueType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DataType", ViewBag.DataType as SelectList, "----Select DataType----")
                @Html.ValidationMessageFor(model => model.DataType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Disabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Disabled)
                    @Html.ValidationMessageFor(model => model.Disabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DefaultValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DefaultValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DefaultValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
