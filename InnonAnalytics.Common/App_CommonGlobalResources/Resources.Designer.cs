//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InnonAnalytics.Common.App_CommonGlobalResources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InnonAnalytics.Common.App_CommonGlobalResources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Angle is required.
        /// </summary>
        public static string AnalyticsProperties__End_Aangle {
            get {
                return ResourceManager.GetString("AnalyticsProperties__End_Aangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End Angle not greater than 360.
        /// </summary>
        public static string AnalyticsProperties__End_Aangle_Between {
            get {
                return ResourceManager.GetString("AnalyticsProperties__End_Aangle_Between", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Value is reuqired.
        /// </summary>
        public static string AnalyticsProperties__Max {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Value not greater than 100.
        /// </summary>
        public static string AnalyticsProperties__Max_Between {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Max_Between", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min Value is required.
        /// </summary>
        public static string AnalyticsProperties__Min {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min Value not less than 0.
        /// </summary>
        public static string AnalyticsProperties__Min_Between {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Min_Between", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minor Unit is required.
        /// </summary>
        public static string AnalyticsProperties__Minor_Unit {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Minor_Unit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minor Unit between 0 to 10.
        /// </summary>
        public static string AnalyticsProperties__Minor_Unit_Between {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Minor_Unit_Between", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Angle is required.
        /// </summary>
        public static string AnalyticsProperties__Start_Angle {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Start_Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Angle not less than -90.
        /// </summary>
        public static string AnalyticsProperties__Start_Angle_Between {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Start_Angle_Between", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target Metric Label is required.
        /// </summary>
        public static string AnalyticsProperties__Target_Metric_Label {
            get {
                return ResourceManager.GetString("AnalyticsProperties__Target_Metric_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart Type is required.
        /// </summary>
        public static string AnalyticsProperties_Chart_Type {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Chart_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter By is required.
        /// </summary>
        public static string AnalyticsProperties_Filter_By {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Filter_By", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter By Option is required.
        /// </summary>
        public static string AnalyticsProperties_Filter_By_Option {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Filter_By_Option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter By Text is required.
        /// </summary>
        public static string AnalyticsProperties_Filter_Text {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Filter_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lenght must be less than 75.
        /// </summary>
        public static string AnalyticsProperties_Filter_Text_Lenght {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Filter_Text_Lenght", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From Date is required.
        /// </summary>
        public static string AnalyticsProperties_From_Date {
            get {
                return ResourceManager.GetString("AnalyticsProperties_From_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group By is required.
        /// </summary>
        public static string AnalyticsProperties_Group_By {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Group_By", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metric is required.
        /// </summary>
        public static string AnalyticsProperties_Metric {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Metric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metric Lable Required.
        /// </summary>
        public static string AnalyticsProperties_Metric_Label {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Metric_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name is required.
        /// </summary>
        public static string AnalyticsProperties_Name_Widget {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Name_Widget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lenght must be less than 75.
        /// </summary>
        public static string AnalyticsProperties_Name_Widget_Lenght {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Name_Widget_Lenght", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll Up is required.
        /// </summary>
        public static string AnalyticsProperties_Roll_Up {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Roll_Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Table is required.
        /// </summary>
        public static string AnalyticsProperties_Time_Table {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Time_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To Date is required.
        /// </summary>
        public static string AnalyticsProperties_To_Date {
            get {
                return ResourceManager.GetString("AnalyticsProperties_To_Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Widget Title is required.
        /// </summary>
        public static string AnalyticsProperties_Widget_Title {
            get {
                return ResourceManager.GetString("AnalyticsProperties_Widget_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart Bar DTO Null.
        /// </summary>
        public static string Chart_Bar_Null_Exception {
            get {
                return ResourceManager.GetString("Chart_Bar_Null_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart Gauge DTO is null .
        /// </summary>
        public static string Chart_Gauge_Null_Exception {
            get {
                return ResourceManager.GetString("Chart_Gauge_Null_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart Heatmap is null.
        /// </summary>
        public static string Chart_Heatmap_Null_Exception {
            get {
                return ResourceManager.GetString("Chart_Heatmap_Null_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart TreeMap DTO is null.
        /// </summary>
        public static string Chart_Tree_Map_Null_Exception {
            get {
                return ResourceManager.GetString("Chart_Tree_Map_Null_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check your connection, failed to connect..
        /// </summary>
        public static string ConnectionConnectException {
            get {
                return ResourceManager.GetString("ConnectionConnectException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection test fail please check your connection parameters and do it again..
        /// </summary>
        public static string ConnectionFailedException {
            get {
                return ResourceManager.GetString("ConnectionFailedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Name is required.
        /// </summary>
        public static string ConnectionName {
            get {
                return ResourceManager.GetString("ConnectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connector found.
        /// </summary>
        public static string ConnectorNotFound {
            get {
                return ResourceManager.GetString("ConnectorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title is required.
        /// </summary>
        public static string Dashboard_Title {
            get {
                return ResourceManager.GetString("Dashboard_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dashbarod Type is required.
        /// </summary>
        public static string Dashboard_Type {
            get {
                return ResourceManager.GetString("Dashboard_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Dashboard found.
        /// </summary>
        public static string DashboardException {
            get {
                return ResourceManager.GetString("DashboardException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataConnectorType is required.
        /// </summary>
        public static string DataConnectorType {
            get {
                return ResourceManager.GetString("DataConnectorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataSouceConnectionType invalid in database.
        /// </summary>
        public static string DataSouceConnectionTypeInvalid {
            get {
                return ResourceManager.GetString("DataSouceConnectionTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element or Point not found .
        /// </summary>
        public static string ElementPointNotFound {
            get {
                return ResourceManager.GetString("ElementPointNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ftp mode is required.
        /// </summary>
        public static string FTPModeType {
            get {
                return ResourceManager.GetString("FTPModeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid FTP Mode in database.
        /// </summary>
        public static string FTPModeTypeInvalid {
            get {
                return ResourceManager.GetString("FTPModeTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gateway type is required.
        /// </summary>
        public static string Gateway {
            get {
                return ResourceManager.GetString("Gateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart Type is undefined.
        /// </summary>
        public static string Invalid_Chart_Type {
            get {
                return ResourceManager.GetString("Invalid_Chart_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no language available in Database or All languages are disabled.
        /// </summary>
        public static string LanguageNotFound {
            get {
                return ResourceManager.GetString("LanguageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty in Database.
        /// </summary>
        public static string LongDescriptionNotAvailable {
            get {
                return ResourceManager.GetString("LongDescriptionNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group By can not be null.
        /// </summary>
        public static string Metric_Group_By {
            get {
                return ResourceManager.GetString("Metric_Group_By", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metric Name required.
        /// </summary>
        public static string Metric_Name {
            get {
                return ResourceManager.GetString("Metric_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rollup is required.
        /// </summary>
        public static string Metric_Rollup {
            get {
                return ResourceManager.GetString("Metric_Rollup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metric Tags is required.
        /// </summary>
        public static string Metric_Tags {
            get {
                return ResourceManager.GetString("Metric_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the unit.
        /// </summary>
        public static string Metric_Unit_Message {
            get {
                return ResourceManager.GetString("Metric_Unit_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No unit of mesaure defined for this metric.
        /// </summary>
        public static string NoUnitDefined {
            get {
                return ResourceManager.GetString("NoUnitDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Data Available.
        /// </summary>
        public static string Null_Value {
            get {
                return ResourceManager.GetString("Null_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port Number must be numeric and less than 10000.
        /// </summary>
        public static string PortNumber {
            get {
                return ResourceManager.GetString("PortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server/IP is required.
        /// </summary>
        public static string ServerOrIP {
            get {
                return ResourceManager.GetString("ServerOrIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Password is required.
        /// </summary>
        public static string ServerPassword {
            get {
                return ResourceManager.GetString("ServerPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Username is required.
        /// </summary>
        public static string ServerUserName {
            get {
                return ResourceManager.GetString("ServerUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty in Database.
        /// </summary>
        public static string ShortDescriptionNotAvailable {
            get {
                return ResourceManager.GetString("ShortDescriptionNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required.
        /// </summary>
        public static string ShortValue {
            get {
                return ResourceManager.GetString("ShortValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database Name is required.
        /// </summary>
        public static string strDatabaseName {
            get {
                return ResourceManager.GetString("strDatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Tag found.
        /// </summary>
        public static string TagNullException {
            get {
                return ResourceManager.GetString("TagNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Map.
        /// </summary>
        public static string Tree_Map_Chart_Top_Name {
            get {
                return ResourceManager.GetString("Tree_Map_Chart_Top_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Map.
        /// </summary>
        public static string Tree_Map_Title {
            get {
                return ResourceManager.GetString("Tree_Map_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no Unit of measurement available in Database or All units are disabled.
        /// </summary>
        public static string UnitNotFound {
            get {
                return ResourceManager.GetString("UnitNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This widget all already added into the homepage.
        /// </summary>
        public static string widget_all_ready_added {
            get {
                return ResourceManager.GetString("widget_all_ready_added", resourceCulture);
            }
        }
    }
}
