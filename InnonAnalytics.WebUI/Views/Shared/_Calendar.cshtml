<table>
    <tr>
        <td><div class="input-group"><span class="form-control" id="date-range18"></span><span id="date-range18-open" class="input-group-addon"><i class="fa fa-calendar"></i></span></div></td>
    </tr>
    <tr>
        <td>
            @Html.Hidden("fromdate")
            @Html.Hidden("todate")
        </td>
    </tr>
</table>

<table>
    <tr>
        <td><span id="date-range18-container"></span></td>
    </tr>
</table>



<script>

    (function () {

        $('#date-range18').dateRangePicker(
{

    startOfWeek: 'monday',
    separator: ' to ',
    format: 'DD/MM/YYYY HH:mm',
    autoClose: false,
    showShortcuts: true,
    inline: false,
    alwaysOpen: false,
    applyBtnClass: '',
    // container: '#date-range18-container',
    //    shortcuts:
    //{
    //    'prev-days': [1, 3, 5, 7],
    //    'next-days': [3, 5, 7],
    //    'prev': ['week', 'month', 'year'],
    //    'next': ['week', 'month', 'year']
    //},

    customShortcuts:
    [
        //if return an array of two dates, it will select the date range between the two dates
        {
            name: 'this week',
            dates: function () {
                var start = moment().day(0).toDate();
                var end = moment().day(6).toDate();
                // start.setDate(1);
                // end.setDate(30);
                return [start, end];
            }
        },
        ////if only return an array of one date, it will display the month which containing the date. and it will not select any date range
        //{
        //    name: 'Oct 2014',
        //    dates : function()
        //    {
        //        //move calendars to show this date's month and next month
        //        var movetodate = moment('2014-10','YYYY-MM').toDate();
        //        return [movetodate];
        //    }
        //}
    ],

    time: {
        enabled: true
    },

    getValue: function () {
        return this.innerHTML;
    },
    setValue: function (s) {
        this.innerHTML = s;
    }
})
    .bind('datepicker-apply', function (event, obj) {
        $("#fromdate").val(obj.date1.toISOString());
        $("#todate").val(obj.date2.toISOString());
        Save_Date_Time(moment(obj.date1).format("DD/MM/YYYY HH:mm:ss"), moment(obj.date2).format("DD/MM/YYYY HH:mm:ss"))        
        
        list_of_Charts = []; // this variable is define in the InitializeChart.js
        //when date change reload the charts
        chart_data_binding(null);

    }).bind('datepicker-first-date-selected', function (event, obj) {
        /* This event will be triggered when first date is selected */
        // console.log(obj);
        // obj will be something like this:
        // {
        // 		date1: (Date object of the earlier date)
        // }
    })
.bind('datepicker-change', function (event, obj) {
    /* This event will be triggered when second date is selected */
    // console.log(obj);
    // obj will be something like this:
    // {
    // 		date1: (Date object of the earlier date),
    // 		date2: (Date object of the later date),
    //	 	value: "2013-06-05 to 2013-06-07"
    // }
});

        //Set Date in local storage
        var fromdate = moment().add('days', -30).format("DD/MM/YYYY HH:mm:ss");
        var todate = moment().format("DD/MM/YYYY HH:mm:ss");
        if (typeof (Storage) !== 'undefined') {
            fromdate = localStorage.getItem("l_start_date");
            todate = localStorage.getItem("l_end_date");
        }

        if (!fromdate || !todate) {

            fromdate = moment().add('days', -30).format("DD/MM/YYYY HH:mm:ss");
            todate = moment().format("DD/MM/YYYY HH:mm:ss");
            //End Date in local storage
        }


        $('#date-range18').data('dateRangePicker').setDateRange(fromdate, todate);

        var fromdate1 = moment(fromdate, "DD/MM/YYYY hh:mm:ss");
        var todate1 = moment(todate, "DD/MM/YYYY hh:mm:ss");

        //Please must resolve the issue of +1 add , Check this link http://stackoverflow.com/questions/13817108/asp-net-web-api-datetime-format
        $("#fromdate").val(fromdate1.format());
        $("#todate").val(todate1.format());



    })();

 

    function Save_Date_Time(l_start_date_time, l_end_date_time) {
        if (typeof (Storage) !== 'undefined') {
            localStorage.setItem("l_start_date", l_start_date_time);
            localStorage.setItem("l_end_date", l_end_date_time);
        }
    }

</script>
