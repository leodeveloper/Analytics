
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/customdatetime/css/daterangepicker.css" rel="stylesheet" />
<script src="~/Content/customdatetime/js/moment.min.js"></script>
<script src="~/Content/customdatetime/js/jquery.daterangepicker.js"></script>

<script>
    //$('#date-range1').dateRangePicker(
	//{
	//    startOfWeek: 'monday',
	//    separator: ' to ',
	//    format: 'DD/MM/YYYY HH:mm',
	//    autoClose: false,
	//    time: {
	//        enabled: true
	//    }
    //});


    $(document).ready(function () {

        var today = moment();
        var tomorrow = today.add(-1,'days');

      //  console.log(moment());
      //  console.log(tomorrow);



        // Your moment
        var mmt = moment();

        // Your moment at midnight
        var mmtMidnight = mmt.startOf('day',-1);

        console.log(mmtMidnight);

        console.log(moment().endOf("day"));

        var start = moment().startOf('week');
        var end = moment().endOf('week');
        var actual = moment.min(start).max(end);

        console.log(start);
        console.log(start.valueOf());

        //console.log(moment.duration(2, 'seconds'));
        //console.log(moment.duration(2, 'minutes'));
        //console.log(moment.duration(2, 'hours'));
        //console.log( moment.duration(2, 'days'));
        //console.log(moment.duration(2, 'weeks'));
        //console.log(moment.duration(2, 'months'));
        //console.log(moment.duration(2, 'years'));
        //console.log(moment.duration('23:59:59'));

        //console.log(moment.duration(120, 'minutes').hours());
        //console.log(moment.duration(2, 'hours').asHours());

        $("#compareTo").hide();

      

        $('#date-range16-open').click(function (evt) {
            evt.stopPropagation();
            $('#date-range16').data('dateRangePicker').open();

            if ($('#chk_compare').attr('checked')) {
                $('#date-range17').data('dateRangePicker').open();
            }
        });

        $('#chk_compare').click(function () {


            if ($(this).is(":checked")) {                
                $("#compareTo").show();               
            }
            else
            {
                $("#compareTo").hide();
            }

        });
        

      $('#date-range17').dateRangePicker(
          {

              startOfWeek: 'monday',
              separator: ' to ',
              format: 'DD/MM/YYYY HH:mm',
              autoClose: false,
              showShortcuts: true,
              inline: true,
              alwaysOpen:false ,
              container: '#date-range17-container',
              shortcuts:
          {
              'prev-days': [1, 3, 5, 7],
              'next-days': [3, 5, 7],
              'prev': ['week', 'month', 'year'],
              'next': ['week', 'month', 'year']
          },

              customShortcuts:
              [
                  //if return an array of two dates, it will select the date range between the two dates
                  {
                      name: 'this week',
                      dates: function () {
                          var start = moment().day(0).toDate();
                          var end = moment().day(6).toDate();
                          // start.setDate(1);
                          // end.setDate(30);
                          return [start, end];
                      }
                  },
                  ////if only return an array of one date, it will display the month which containing the date. and it will not select any date range
                  //{
                  //    name: 'Oct 2014',
                  //    dates : function()
                  //    {
                  //        //move calendars to show this date's month and next month
                  //        var movetodate = moment('2014-10','YYYY-MM').toDate();
                  //        return [movetodate];
                  //    }
                  //}
              ],

              time: {
                  enabled: true
              },

              getValue: function () {
                  return this.innerHTML;
              },
              setValue: function (s) {
                  this.innerHTML = s;
              }
          }).bind('datepicker-change', function (event, obj) {
             // console.log(obj);
              // obj will be something like this:
              // {
              // 		date1: (Date object of the earlier date),
              // 		date2: (Date object of the later date),
              //	 	value: "2013-06-05 to 2013-06-07"
              // }
          });

  

        $('#date-range16').dateRangePicker(
          {

              startOfWeek: 'monday',
              separator: ' to ',
              format: 'DD/MM/YYYY HH:mm',
              autoClose: false,
              showShortcuts: true,
              inline: true,
              alwaysOpen:false ,
              container: '#date-range16-container',
              shortcuts:
          {
              'prev-days': [1, 3, 5, 7],
              'next-days': [3, 5, 7],
              'prev': ['week', 'month', 'year'],
              'next': ['week', 'month', 'year']
          },

              customShortcuts:
              [
                  //if return an array of two dates, it will select the date range between the two dates
                  {
                      name: 'this week',
                      dates: function () {
                          var start = moment().day(0).toDate();
                          var end = moment().day(6).toDate();
                          // start.setDate(1);
                          // end.setDate(30);
                          return [start, end];
                      }
                  },
                  ////if only return an array of one date, it will display the month which containing the date. and it will not select any date range
                  //{
                  //    name: 'Oct 2014',
                  //    dates : function()
                  //    {
                  //        //move calendars to show this date's month and next month
                  //        var movetodate = moment('2014-10','YYYY-MM').toDate();
                  //        return [movetodate];
                  //    }
                  //}
              ],

              time: {
                  enabled: true
              },

              getValue: function () {
                  return this.innerHTML;
              },
              setValue: function (s) {
                  this.innerHTML = s;
              }
          }).bind('datepicker-change', function (event, obj) {
             console.log(obj);
              // obj will be something like this:
              // {
              // 		date1: (Date object of the earlier date),
              // 		date2: (Date object of the later date),
              //	 	value: "2013-06-05 to 2013-06-07"
              // }
          });

        $('#date-range16').data('dateRangePicker').setDateRange('01/04/2015 10:33', '18/04/2015 10:33');
        $('#date-range17').data('dateRangePicker').setDateRange('01/04/2015 10:33', '18/04/2015 10:33');

    });

  
</script>

<h2>Index</h2>

<form id="frmtest" >
    <div class="form-group">
        <label class="control-label col-md-4 col-sm-4" for="email">Timeline :</label>
        <div class="col-md-8 col-sm-6">

            <table class="table table-condensed">
                <tr>
                    <td>

                        
                    </td>

                </tr>
                <tr>
                    <td>

                        <div  class="input-group">                         

                                <table>
                                     <tr>
                                        <td>

                                         

                                                <table>
                                                    <tr>
                                                        <td><div class="input-group"><span class="form-control" id="date-range16"></span><span id="date-range16-open" class="input-group-addon"><i class="fa fa-calendar"></i></span></div></td>
                                                    </tr>
                                                    <tr>
                                                        <td><div class="input-group">
    <span class="input-group-addon"><input type="checkbox" id="chk_compare" />Compare to </span>
                                                            <div id="compareTo">
                                                                <span class="form-control" id="date-range17"></span>
                                                            </div>
    
   
</div>
                                                        </td>
                                                    </tr>
                                                </table>                                            
                                            
                                            <table>
                                                <tr>
                                                    <td><span id="date-range16-container"></span></td>
                                                    <td><span id="date-range17-container"></span></td>
                                                </tr>
                                            </table>
                                            
                                            
                                        </td>
                                    </tr>
                                </table>
                             
</div>
                    
                    </td>

                </tr>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            </table>







        </div>
    </div>
</form>



