

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.00.0593 */
/* at Thu Feb 20 19:53:42 2014
 */
/* Compiler settings for dts.idl:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.00.0593 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__


#ifndef __dts_h__
#define __dts_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IDTSPackageVersionUpdate100_FWD_DEFINED__
#define __IDTSPackageVersionUpdate100_FWD_DEFINED__
typedef interface IDTSPackageVersionUpdate100 IDTSPackageVersionUpdate100;

#endif 	/* __IDTSPackageVersionUpdate100_FWD_DEFINED__ */


#ifndef __IDTSObjectVersionUpdate100_FWD_DEFINED__
#define __IDTSObjectVersionUpdate100_FWD_DEFINED__
typedef interface IDTSObjectVersionUpdate100 IDTSObjectVersionUpdate100;

#endif 	/* __IDTSObjectVersionUpdate100_FWD_DEFINED__ */


#ifndef __IDTSManagedWrapper100_FWD_DEFINED__
#define __IDTSManagedWrapper100_FWD_DEFINED__
typedef interface IDTSManagedWrapper100 IDTSManagedWrapper100;

#endif 	/* __IDTSManagedWrapper100_FWD_DEFINED__ */


#ifndef __IDTSManagedForEachEnumeratorWrapper100_FWD_DEFINED__
#define __IDTSManagedForEachEnumeratorWrapper100_FWD_DEFINED__
typedef interface IDTSManagedForEachEnumeratorWrapper100 IDTSManagedForEachEnumeratorWrapper100;

#endif 	/* __IDTSManagedForEachEnumeratorWrapper100_FWD_DEFINED__ */


#ifndef __IDTSEvaluatorContext100_FWD_DEFINED__
#define __IDTSEvaluatorContext100_FWD_DEFINED__
typedef interface IDTSEvaluatorContext100 IDTSEvaluatorContext100;

#endif 	/* __IDTSEvaluatorContext100_FWD_DEFINED__ */


#ifndef __IDTSExpressionEvaluator100_FWD_DEFINED__
#define __IDTSExpressionEvaluator100_FWD_DEFINED__
typedef interface IDTSExpressionEvaluator100 IDTSExpressionEvaluator100;

#endif 	/* __IDTSExpressionEvaluator100_FWD_DEFINED__ */


#ifndef __IDTSManagedTask100_FWD_DEFINED__
#define __IDTSManagedTask100_FWD_DEFINED__
typedef interface IDTSManagedTask100 IDTSManagedTask100;

#endif 	/* __IDTSManagedTask100_FWD_DEFINED__ */


#ifndef __IDTSManagedXmlSerializationHelper100_FWD_DEFINED__
#define __IDTSManagedXmlSerializationHelper100_FWD_DEFINED__
typedef interface IDTSManagedXmlSerializationHelper100 IDTSManagedXmlSerializationHelper100;

#endif 	/* __IDTSManagedXmlSerializationHelper100_FWD_DEFINED__ */


#ifndef __IDTSManagedHelper100_FWD_DEFINED__
#define __IDTSManagedHelper100_FWD_DEFINED__
typedef interface IDTSManagedHelper100 IDTSManagedHelper100;

#endif 	/* __IDTSManagedHelper100_FWD_DEFINED__ */


#ifndef __IDTSManagedPropertyHelper100_FWD_DEFINED__
#define __IDTSManagedPropertyHelper100_FWD_DEFINED__
typedef interface IDTSManagedPropertyHelper100 IDTSManagedPropertyHelper100;

#endif 	/* __IDTSManagedPropertyHelper100_FWD_DEFINED__ */


#ifndef __IDTSManagedSerializer100_FWD_DEFINED__
#define __IDTSManagedSerializer100_FWD_DEFINED__
typedef interface IDTSManagedSerializer100 IDTSManagedSerializer100;

#endif 	/* __IDTSManagedSerializer100_FWD_DEFINED__ */


#ifndef __IDTSTaskCreator100_FWD_DEFINED__
#define __IDTSTaskCreator100_FWD_DEFINED__
typedef interface IDTSTaskCreator100 IDTSTaskCreator100;

#endif 	/* __IDTSTaskCreator100_FWD_DEFINED__ */


#ifndef __IDTSRuntimeObject100_FWD_DEFINED__
#define __IDTSRuntimeObject100_FWD_DEFINED__
typedef interface IDTSRuntimeObject100 IDTSRuntimeObject100;

#endif 	/* __IDTSRuntimeObject100_FWD_DEFINED__ */


#ifndef __IDTSExecutables100_FWD_DEFINED__
#define __IDTSExecutables100_FWD_DEFINED__
typedef interface IDTSExecutables100 IDTSExecutables100;

#endif 	/* __IDTSExecutables100_FWD_DEFINED__ */


#ifndef __IDTSProperties100_FWD_DEFINED__
#define __IDTSProperties100_FWD_DEFINED__
typedef interface IDTSProperties100 IDTSProperties100;

#endif 	/* __IDTSProperties100_FWD_DEFINED__ */


#ifndef __IDTSConfigurations100_FWD_DEFINED__
#define __IDTSConfigurations100_FWD_DEFINED__
typedef interface IDTSConfigurations100 IDTSConfigurations100;

#endif 	/* __IDTSConfigurations100_FWD_DEFINED__ */


#ifndef __IDTSPackageInfos100_FWD_DEFINED__
#define __IDTSPackageInfos100_FWD_DEFINED__
typedef interface IDTSPackageInfos100 IDTSPackageInfos100;

#endif 	/* __IDTSPackageInfos100_FWD_DEFINED__ */


#ifndef __IDTSDBProviderInfos100_FWD_DEFINED__
#define __IDTSDBProviderInfos100_FWD_DEFINED__
typedef interface IDTSDBProviderInfos100 IDTSDBProviderInfos100;

#endif 	/* __IDTSDBProviderInfos100_FWD_DEFINED__ */


#ifndef __IDTSTaskInfos100_FWD_DEFINED__
#define __IDTSTaskInfos100_FWD_DEFINED__
typedef interface IDTSTaskInfos100 IDTSTaskInfos100;

#endif 	/* __IDTSTaskInfos100_FWD_DEFINED__ */


#ifndef __IDTSPipelineComponentInfos100_FWD_DEFINED__
#define __IDTSPipelineComponentInfos100_FWD_DEFINED__
typedef interface IDTSPipelineComponentInfos100 IDTSPipelineComponentInfos100;

#endif 	/* __IDTSPipelineComponentInfos100_FWD_DEFINED__ */


#ifndef __IDTSConnectionInfo100_FWD_DEFINED__
#define __IDTSConnectionInfo100_FWD_DEFINED__
typedef interface IDTSConnectionInfo100 IDTSConnectionInfo100;

#endif 	/* __IDTSConnectionInfo100_FWD_DEFINED__ */


#ifndef __IDTSConnectionInfos100_FWD_DEFINED__
#define __IDTSConnectionInfos100_FWD_DEFINED__
typedef interface IDTSConnectionInfos100 IDTSConnectionInfos100;

#endif 	/* __IDTSConnectionInfos100_FWD_DEFINED__ */


#ifndef __IDTSEventHandlers100_FWD_DEFINED__
#define __IDTSEventHandlers100_FWD_DEFINED__
typedef interface IDTSEventHandlers100 IDTSEventHandlers100;

#endif 	/* __IDTSEventHandlers100_FWD_DEFINED__ */


#ifndef __IDTSErrors100_FWD_DEFINED__
#define __IDTSErrors100_FWD_DEFINED__
typedef interface IDTSErrors100 IDTSErrors100;

#endif 	/* __IDTSErrors100_FWD_DEFINED__ */


#ifndef __IDTSWarnings100_FWD_DEFINED__
#define __IDTSWarnings100_FWD_DEFINED__
typedef interface IDTSWarnings100 IDTSWarnings100;

#endif 	/* __IDTSWarnings100_FWD_DEFINED__ */


#ifndef __IDTSVariables100_FWD_DEFINED__
#define __IDTSVariables100_FWD_DEFINED__
typedef interface IDTSVariables100 IDTSVariables100;

#endif 	/* __IDTSVariables100_FWD_DEFINED__ */


#ifndef __IDTSVariableDispenser100_FWD_DEFINED__
#define __IDTSVariableDispenser100_FWD_DEFINED__
typedef interface IDTSVariableDispenser100 IDTSVariableDispenser100;

#endif 	/* __IDTSVariableDispenser100_FWD_DEFINED__ */


#ifndef __IDTSUnsafeVariables100_FWD_DEFINED__
#define __IDTSUnsafeVariables100_FWD_DEFINED__
typedef interface IDTSUnsafeVariables100 IDTSUnsafeVariables100;

#endif 	/* __IDTSUnsafeVariables100_FWD_DEFINED__ */


#ifndef __IDTSCloneVariableDispenser100_FWD_DEFINED__
#define __IDTSCloneVariableDispenser100_FWD_DEFINED__
typedef interface IDTSCloneVariableDispenser100 IDTSCloneVariableDispenser100;

#endif 	/* __IDTSCloneVariableDispenser100_FWD_DEFINED__ */


#ifndef __IDTSExtendedProperties100_FWD_DEFINED__
#define __IDTSExtendedProperties100_FWD_DEFINED__
typedef interface IDTSExtendedProperties100 IDTSExtendedProperties100;

#endif 	/* __IDTSExtendedProperties100_FWD_DEFINED__ */


#ifndef __IDTSConnections100_FWD_DEFINED__
#define __IDTSConnections100_FWD_DEFINED__
typedef interface IDTSConnections100 IDTSConnections100;

#endif 	/* __IDTSConnections100_FWD_DEFINED__ */


#ifndef __IDTSPrecedenceConstraints100_FWD_DEFINED__
#define __IDTSPrecedenceConstraints100_FWD_DEFINED__
typedef interface IDTSPrecedenceConstraints100 IDTSPrecedenceConstraints100;

#endif 	/* __IDTSPrecedenceConstraints100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManager100_FWD_DEFINED__
#define __IDTSConnectionManager100_FWD_DEFINED__
typedef interface IDTSConnectionManager100 IDTSConnectionManager100;

#endif 	/* __IDTSConnectionManager100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerVariables100_FWD_DEFINED__
#define __IDTSConnectionManagerVariables100_FWD_DEFINED__
typedef interface IDTSConnectionManagerVariables100 IDTSConnectionManagerVariables100;

#endif 	/* __IDTSConnectionManagerVariables100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerInit100_FWD_DEFINED__
#define __IDTSConnectionManagerInit100_FWD_DEFINED__
typedef interface IDTSConnectionManagerInit100 IDTSConnectionManagerInit100;

#endif 	/* __IDTSConnectionManagerInit100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerMarshalControl100_FWD_DEFINED__
#define __IDTSConnectionManagerMarshalControl100_FWD_DEFINED__
typedef interface IDTSConnectionManagerMarshalControl100 IDTSConnectionManagerMarshalControl100;

#endif 	/* __IDTSConnectionManagerMarshalControl100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerDatabaseParameters100_FWD_DEFINED__
#define __IDTSConnectionManagerDatabaseParameters100_FWD_DEFINED__
typedef interface IDTSConnectionManagerDatabaseParameters100 IDTSConnectionManagerDatabaseParameters100;

#endif 	/* __IDTSConnectionManagerDatabaseParameters100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerFile100_FWD_DEFINED__
#define __IDTSConnectionManagerFile100_FWD_DEFINED__
typedef interface IDTSConnectionManagerFile100 IDTSConnectionManagerFile100;

#endif 	/* __IDTSConnectionManagerFile100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerFlatFile100_FWD_DEFINED__
#define __IDTSConnectionManagerFlatFile100_FWD_DEFINED__
typedef interface IDTSConnectionManagerFlatFile100 IDTSConnectionManagerFlatFile100;

#endif 	/* __IDTSConnectionManagerFlatFile100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerFlatFileColumn100_FWD_DEFINED__
#define __IDTSConnectionManagerFlatFileColumn100_FWD_DEFINED__
typedef interface IDTSConnectionManagerFlatFileColumn100 IDTSConnectionManagerFlatFileColumn100;

#endif 	/* __IDTSConnectionManagerFlatFileColumn100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerFlatFileColumns100_FWD_DEFINED__
#define __IDTSConnectionManagerFlatFileColumns100_FWD_DEFINED__
typedef interface IDTSConnectionManagerFlatFileColumns100 IDTSConnectionManagerFlatFileColumns100;

#endif 	/* __IDTSConnectionManagerFlatFileColumns100_FWD_DEFINED__ */


#ifndef __IDTSODBCHandles100_FWD_DEFINED__
#define __IDTSODBCHandles100_FWD_DEFINED__
typedef interface IDTSODBCHandles100 IDTSODBCHandles100;

#endif 	/* __IDTSODBCHandles100_FWD_DEFINED__ */


#ifndef __IDTSForEachEnumerator100_FWD_DEFINED__
#define __IDTSForEachEnumerator100_FWD_DEFINED__
typedef interface IDTSForEachEnumerator100 IDTSForEachEnumerator100;

#endif 	/* __IDTSForEachEnumerator100_FWD_DEFINED__ */


#ifndef __IDTSForEachEnumeratorInfo100_FWD_DEFINED__
#define __IDTSForEachEnumeratorInfo100_FWD_DEFINED__
typedef interface IDTSForEachEnumeratorInfo100 IDTSForEachEnumeratorInfo100;

#endif 	/* __IDTSForEachEnumeratorInfo100_FWD_DEFINED__ */


#ifndef __IDTSForEachEnumeratorInfos100_FWD_DEFINED__
#define __IDTSForEachEnumeratorInfos100_FWD_DEFINED__
typedef interface IDTSForEachEnumeratorInfos100 IDTSForEachEnumeratorInfos100;

#endif 	/* __IDTSForEachEnumeratorInfos100_FWD_DEFINED__ */


#ifndef __IDTSForEachVariableMappings100_FWD_DEFINED__
#define __IDTSForEachVariableMappings100_FWD_DEFINED__
typedef interface IDTSForEachVariableMappings100 IDTSForEachVariableMappings100;

#endif 	/* __IDTSForEachVariableMappings100_FWD_DEFINED__ */


#ifndef __IDTSForEachVariableMapping100_FWD_DEFINED__
#define __IDTSForEachVariableMapping100_FWD_DEFINED__
typedef interface IDTSForEachVariableMapping100 IDTSForEachVariableMapping100;

#endif 	/* __IDTSForEachVariableMapping100_FWD_DEFINED__ */


#ifndef __IDTSForEachItemValue100_FWD_DEFINED__
#define __IDTSForEachItemValue100_FWD_DEFINED__
typedef interface IDTSForEachItemValue100 IDTSForEachItemValue100;

#endif 	/* __IDTSForEachItemValue100_FWD_DEFINED__ */


#ifndef __IDTSForEachItem100_FWD_DEFINED__
#define __IDTSForEachItem100_FWD_DEFINED__
typedef interface IDTSForEachItem100 IDTSForEachItem100;

#endif 	/* __IDTSForEachItem100_FWD_DEFINED__ */


#ifndef __IDTSForEachItems100_FWD_DEFINED__
#define __IDTSForEachItems100_FWD_DEFINED__
typedef interface IDTSForEachItems100 IDTSForEachItems100;

#endif 	/* __IDTSForEachItems100_FWD_DEFINED__ */


#ifndef __IDTSForEachItemEnumerator100_FWD_DEFINED__
#define __IDTSForEachItemEnumerator100_FWD_DEFINED__
typedef interface IDTSForEachItemEnumerator100 IDTSForEachItemEnumerator100;

#endif 	/* __IDTSForEachItemEnumerator100_FWD_DEFINED__ */


#ifndef __IDTSObjectHost100_FWD_DEFINED__
#define __IDTSObjectHost100_FWD_DEFINED__
typedef interface IDTSObjectHost100 IDTSObjectHost100;

#endif 	/* __IDTSObjectHost100_FWD_DEFINED__ */


#ifndef __IDTSTaskHost100_FWD_DEFINED__
#define __IDTSTaskHost100_FWD_DEFINED__
typedef interface IDTSTaskHost100 IDTSTaskHost100;

#endif 	/* __IDTSTaskHost100_FWD_DEFINED__ */


#ifndef __IDTSExecutable100_FWD_DEFINED__
#define __IDTSExecutable100_FWD_DEFINED__
typedef interface IDTSExecutable100 IDTSExecutable100;

#endif 	/* __IDTSExecutable100_FWD_DEFINED__ */


#ifndef __IDTSPropertiesProvider100_FWD_DEFINED__
#define __IDTSPropertiesProvider100_FWD_DEFINED__
typedef interface IDTSPropertiesProvider100 IDTSPropertiesProvider100;

#endif 	/* __IDTSPropertiesProvider100_FWD_DEFINED__ */


#ifndef __IDTSPropertiesProviderEx100_FWD_DEFINED__
#define __IDTSPropertiesProviderEx100_FWD_DEFINED__
typedef interface IDTSPropertiesProviderEx100 IDTSPropertiesProviderEx100;

#endif 	/* __IDTSPropertiesProviderEx100_FWD_DEFINED__ */


#ifndef __IDTSContainer100_FWD_DEFINED__
#define __IDTSContainer100_FWD_DEFINED__
typedef interface IDTSContainer100 IDTSContainer100;

#endif 	/* __IDTSContainer100_FWD_DEFINED__ */


#ifndef __IDTSExecutionLocation100_FWD_DEFINED__
#define __IDTSExecutionLocation100_FWD_DEFINED__
typedef interface IDTSExecutionLocation100 IDTSExecutionLocation100;

#endif 	/* __IDTSExecutionLocation100_FWD_DEFINED__ */


#ifndef __IDTSTask100_FWD_DEFINED__
#define __IDTSTask100_FWD_DEFINED__
typedef interface IDTSTask100 IDTSTask100;

#endif 	/* __IDTSTask100_FWD_DEFINED__ */


#ifndef __IDTSProductLevel100_FWD_DEFINED__
#define __IDTSProductLevel100_FWD_DEFINED__
typedef interface IDTSProductLevel100 IDTSProductLevel100;

#endif 	/* __IDTSProductLevel100_FWD_DEFINED__ */


#ifndef __IDTSTaskInit100_FWD_DEFINED__
#define __IDTSTaskInit100_FWD_DEFINED__
typedef interface IDTSTaskInit100 IDTSTaskInit100;

#endif 	/* __IDTSTaskInit100_FWD_DEFINED__ */


#ifndef __IDTSLogProviderInit100_FWD_DEFINED__
#define __IDTSLogProviderInit100_FWD_DEFINED__
typedef interface IDTSLogProviderInit100 IDTSLogProviderInit100;

#endif 	/* __IDTSLogProviderInit100_FWD_DEFINED__ */


#ifndef __IDTSSequence100_FWD_DEFINED__
#define __IDTSSequence100_FWD_DEFINED__
typedef interface IDTSSequence100 IDTSSequence100;

#endif 	/* __IDTSSequence100_FWD_DEFINED__ */


#ifndef __IDTSForEachLoop100_FWD_DEFINED__
#define __IDTSForEachLoop100_FWD_DEFINED__
typedef interface IDTSForEachLoop100 IDTSForEachLoop100;

#endif 	/* __IDTSForEachLoop100_FWD_DEFINED__ */


#ifndef __IDTSForLoop100_FWD_DEFINED__
#define __IDTSForLoop100_FWD_DEFINED__
typedef interface IDTSForLoop100 IDTSForLoop100;

#endif 	/* __IDTSForLoop100_FWD_DEFINED__ */


#ifndef __IDTSPackage100_FWD_DEFINED__
#define __IDTSPackage100_FWD_DEFINED__
typedef interface IDTSPackage100 IDTSPackage100;

#endif 	/* __IDTSPackage100_FWD_DEFINED__ */


#ifndef __IDTSProject100_FWD_DEFINED__
#define __IDTSProject100_FWD_DEFINED__
typedef interface IDTSProject100 IDTSProject100;

#endif 	/* __IDTSProject100_FWD_DEFINED__ */


#ifndef __IDTSProjectPackage100_FWD_DEFINED__
#define __IDTSProjectPackage100_FWD_DEFINED__
typedef interface IDTSProjectPackage100 IDTSProjectPackage100;

#endif 	/* __IDTSProjectPackage100_FWD_DEFINED__ */


#ifndef __ITaskSupportProject100_FWD_DEFINED__
#define __ITaskSupportProject100_FWD_DEFINED__
typedef interface ITaskSupportProject100 ITaskSupportProject100;

#endif 	/* __ITaskSupportProject100_FWD_DEFINED__ */


#ifndef __IDTSSupportParentExecutionPath100_FWD_DEFINED__
#define __IDTSSupportParentExecutionPath100_FWD_DEFINED__
typedef interface IDTSSupportParentExecutionPath100 IDTSSupportParentExecutionPath100;

#endif 	/* __IDTSSupportParentExecutionPath100_FWD_DEFINED__ */


#ifndef __IDTSSupportOffline100_FWD_DEFINED__
#define __IDTSSupportOffline100_FWD_DEFINED__
typedef interface IDTSSupportOffline100 IDTSSupportOffline100;

#endif 	/* __IDTSSupportOffline100_FWD_DEFINED__ */


#ifndef __ProjectConnectionsCreator_FWD_DEFINED__
#define __ProjectConnectionsCreator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ProjectConnectionsCreator ProjectConnectionsCreator;
#else
typedef struct ProjectConnectionsCreator ProjectConnectionsCreator;
#endif /* __cplusplus */

#endif 	/* __ProjectConnectionsCreator_FWD_DEFINED__ */


#ifndef __ProjectConnectionsCreatorNeutral_FWD_DEFINED__
#define __ProjectConnectionsCreatorNeutral_FWD_DEFINED__

#ifdef __cplusplus
typedef class ProjectConnectionsCreatorNeutral ProjectConnectionsCreatorNeutral;
#else
typedef struct ProjectConnectionsCreatorNeutral ProjectConnectionsCreatorNeutral;
#endif /* __cplusplus */

#endif 	/* __ProjectConnectionsCreatorNeutral_FWD_DEFINED__ */


#ifndef __IDTSProjectConnectionsCreator100_FWD_DEFINED__
#define __IDTSProjectConnectionsCreator100_FWD_DEFINED__
typedef interface IDTSProjectConnectionsCreator100 IDTSProjectConnectionsCreator100;

#endif 	/* __IDTSProjectConnectionsCreator100_FWD_DEFINED__ */


#ifndef __IDTSServerExecution100_FWD_DEFINED__
#define __IDTSServerExecution100_FWD_DEFINED__
typedef interface IDTSServerExecution100 IDTSServerExecution100;

#endif 	/* __IDTSServerExecution100_FWD_DEFINED__ */


#ifndef __IDTSProjectAccessor100_FWD_DEFINED__
#define __IDTSProjectAccessor100_FWD_DEFINED__
typedef interface IDTSProjectAccessor100 IDTSProjectAccessor100;

#endif 	/* __IDTSProjectAccessor100_FWD_DEFINED__ */


#ifndef __IDTSPerfRecorder100_FWD_DEFINED__
#define __IDTSPerfRecorder100_FWD_DEFINED__
typedef interface IDTSPerfRecorder100 IDTSPerfRecorder100;

#endif 	/* __IDTSPerfRecorder100_FWD_DEFINED__ */


#ifndef __IDTSSupportPerfRecorder100_FWD_DEFINED__
#define __IDTSSupportPerfRecorder100_FWD_DEFINED__
typedef interface IDTSSupportPerfRecorder100 IDTSSupportPerfRecorder100;

#endif 	/* __IDTSSupportPerfRecorder100_FWD_DEFINED__ */


#ifndef __IDTSDataTapConfiguration100_FWD_DEFINED__
#define __IDTSDataTapConfiguration100_FWD_DEFINED__
typedef interface IDTSDataTapConfiguration100 IDTSDataTapConfiguration100;

#endif 	/* __IDTSDataTapConfiguration100_FWD_DEFINED__ */


#ifndef __IDTSSupportDataTapConfiguration100_FWD_DEFINED__
#define __IDTSSupportDataTapConfiguration100_FWD_DEFINED__
typedef interface IDTSSupportDataTapConfiguration100 IDTSSupportDataTapConfiguration100;

#endif 	/* __IDTSSupportDataTapConfiguration100_FWD_DEFINED__ */


#ifndef __IDTSSupportVerboseLogging100_FWD_DEFINED__
#define __IDTSSupportVerboseLogging100_FWD_DEFINED__
typedef interface IDTSSupportVerboseLogging100 IDTSSupportVerboseLogging100;

#endif 	/* __IDTSSupportVerboseLogging100_FWD_DEFINED__ */


#ifndef __IDTSPackageSigning100_FWD_DEFINED__
#define __IDTSPackageSigning100_FWD_DEFINED__
typedef interface IDTSPackageSigning100 IDTSPackageSigning100;

#endif 	/* __IDTSPackageSigning100_FWD_DEFINED__ */


#ifndef __IDTSName100_FWD_DEFINED__
#define __IDTSName100_FWD_DEFINED__
typedef interface IDTSName100 IDTSName100;

#endif 	/* __IDTSName100_FWD_DEFINED__ */


#ifndef __IDTSExpression100_FWD_DEFINED__
#define __IDTSExpression100_FWD_DEFINED__
typedef interface IDTSExpression100 IDTSExpression100;

#endif 	/* __IDTSExpression100_FWD_DEFINED__ */


#ifndef __IDTSPrecedenceConstraint100_FWD_DEFINED__
#define __IDTSPrecedenceConstraint100_FWD_DEFINED__
typedef interface IDTSPrecedenceConstraint100 IDTSPrecedenceConstraint100;

#endif 	/* __IDTSPrecedenceConstraint100_FWD_DEFINED__ */


#ifndef __IDTSParameter100_FWD_DEFINED__
#define __IDTSParameter100_FWD_DEFINED__
typedef interface IDTSParameter100 IDTSParameter100;

#endif 	/* __IDTSParameter100_FWD_DEFINED__ */


#ifndef __IDTSParameters100_FWD_DEFINED__
#define __IDTSParameters100_FWD_DEFINED__
typedef interface IDTSParameters100 IDTSParameters100;

#endif 	/* __IDTSParameters100_FWD_DEFINED__ */


#ifndef __IDTSForEachItemsProvider100_FWD_DEFINED__
#define __IDTSForEachItemsProvider100_FWD_DEFINED__
typedef interface IDTSForEachItemsProvider100 IDTSForEachItemsProvider100;

#endif 	/* __IDTSForEachItemsProvider100_FWD_DEFINED__ */


#ifndef __IDTSInfoEvents100_FWD_DEFINED__
#define __IDTSInfoEvents100_FWD_DEFINED__
typedef interface IDTSInfoEvents100 IDTSInfoEvents100;

#endif 	/* __IDTSInfoEvents100_FWD_DEFINED__ */


#ifndef __IDTSComponentEvents100_FWD_DEFINED__
#define __IDTSComponentEvents100_FWD_DEFINED__
typedef interface IDTSComponentEvents100 IDTSComponentEvents100;

#endif 	/* __IDTSComponentEvents100_FWD_DEFINED__ */


#ifndef __IDTSEvents100_FWD_DEFINED__
#define __IDTSEvents100_FWD_DEFINED__
typedef interface IDTSEvents100 IDTSEvents100;

#endif 	/* __IDTSEvents100_FWD_DEFINED__ */


#ifndef __IDTSLoggingOptions100_FWD_DEFINED__
#define __IDTSLoggingOptions100_FWD_DEFINED__
typedef interface IDTSLoggingOptions100 IDTSLoggingOptions100;

#endif 	/* __IDTSLoggingOptions100_FWD_DEFINED__ */


#ifndef __IDTSLogging100_FWD_DEFINED__
#define __IDTSLogging100_FWD_DEFINED__
typedef interface IDTSLogging100 IDTSLogging100;

#endif 	/* __IDTSLogging100_FWD_DEFINED__ */


#ifndef __IDTSLogProvider100_FWD_DEFINED__
#define __IDTSLogProvider100_FWD_DEFINED__
typedef interface IDTSLogProvider100 IDTSLogProvider100;

#endif 	/* __IDTSLogProvider100_FWD_DEFINED__ */


#ifndef __IDTSLogProviders100_FWD_DEFINED__
#define __IDTSLogProviders100_FWD_DEFINED__
typedef interface IDTSLogProviders100 IDTSLogProviders100;

#endif 	/* __IDTSLogProviders100_FWD_DEFINED__ */


#ifndef __IDTSSelectedLogProviders100_FWD_DEFINED__
#define __IDTSSelectedLogProviders100_FWD_DEFINED__
typedef interface IDTSSelectedLogProviders100 IDTSSelectedLogProviders100;

#endif 	/* __IDTSSelectedLogProviders100_FWD_DEFINED__ */


#ifndef __IDTSLogProviderInfo100_FWD_DEFINED__
#define __IDTSLogProviderInfo100_FWD_DEFINED__
typedef interface IDTSLogProviderInfo100 IDTSLogProviderInfo100;

#endif 	/* __IDTSLogProviderInfo100_FWD_DEFINED__ */


#ifndef __IDTSLogProviderInfos100_FWD_DEFINED__
#define __IDTSLogProviderInfos100_FWD_DEFINED__
typedef interface IDTSLogProviderInfos100 IDTSLogProviderInfos100;

#endif 	/* __IDTSLogProviderInfos100_FWD_DEFINED__ */


#ifndef __IDTSEventsProvider100_FWD_DEFINED__
#define __IDTSEventsProvider100_FWD_DEFINED__
typedef interface IDTSEventsProvider100 IDTSEventsProvider100;

#endif 	/* __IDTSEventsProvider100_FWD_DEFINED__ */


#ifndef __IDTSEventInfos100_FWD_DEFINED__
#define __IDTSEventInfos100_FWD_DEFINED__
typedef interface IDTSEventInfos100 IDTSEventInfos100;

#endif 	/* __IDTSEventInfos100_FWD_DEFINED__ */


#ifndef __IDTSEventInfo100_FWD_DEFINED__
#define __IDTSEventInfo100_FWD_DEFINED__
typedef interface IDTSEventInfo100 IDTSEventInfo100;

#endif 	/* __IDTSEventInfo100_FWD_DEFINED__ */


#ifndef __IDTSDowngradableObject100_FWD_DEFINED__
#define __IDTSDowngradableObject100_FWD_DEFINED__
typedef interface IDTSDowngradableObject100 IDTSDowngradableObject100;

#endif 	/* __IDTSDowngradableObject100_FWD_DEFINED__ */


#ifndef __IDTSDowngradeSettings100_FWD_DEFINED__
#define __IDTSDowngradeSettings100_FWD_DEFINED__
typedef interface IDTSDowngradeSettings100 IDTSDowngradeSettings100;

#endif 	/* __IDTSDowngradeSettings100_FWD_DEFINED__ */


#ifndef __IDTSLogEntryInfos100_FWD_DEFINED__
#define __IDTSLogEntryInfos100_FWD_DEFINED__
typedef interface IDTSLogEntryInfos100 IDTSLogEntryInfos100;

#endif 	/* __IDTSLogEntryInfos100_FWD_DEFINED__ */


#ifndef __IDTSLogEntryInfo100_FWD_DEFINED__
#define __IDTSLogEntryInfo100_FWD_DEFINED__
typedef interface IDTSLogEntryInfo100 IDTSLogEntryInfo100;

#endif 	/* __IDTSLogEntryInfo100_FWD_DEFINED__ */


#ifndef __IDTSProperty100_FWD_DEFINED__
#define __IDTSProperty100_FWD_DEFINED__
typedef interface IDTSProperty100 IDTSProperty100;

#endif 	/* __IDTSProperty100_FWD_DEFINED__ */


#ifndef __IDTSHasInternalProperties100_FWD_DEFINED__
#define __IDTSHasInternalProperties100_FWD_DEFINED__
typedef interface IDTSHasInternalProperties100 IDTSHasInternalProperties100;

#endif 	/* __IDTSHasInternalProperties100_FWD_DEFINED__ */


#ifndef __IDTSPackagePath100_FWD_DEFINED__
#define __IDTSPackagePath100_FWD_DEFINED__
typedef interface IDTSPackagePath100 IDTSPackagePath100;

#endif 	/* __IDTSPackagePath100_FWD_DEFINED__ */


#ifndef __IDTSDynamicName100_FWD_DEFINED__
#define __IDTSDynamicName100_FWD_DEFINED__
typedef interface IDTSDynamicName100 IDTSDynamicName100;

#endif 	/* __IDTSDynamicName100_FWD_DEFINED__ */


#ifndef __IDTSExecutionPath100_FWD_DEFINED__
#define __IDTSExecutionPath100_FWD_DEFINED__
typedef interface IDTSExecutionPath100 IDTSExecutionPath100;

#endif 	/* __IDTSExecutionPath100_FWD_DEFINED__ */


#ifndef __IDTSPackageInfo100_FWD_DEFINED__
#define __IDTSPackageInfo100_FWD_DEFINED__
typedef interface IDTSPackageInfo100 IDTSPackageInfo100;

#endif 	/* __IDTSPackageInfo100_FWD_DEFINED__ */


#ifndef __IDTSTaskInfo100_FWD_DEFINED__
#define __IDTSTaskInfo100_FWD_DEFINED__
typedef interface IDTSTaskInfo100 IDTSTaskInfo100;

#endif 	/* __IDTSTaskInfo100_FWD_DEFINED__ */


#ifndef __IDTSPipelineComponentInfo100_FWD_DEFINED__
#define __IDTSPipelineComponentInfo100_FWD_DEFINED__
typedef interface IDTSPipelineComponentInfo100 IDTSPipelineComponentInfo100;

#endif 	/* __IDTSPipelineComponentInfo100_FWD_DEFINED__ */


#ifndef __IDTSVariable100_FWD_DEFINED__
#define __IDTSVariable100_FWD_DEFINED__
typedef interface IDTSVariable100 IDTSVariable100;

#endif 	/* __IDTSVariable100_FWD_DEFINED__ */


#ifndef __IDTSVariableLock100_FWD_DEFINED__
#define __IDTSVariableLock100_FWD_DEFINED__
typedef interface IDTSVariableLock100 IDTSVariableLock100;

#endif 	/* __IDTSVariableLock100_FWD_DEFINED__ */


#ifndef __IDTSExtendedProperty100_FWD_DEFINED__
#define __IDTSExtendedProperty100_FWD_DEFINED__
typedef interface IDTSExtendedProperty100 IDTSExtendedProperty100;

#endif 	/* __IDTSExtendedProperty100_FWD_DEFINED__ */


#ifndef __IDTSError100_FWD_DEFINED__
#define __IDTSError100_FWD_DEFINED__
typedef interface IDTSError100 IDTSError100;

#endif 	/* __IDTSError100_FWD_DEFINED__ */


#ifndef __IDTSWarning100_FWD_DEFINED__
#define __IDTSWarning100_FWD_DEFINED__
typedef interface IDTSWarning100 IDTSWarning100;

#endif 	/* __IDTSWarning100_FWD_DEFINED__ */


#ifndef __IDTSConfiguration100_FWD_DEFINED__
#define __IDTSConfiguration100_FWD_DEFINED__
typedef interface IDTSConfiguration100 IDTSConfiguration100;

#endif 	/* __IDTSConfiguration100_FWD_DEFINED__ */


#ifndef __IDTSDBProviderInfo100_FWD_DEFINED__
#define __IDTSDBProviderInfo100_FWD_DEFINED__
typedef interface IDTSDBProviderInfo100 IDTSDBProviderInfo100;

#endif 	/* __IDTSDBProviderInfo100_FWD_DEFINED__ */


#ifndef __IDTSDataTypeInfo100_FWD_DEFINED__
#define __IDTSDataTypeInfo100_FWD_DEFINED__
typedef interface IDTSDataTypeInfo100 IDTSDataTypeInfo100;

#endif 	/* __IDTSDataTypeInfo100_FWD_DEFINED__ */


#ifndef __IDTSDataTypeInfos100_FWD_DEFINED__
#define __IDTSDataTypeInfos100_FWD_DEFINED__
typedef interface IDTSDataTypeInfos100 IDTSDataTypeInfos100;

#endif 	/* __IDTSDataTypeInfos100_FWD_DEFINED__ */


#ifndef __IDTSApplication100_FWD_DEFINED__
#define __IDTSApplication100_FWD_DEFINED__
typedef interface IDTSApplication100 IDTSApplication100;

#endif 	/* __IDTSApplication100_FWD_DEFINED__ */


#ifndef __IDTSBreakpointManager100_FWD_DEFINED__
#define __IDTSBreakpointManager100_FWD_DEFINED__
typedef interface IDTSBreakpointManager100 IDTSBreakpointManager100;

#endif 	/* __IDTSBreakpointManager100_FWD_DEFINED__ */


#ifndef __IDTSSuspend100_FWD_DEFINED__
#define __IDTSSuspend100_FWD_DEFINED__
typedef interface IDTSSuspend100 IDTSSuspend100;

#endif 	/* __IDTSSuspend100_FWD_DEFINED__ */


#ifndef __IDTSBreakpointSite100_FWD_DEFINED__
#define __IDTSBreakpointSite100_FWD_DEFINED__
typedef interface IDTSBreakpointSite100 IDTSBreakpointSite100;

#endif 	/* __IDTSBreakpointSite100_FWD_DEFINED__ */


#ifndef __IDTSBreakpointTarget100_FWD_DEFINED__
#define __IDTSBreakpointTarget100_FWD_DEFINED__
typedef interface IDTSBreakpointTarget100 IDTSBreakpointTarget100;

#endif 	/* __IDTSBreakpointTarget100_FWD_DEFINED__ */


#ifndef __IDTSBreakpointTargets100_FWD_DEFINED__
#define __IDTSBreakpointTargets100_FWD_DEFINED__
typedef interface IDTSBreakpointTargets100 IDTSBreakpointTargets100;

#endif 	/* __IDTSBreakpointTargets100_FWD_DEFINED__ */


#ifndef __IDTSComponentPersist100_FWD_DEFINED__
#define __IDTSComponentPersist100_FWD_DEFINED__
typedef interface IDTSComponentPersist100 IDTSComponentPersist100;

#endif 	/* __IDTSComponentPersist100_FWD_DEFINED__ */


#ifndef __IDTSExecutionMetrics100_FWD_DEFINED__
#define __IDTSExecutionMetrics100_FWD_DEFINED__
typedef interface IDTSExecutionMetrics100 IDTSExecutionMetrics100;

#endif 	/* __IDTSExecutionMetrics100_FWD_DEFINED__ */


#ifndef __IDTSEventHandler100_FWD_DEFINED__
#define __IDTSEventHandler100_FWD_DEFINED__
typedef interface IDTSEventHandler100 IDTSEventHandler100;

#endif 	/* __IDTSEventHandler100_FWD_DEFINED__ */


#ifndef __IDTSHttpClientConnection100_FWD_DEFINED__
#define __IDTSHttpClientConnection100_FWD_DEFINED__
typedef interface IDTSHttpClientConnection100 IDTSHttpClientConnection100;

#endif 	/* __IDTSHttpClientConnection100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerHttp100_FWD_DEFINED__
#define __IDTSConnectionManagerHttp100_FWD_DEFINED__
typedef interface IDTSConnectionManagerHttp100 IDTSConnectionManagerHttp100;

#endif 	/* __IDTSConnectionManagerHttp100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerFtp100_FWD_DEFINED__
#define __IDTSConnectionManagerFtp100_FWD_DEFINED__
typedef interface IDTSConnectionManagerFtp100 IDTSConnectionManagerFtp100;

#endif 	/* __IDTSConnectionManagerFtp100_FWD_DEFINED__ */


#ifndef __IDTSFtpClientConnection100_FWD_DEFINED__
#define __IDTSFtpClientConnection100_FWD_DEFINED__
typedef interface IDTSFtpClientConnection100 IDTSFtpClientConnection100;

#endif 	/* __IDTSFtpClientConnection100_FWD_DEFINED__ */


#ifndef __IDTSPersist100_FWD_DEFINED__
#define __IDTSPersist100_FWD_DEFINED__
typedef interface IDTSPersist100 IDTSPersist100;

#endif 	/* __IDTSPersist100_FWD_DEFINED__ */


#ifndef __IDTSPackagePersist100_FWD_DEFINED__
#define __IDTSPackagePersist100_FWD_DEFINED__
typedef interface IDTSPackagePersist100 IDTSPackagePersist100;

#endif 	/* __IDTSPackagePersist100_FWD_DEFINED__ */


#ifndef __IDTSObjectReferenceTracker100_FWD_DEFINED__
#define __IDTSObjectReferenceTracker100_FWD_DEFINED__
typedef interface IDTSObjectReferenceTracker100 IDTSObjectReferenceTracker100;

#endif 	/* __IDTSObjectReferenceTracker100_FWD_DEFINED__ */


#ifndef __IDTSEnumReferencedObjects100_FWD_DEFINED__
#define __IDTSEnumReferencedObjects100_FWD_DEFINED__
typedef interface IDTSEnumReferencedObjects100 IDTSEnumReferencedObjects100;

#endif 	/* __IDTSEnumReferencedObjects100_FWD_DEFINED__ */


#ifndef __IDTSServerUsageControl100_FWD_DEFINED__
#define __IDTSServerUsageControl100_FWD_DEFINED__
typedef interface IDTSServerUsageControl100 IDTSServerUsageControl100;

#endif 	/* __IDTSServerUsageControl100_FWD_DEFINED__ */


#ifndef __IDTSRunningPackage100_FWD_DEFINED__
#define __IDTSRunningPackage100_FWD_DEFINED__
typedef interface IDTSRunningPackage100 IDTSRunningPackage100;

#endif 	/* __IDTSRunningPackage100_FWD_DEFINED__ */


#ifndef __IDTSRunningPackages100_FWD_DEFINED__
#define __IDTSRunningPackages100_FWD_DEFINED__
typedef interface IDTSRunningPackages100 IDTSRunningPackages100;

#endif 	/* __IDTSRunningPackages100_FWD_DEFINED__ */


#ifndef __IDTSDumpConfiguration100_FWD_DEFINED__
#define __IDTSDumpConfiguration100_FWD_DEFINED__
typedef interface IDTSDumpConfiguration100 IDTSDumpConfiguration100;

#endif 	/* __IDTSDumpConfiguration100_FWD_DEFINED__ */


#ifndef __IDTSConfigurationControl100_FWD_DEFINED__
#define __IDTSConfigurationControl100_FWD_DEFINED__
typedef interface IDTSConfigurationControl100 IDTSConfigurationControl100;

#endif 	/* __IDTSConfigurationControl100_FWD_DEFINED__ */


#ifndef __IDTSPackageInternal100_FWD_DEFINED__
#define __IDTSPackageInternal100_FWD_DEFINED__
typedef interface IDTSPackageInternal100 IDTSPackageInternal100;

#endif 	/* __IDTSPackageInternal100_FWD_DEFINED__ */


#ifndef __IDTSVariableCreator100_FWD_DEFINED__
#define __IDTSVariableCreator100_FWD_DEFINED__
typedef interface IDTSVariableCreator100 IDTSVariableCreator100;

#endif 	/* __IDTSVariableCreator100_FWD_DEFINED__ */


#ifndef __Package_FWD_DEFINED__
#define __Package_FWD_DEFINED__

#ifdef __cplusplus
typedef class Package Package;
#else
typedef struct Package Package;
#endif /* __cplusplus */

#endif 	/* __Package_FWD_DEFINED__ */


#ifndef __PackageNeutral_FWD_DEFINED__
#define __PackageNeutral_FWD_DEFINED__

#ifdef __cplusplus
typedef class PackageNeutral PackageNeutral;
#else
typedef struct PackageNeutral PackageNeutral;
#endif /* __cplusplus */

#endif 	/* __PackageNeutral_FWD_DEFINED__ */


#ifndef __PackageRemote32_FWD_DEFINED__
#define __PackageRemote32_FWD_DEFINED__

#ifdef __cplusplus
typedef class PackageRemote32 PackageRemote32;
#else
typedef struct PackageRemote32 PackageRemote32;
#endif /* __cplusplus */

#endif 	/* __PackageRemote32_FWD_DEFINED__ */


#ifndef __PackageRemote64_FWD_DEFINED__
#define __PackageRemote64_FWD_DEFINED__

#ifdef __cplusplus
typedef class PackageRemote64 PackageRemote64;
#else
typedef struct PackageRemote64 PackageRemote64;
#endif /* __cplusplus */

#endif 	/* __PackageRemote64_FWD_DEFINED__ */


#ifndef __TaskCreator32_FWD_DEFINED__
#define __TaskCreator32_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskCreator32 TaskCreator32;
#else
typedef struct TaskCreator32 TaskCreator32;
#endif /* __cplusplus */

#endif 	/* __TaskCreator32_FWD_DEFINED__ */


#ifndef __TaskCreator64_FWD_DEFINED__
#define __TaskCreator64_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskCreator64 TaskCreator64;
#else
typedef struct TaskCreator64 TaskCreator64;
#endif /* __cplusplus */

#endif 	/* __TaskCreator64_FWD_DEFINED__ */


#ifndef __VariableCreator_FWD_DEFINED__
#define __VariableCreator_FWD_DEFINED__

#ifdef __cplusplus
typedef class VariableCreator VariableCreator;
#else
typedef struct VariableCreator VariableCreator;
#endif /* __cplusplus */

#endif 	/* __VariableCreator_FWD_DEFINED__ */


#ifndef __TaskHost_FWD_DEFINED__
#define __TaskHost_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaskHost TaskHost;
#else
typedef struct TaskHost TaskHost;
#endif /* __cplusplus */

#endif 	/* __TaskHost_FWD_DEFINED__ */


#ifndef __EventHandler_FWD_DEFINED__
#define __EventHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class EventHandler EventHandler;
#else
typedef struct EventHandler EventHandler;
#endif /* __cplusplus */

#endif 	/* __EventHandler_FWD_DEFINED__ */


#ifndef __VariableDispenser_FWD_DEFINED__
#define __VariableDispenser_FWD_DEFINED__

#ifdef __cplusplus
typedef class VariableDispenser VariableDispenser;
#else
typedef struct VariableDispenser VariableDispenser;
#endif /* __cplusplus */

#endif 	/* __VariableDispenser_FWD_DEFINED__ */


#ifndef __Variable_FWD_DEFINED__
#define __Variable_FWD_DEFINED__

#ifdef __cplusplus
typedef class Variable Variable;
#else
typedef struct Variable Variable;
#endif /* __cplusplus */

#endif 	/* __Variable_FWD_DEFINED__ */


#ifndef __Parameter_FWD_DEFINED__
#define __Parameter_FWD_DEFINED__

#ifdef __cplusplus
typedef class Parameter Parameter;
#else
typedef struct Parameter Parameter;
#endif /* __cplusplus */

#endif 	/* __Parameter_FWD_DEFINED__ */


#ifndef __ConnectionManagerHost_FWD_DEFINED__
#define __ConnectionManagerHost_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerHost ConnectionManagerHost;
#else
typedef struct ConnectionManagerHost ConnectionManagerHost;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerHost_FWD_DEFINED__ */


#ifndef __ConnectionManagerOleDb_FWD_DEFINED__
#define __ConnectionManagerOleDb_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerOleDb ConnectionManagerOleDb;
#else
typedef struct ConnectionManagerOleDb ConnectionManagerOleDb;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerOleDb_FWD_DEFINED__ */


#ifndef __ConnectionManagerOLAP_FWD_DEFINED__
#define __ConnectionManagerOLAP_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerOLAP ConnectionManagerOLAP;
#else
typedef struct ConnectionManagerOLAP ConnectionManagerOLAP;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerOLAP_FWD_DEFINED__ */


#ifndef __ConnectionManagerOdbc_FWD_DEFINED__
#define __ConnectionManagerOdbc_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerOdbc ConnectionManagerOdbc;
#else
typedef struct ConnectionManagerOdbc ConnectionManagerOdbc;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerOdbc_FWD_DEFINED__ */


#ifndef __ConnectionManagerAdo_FWD_DEFINED__
#define __ConnectionManagerAdo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerAdo ConnectionManagerAdo;
#else
typedef struct ConnectionManagerAdo ConnectionManagerAdo;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerAdo_FWD_DEFINED__ */


#ifndef __ConnectionManagerAdoNet_FWD_DEFINED__
#define __ConnectionManagerAdoNet_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerAdoNet ConnectionManagerAdoNet;
#else
typedef struct ConnectionManagerAdoNet ConnectionManagerAdoNet;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerAdoNet_FWD_DEFINED__ */


#ifndef __ConnectionManagerSqlMobile_FWD_DEFINED__
#define __ConnectionManagerSqlMobile_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerSqlMobile ConnectionManagerSqlMobile;
#else
typedef struct ConnectionManagerSqlMobile ConnectionManagerSqlMobile;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerSqlMobile_FWD_DEFINED__ */


#ifndef __ConnectionManagerFile_FWD_DEFINED__
#define __ConnectionManagerFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerFile ConnectionManagerFile;
#else
typedef struct ConnectionManagerFile ConnectionManagerFile;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerFile_FWD_DEFINED__ */


#ifndef __ConnectionManagerMultiFile_FWD_DEFINED__
#define __ConnectionManagerMultiFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerMultiFile ConnectionManagerMultiFile;
#else
typedef struct ConnectionManagerMultiFile ConnectionManagerMultiFile;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerMultiFile_FWD_DEFINED__ */


#ifndef __ConnectionManagerFlatFile_FWD_DEFINED__
#define __ConnectionManagerFlatFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerFlatFile ConnectionManagerFlatFile;
#else
typedef struct ConnectionManagerFlatFile ConnectionManagerFlatFile;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerFlatFile_FWD_DEFINED__ */


#ifndef __ConnectionManagerMultiFlatFile_FWD_DEFINED__
#define __ConnectionManagerMultiFlatFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerMultiFlatFile ConnectionManagerMultiFlatFile;
#else
typedef struct ConnectionManagerMultiFlatFile ConnectionManagerMultiFlatFile;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerMultiFlatFile_FWD_DEFINED__ */


#ifndef __LogProviderHost_FWD_DEFINED__
#define __LogProviderHost_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogProviderHost LogProviderHost;
#else
typedef struct LogProviderHost LogProviderHost;
#endif /* __cplusplus */

#endif 	/* __LogProviderHost_FWD_DEFINED__ */


#ifndef __LogProviderSQLServer_FWD_DEFINED__
#define __LogProviderSQLServer_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogProviderSQLServer LogProviderSQLServer;
#else
typedef struct LogProviderSQLServer LogProviderSQLServer;
#endif /* __cplusplus */

#endif 	/* __LogProviderSQLServer_FWD_DEFINED__ */


#ifndef __LogProviderTextFile_FWD_DEFINED__
#define __LogProviderTextFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogProviderTextFile LogProviderTextFile;
#else
typedef struct LogProviderTextFile LogProviderTextFile;
#endif /* __cplusplus */

#endif 	/* __LogProviderTextFile_FWD_DEFINED__ */


#ifndef __LogProviderXMLFile_FWD_DEFINED__
#define __LogProviderXMLFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogProviderXMLFile LogProviderXMLFile;
#else
typedef struct LogProviderXMLFile LogProviderXMLFile;
#endif /* __cplusplus */

#endif 	/* __LogProviderXMLFile_FWD_DEFINED__ */


#ifndef __LogProviderEventLog_FWD_DEFINED__
#define __LogProviderEventLog_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogProviderEventLog LogProviderEventLog;
#else
typedef struct LogProviderEventLog LogProviderEventLog;
#endif /* __cplusplus */

#endif 	/* __LogProviderEventLog_FWD_DEFINED__ */


#ifndef __LogProviderSQLProfiler_FWD_DEFINED__
#define __LogProviderSQLProfiler_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogProviderSQLProfiler LogProviderSQLProfiler;
#else
typedef struct LogProviderSQLProfiler LogProviderSQLProfiler;
#endif /* __cplusplus */

#endif 	/* __LogProviderSQLProfiler_FWD_DEFINED__ */


#ifndef __Application_FWD_DEFINED__
#define __Application_FWD_DEFINED__

#ifdef __cplusplus
typedef class Application Application;
#else
typedef struct Application Application;
#endif /* __cplusplus */

#endif 	/* __Application_FWD_DEFINED__ */


#ifndef __Sequence_FWD_DEFINED__
#define __Sequence_FWD_DEFINED__

#ifdef __cplusplus
typedef class Sequence Sequence;
#else
typedef struct Sequence Sequence;
#endif /* __cplusplus */

#endif 	/* __Sequence_FWD_DEFINED__ */


#ifndef __ForEachLoop_FWD_DEFINED__
#define __ForEachLoop_FWD_DEFINED__

#ifdef __cplusplus
typedef class ForEachLoop ForEachLoop;
#else
typedef struct ForEachLoop ForEachLoop;
#endif /* __cplusplus */

#endif 	/* __ForEachLoop_FWD_DEFINED__ */


#ifndef __ForLoop_FWD_DEFINED__
#define __ForLoop_FWD_DEFINED__

#ifdef __cplusplus
typedef class ForLoop ForLoop;
#else
typedef struct ForLoop ForLoop;
#endif /* __cplusplus */

#endif 	/* __ForLoop_FWD_DEFINED__ */


#ifndef __PrecedenceConstraint_FWD_DEFINED__
#define __PrecedenceConstraint_FWD_DEFINED__

#ifdef __cplusplus
typedef class PrecedenceConstraint PrecedenceConstraint;
#else
typedef struct PrecedenceConstraint PrecedenceConstraint;
#endif /* __cplusplus */

#endif 	/* __PrecedenceConstraint_FWD_DEFINED__ */


#ifndef __ForEachEnumeratorHost_FWD_DEFINED__
#define __ForEachEnumeratorHost_FWD_DEFINED__

#ifdef __cplusplus
typedef class ForEachEnumeratorHost ForEachEnumeratorHost;
#else
typedef struct ForEachEnumeratorHost ForEachEnumeratorHost;
#endif /* __cplusplus */

#endif 	/* __ForEachEnumeratorHost_FWD_DEFINED__ */


#ifndef __ForEachItemEnumerator_FWD_DEFINED__
#define __ForEachItemEnumerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ForEachItemEnumerator ForEachItemEnumerator;
#else
typedef struct ForEachItemEnumerator ForEachItemEnumerator;
#endif /* __cplusplus */

#endif 	/* __ForEachItemEnumerator_FWD_DEFINED__ */


#ifndef __ExpressionEvaluator_FWD_DEFINED__
#define __ExpressionEvaluator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExpressionEvaluator ExpressionEvaluator;
#else
typedef struct ExpressionEvaluator ExpressionEvaluator;
#endif /* __cplusplus */

#endif 	/* __ExpressionEvaluator_FWD_DEFINED__ */


#ifndef __ConnectionManagerHttp_FWD_DEFINED__
#define __ConnectionManagerHttp_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerHttp ConnectionManagerHttp;
#else
typedef struct ConnectionManagerHttp ConnectionManagerHttp;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerHttp_FWD_DEFINED__ */


#ifndef __HttpClientConnection100_FWD_DEFINED__
#define __HttpClientConnection100_FWD_DEFINED__

#ifdef __cplusplus
typedef class HttpClientConnection100 HttpClientConnection100;
#else
typedef struct HttpClientConnection100 HttpClientConnection100;
#endif /* __cplusplus */

#endif 	/* __HttpClientConnection100_FWD_DEFINED__ */


#ifndef __ConnectionManagerFtp_FWD_DEFINED__
#define __ConnectionManagerFtp_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerFtp ConnectionManagerFtp;
#else
typedef struct ConnectionManagerFtp ConnectionManagerFtp;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerFtp_FWD_DEFINED__ */


#ifndef __FTPClientConnection100_FWD_DEFINED__
#define __FTPClientConnection100_FWD_DEFINED__

#ifdef __cplusplus
typedef class FTPClientConnection100 FTPClientConnection100;
#else
typedef struct FTPClientConnection100 FTPClientConnection100;
#endif /* __cplusplus */

#endif 	/* __FTPClientConnection100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerExcel100_FWD_DEFINED__
#define __IDTSConnectionManagerExcel100_FWD_DEFINED__
typedef interface IDTSConnectionManagerExcel100 IDTSConnectionManagerExcel100;

#endif 	/* __IDTSConnectionManagerExcel100_FWD_DEFINED__ */


#ifndef __ConnectionManagerExcel_FWD_DEFINED__
#define __ConnectionManagerExcel_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerExcel ConnectionManagerExcel;
#else
typedef struct ConnectionManagerExcel ConnectionManagerExcel;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerExcel_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerCacheColumn100_FWD_DEFINED__
#define __IDTSConnectionManagerCacheColumn100_FWD_DEFINED__
typedef interface IDTSConnectionManagerCacheColumn100 IDTSConnectionManagerCacheColumn100;

#endif 	/* __IDTSConnectionManagerCacheColumn100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerCacheColumns100_FWD_DEFINED__
#define __IDTSConnectionManagerCacheColumns100_FWD_DEFINED__
typedef interface IDTSConnectionManagerCacheColumns100 IDTSConnectionManagerCacheColumns100;

#endif 	/* __IDTSConnectionManagerCacheColumns100_FWD_DEFINED__ */


#ifndef __IDTSConnectionManagerCache100_FWD_DEFINED__
#define __IDTSConnectionManagerCache100_FWD_DEFINED__
typedef interface IDTSConnectionManagerCache100 IDTSConnectionManagerCache100;

#endif 	/* __IDTSConnectionManagerCache100_FWD_DEFINED__ */


#ifndef __ConnectionManagerCache_FWD_DEFINED__
#define __ConnectionManagerCache_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConnectionManagerCache ConnectionManagerCache;
#else
typedef struct ConnectionManagerCache ConnectionManagerCache;
#endif /* __cplusplus */

#endif 	/* __ConnectionManagerCache_FWD_DEFINED__ */


#ifndef __ReplacementTask_FWD_DEFINED__
#define __ReplacementTask_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReplacementTask ReplacementTask;
#else
typedef struct ReplacementTask ReplacementTask;
#endif /* __cplusplus */

#endif 	/* __ReplacementTask_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"

#ifdef __cplusplus
extern "C"{
#endif 


/* interface __MIDL_itf_dts_0000_0000 */
/* [local] */ 

// Internal DTS components
// {7C679FC1-011D-43A8-B8D6-BEFB5523E7D8}
DEFINE_GUID(CLSID_DTSManagedWrapper,
  0x7c679fc1, 0x011d, 0x43a8, 0xb8, 0xd6, 0xbe, 0xfb, 0x55, 0x23, 0xe7, 0xd8 );
// {7CE452F4-F3B9-42CD-95EE-C79AEF24F4C3}
DEFINE_GUID(CLSID_DTSManagedForEachEnumeratorWrapper,
  0x7ce452f4, 0xf3b9, 0x42cd, 0x95, 0xee, 0xc7, 0x9a, 0xef, 0x24, 0xf4, 0xc3 );
// {EF0E5837-295D-45A2-93BD-5751BB57F697}
DEFINE_GUID(CLSID_DTSManagedHelper,
  0xef0e5837, 0x295d, 0x45a2, 0x93, 0xbd, 0x57, 0x51, 0xbb, 0x57, 0xf6, 0x97 );
// {7664A6C1-2613-49C8-8835-579C74B8BDA8}
DEFINE_GUID(CLSID_DTSManagedPropertyHelper,
  0x7664a6c1, 0x2613, 0x49c8, 0x88, 0x35, 0x57, 0x9c, 0x74, 0xb8, 0xbd, 0xa8 );
DEFINE_GUID(CLSID_DTSManagedSerializer,
  0x2446dab2, 0x9843, 0x436b, 0xae, 0xe0, 0x5c, 0x47, 0xba, 0x67, 0xfa, 0xb9 );
// DTS component categories
// {B3A5BF58-5F21-4EDC-A48C-724181BDC456}
DEFINE_GUID(CATID_DTSConnectionManager,
  0xb3a5bf58, 0x5f21, 0x4edc, 0xa4, 0x8c, 0x72, 0x41, 0x81, 0xbd, 0xc4, 0x56 );
// {E5A78B62-1E70-4618-8681-299B1730E426}
DEFINE_GUID(CATID_DTSLogProvider,
  0xe5a78b62, 0x1e70, 0x4618, 0x86, 0x81, 0x29, 0x9b, 0x17, 0x30, 0xe4, 0x26 );
// {43AB3286-A5A7-4115-B091-C3127AA23AB3}
DEFINE_GUID(CATID_DTSTask,
  0x43ab3286, 0xa5a7, 0x4115, 0xb0, 0x91, 0xc3, 0x12, 0x7a, 0xa2, 0x3a, 0xb3 );
// {5F817056-9558-4FC9-B1DE-87FF04E42375}
DEFINE_GUID(CATID_DTSPipelineComponent,
  0x5f817056, 0x9558, 0x4fc9, 0xb1, 0xde, 0x87, 0xff, 0x04, 0xe4, 0x23, 0x75 );
// {348326EE-4E40-479A-83EE-E4F06DF81BF5}
DEFINE_GUID(CATID_DTSForEachEnumerator,
  0x348326ee, 0x4e40, 0x479a, 0x83, 0xee, 0xe4, 0xf0, 0x6d, 0xf8, 0x1b, 0xf5 );

DEFINE_GUID(CLSID_BreakpointManager,
  0x75772d59, 0x5bef, 0x481b, 0x9d, 0xca, 0x95, 0xf2, 0x6c, 0x49, 0x9c, 0xd2 );

DEFINE_GUID(CLSID_Breakpoint,
  0x7f34cd7b, 0x51aa, 0x44df, 0x93, 0x59, 0x71, 0x81, 0x6f, 0x63, 0x2b, 0xf5 );

DEFINE_GUID(CLSID_Breakpoints,
  0x59955caa, 0x4384, 0x4ddb, 0x92, 0xe9, 0xa2, 0xa1, 0x2d, 0xcc, 0x7f, 0x5d );

DEFINE_GUID(CLSID_GenericContainerEvents,
  0x9a0f3dce, 0xcd37, 0x4da3, 0x9f, 0x15, 0x3d, 0x47, 0x04, 0x51, 0x5d, 0x22 );

DEFINE_GUID(CLSID_TaskHostEvents,
  0x39aee58c, 0x54dc, 0x4fa8, 0xb3, 0x86, 0x0d, 0x78, 0xd7, 0x4d, 0x16, 0xf5 );

DEFINE_GUID(CLSID_EventHandlerEvents,
  0xbf699a0a, 0x08d2, 0x479b, 0xbf, 0x02, 0xd3, 0xe6, 0x3b, 0x27, 0xd3, 0x14 );

DEFINE_GUID(CLSID_ProjectAccessor,
 0xB34A3D99, 0x7C7E, 0x4192, 0xBC, 0x68, 0x4F, 0x3D, 0x6C, 0xBE, 0xC9, 0x1A );
DEFINE_GUID(CLSID_ManagedXmlSerializationHelper,
 0x80a062cf, 0xa8c4, 0x4701, 0xa9, 0xf4, 0x3b, 0x07, 0x0e, 0x4b, 0xfc, 0xec );
#ifdef _X86_
#define CLSID_TaskCreator    CLSID_TaskCreator32
#define CLSID_PackageRemote  CLSID_PackageRemote32
#else
#define CLSID_TaskCreator    CLSID_TaskCreator64
#define CLSID_PackageRemote  CLSID_PackageRemote64
#endif //_X86_
#define	DISPID_DTS_BASE	( 0 )

#define	DISPID_DTSCOLLECTION_BASE	( DISPID_VALUE )

#define	DISPOFFSET_ITEM	( 0 )

#define	DISPOFFSET_COUNT	( 1 )

#define	DISPOFFSET_ADD	( 2 )

#define	DISPOFFSET_JOIN	( 3 )

#define	DISPOFFSET_REMOVE	( 4 )

#define	DISPOFFSET_USECACHE	( 5 )

#define	DISPOFFSET_REFRESH	( 6 )

#define	DISPOFFSET_MOVEBEFORE	( 7 )

#define	DISPOFFSET_MOVEAFTER	( 8 )

#define	DISPOFFSET_PREPEND	( 9 )

#define	DISPOFFSET_APPEND	( 10 )

#define	DISPOFFSET_CLEAR	( 11 )















































































struct DTP_FILETIME
    {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
    } ;
struct DTP_BYTES
    {
    LONG lLength;
    /* [size_is][length_is] */ BYTE *pBytes;
    } ;
struct DTP_DBDATE
    {
    SHORT year;
    USHORT month;
    USHORT day;
    } ;
struct DTP_DBTIME
    {
    USHORT hour;
    USHORT minute;
    USHORT second;
    } ;
struct DTP_DBTIMESTAMP
    {
    SHORT year;
    USHORT month;
    USHORT day;
    USHORT hour;
    USHORT minute;
    USHORT second;
    ULONG fraction;
    } ;
struct DTP_DBTIMESTAMP2
    {
    SHORT year;
    USHORT month;
    USHORT day;
    USHORT hour;
    USHORT minute;
    USHORT second;
    ULONG fraction;
    } ;
#pragma warning(disable:4103)

#pragma pack(push, 8)
// We need to match the structure packing of the OLEDB structures in sqlncli.h

#include <pshpack8.h>	// 8-byte structure packing for both 32 and 64 platforms

struct DTP_DBTIME2
    {
    USHORT hour;
    USHORT minute;
    USHORT second;
    ULONG fraction;
    } ;
struct DTP_DBTIMESTAMPOFFSET
    {
    SHORT year;
    USHORT month;
    USHORT day;
    USHORT hour;
    USHORT minute;
    USHORT second;
    ULONG fraction;
    SHORT timezone_hour;
    SHORT timezone_minute;
    } ;
#include <poppack.h>     // restore original structure packing
#pragma warning(disable:4103)

#pragma pack(pop)
struct DTP_NUMERIC
    {
    BYTE Precision;
    BYTE Scale;
    BYTE sign;
    BYTE val[ 16 ];
    } ;


extern RPC_IF_HANDLE __MIDL_itf_dts_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_dts_0000_0000_v0_0_s_ifspec;


#ifndef __DTSLib_LIBRARY_DEFINED__
#define __DTSLib_LIBRARY_DEFINED__

/* library DTSLib */
/* [helpstring][version][uuid] */ 

typedef /* [v1_enum] */ 
enum DTSFileConnectionUsageType
    {
        DTSFCU_FILEEXISTS	= 0,
        DTSFCU_CREATEFILE	= ( DTSFCU_FILEEXISTS + 1 ) ,
        DTSFCU_FOLDEREXISTS	= ( DTSFCU_CREATEFILE + 1 ) ,
        DTSFCU_CREATEFOLDER	= ( DTSFCU_FOLDEREXISTS + 1 ) 
    } 	DTSFileConnectionUsageType;

typedef /* [v1_enum] */ 
enum DTSSignatureStatus
    {
        DTSSS_INVALID	= 0,
        DTSSS_NOTPRESENT	= ( DTSSS_INVALID + 1 ) ,
        DTSSS_GOOD	= ( DTSSS_NOTPRESENT + 1 ) ,
        DTSSS_UNTRUSTED	= ( DTSSS_GOOD + 1 ) 
    } 	DTSSignatureStatus;

typedef /* [v1_enum] */ 
enum DTSPipelineComponentType
    {
        DTSPCT_TRANSFORM	= 0,
        DTSPCT_SOURCEADAPTER	= ( DTSPCT_TRANSFORM + 1 ) ,
        DTSPCT_DESTINATIONADAPTER	= ( DTSPCT_SOURCEADAPTER + 1 ) ,
        DTSPCT_VIEW	= ( DTSPCT_DESTINATIONADAPTER + 1 ) 
    } 	DTSPipelineComponentType;

typedef /* [v1_enum] */ 
enum DTSExecResult
    {
        DTSER_FAILURE	= 1,
        DTSER_SUCCESS	= 0,
        DTSER_COMPLETION	= 2,
        DTSER_CANCELED	= 3
    } 	DTSExecResult;

typedef /* [v1_enum] */ 
enum DTSForcedExecResult
    {
        DTSFER_FAILURE	= DTSER_FAILURE,
        DTSFER_SUCCESS	= DTSER_SUCCESS,
        DTSFER_COMPLETION	= DTSER_COMPLETION,
        DTSFER_NONE	= -1
    } 	DTSForcedExecResult;

typedef /* [v1_enum] */ 
enum DTSCheckpointUsage
    {
        DTSCU_NEVER	= 0,
        DTSCU_IFEXISTS	= 1,
        DTSCU_ALWAYS	= 2
    } 	DTSCheckpointUsage;

typedef /* [v1_enum] */ 
enum DTSTransactionOption
    {
        DTSTO_NotSupported	= 0,
        DTSTO_Supported	= ( DTSTO_NotSupported + 1 ) ,
        DTSTO_Required	= ( DTSTO_Supported + 1 ) 
    } 	DTSTransactionOption;

typedef /* [v1_enum] */ 
enum DTSExecStatus
    {
        DTSES_NONE	= 1,
        DTSES_VALIDATING	= 2,
        DTSES_EXECUTING	= 3,
        DTSES_SUSPENDED	= 4,
        DTSES_COMPLETED	= 5,
        DTSES_ABEND	= 6
    } 	DTSExecStat;

typedef /* [v1_enum] */ 
enum DTSPackageType
    {
        DTSPKT_DEFAULT	= 0,
        DTSPKT_DTSWIZARD	= 1,
        DTSPKT_DTSDESIGNER	= 2,
        DTSPKT_SQLREPL	= 3,
        DTSPKT_DTSDESIGNER100	= 5,
        DTSPKT_SQLDBMAINT	= 6
    } 	DTSPackageType;

typedef /* [v1_enum] */ 
enum DTSLoggingMode
    {
        DTSLM_USEPARENTSETTING	= 0,
        DTSLM_ENABLED	= ( DTSLM_USEPARENTSETTING + 1 ) ,
        DTSLM_DISABLED	= ( DTSLM_ENABLED + 1 ) 
    } 	DTSLoggingMode;

typedef /* [v1_enum] */ 
enum DTSEventFilterKind
    {
        DTSEFK_INCLUSION	= 0,
        DTSEFK_EXCLUSION	= ( DTSEFK_INCLUSION + 1 ) 
    } 	DTSEventFilterKind;

typedef /* [v1_enum] */ 
enum DTSProviderType
    {
        DTSPT_OLEDB	= -1,
        DTSPT_ODBC	= -2,
        DTSPT_DTS_SOURCE	= -3,
        DTSPT_DTS_DEST	= -4,
        DTSPT_UNKNOWN	= 0
    } 	DTSProviderType;

typedef /* [v1_enum] */ 
enum DTSProviderSubType
    {
        DTSPST_ACCESS	= -1,
        DTSPST_EXCEL	= -2,
        DTSPST_PARADOX	= -3,
        DTSPST_SQLSERVER	= -4,
        DTSPST_DBASE	= -5,
        DTSPST_FLATFILE	= -6,
        DTSPST_ORACLE	= -7,
        DTSPST_DB2	= -8,
        DTSPST_NONE	= 0
    } 	DTSProviderSubType;

typedef /* [v1_enum] */ 
enum DTSConfigurationType
    {
        DTSCT_PARENTVARIABLE	= 0,
        DTSCT_CONFIGFILE	= ( DTSCT_PARENTVARIABLE + 1 ) ,
        DTSCT_ENVVARIABLE	= ( DTSCT_CONFIGFILE + 1 ) ,
        DTSCT_REGENTRY	= ( DTSCT_ENVVARIABLE + 1 ) ,
        DTSCT_IPARENTVARIABLE	= ( DTSCT_REGENTRY + 1 ) ,
        DTSCT_ICONFIGFILE	= ( DTSCT_IPARENTVARIABLE + 1 ) ,
        DTSCT_IREGENTRY	= ( DTSCT_ICONFIGFILE + 1 ) ,
        DTSCT_SQLSERVER	= ( DTSCT_IREGENTRY + 1 ) ,
        DTSCT_INIFILE	= ( DTSCT_SQLSERVER + 1 ) ,
        DTSCT_ISQLSERVER	= ( DTSCT_INIFILE + 1 ) ,
        DTSCT_IINIFILE	= ( DTSCT_ISQLSERVER + 1 ) 
    } 	DTSConfigurationType;

typedef /* [v1_enum] */ 
enum DTSBreakpointHitTest
    {
        DTSBHT_ALWAYS	= 0,
        DTSBHT_GREATER_OR_EQUAL	= ( DTSBHT_ALWAYS + 1 ) ,
        DTSBHT_EQUAL	= ( DTSBHT_GREATER_OR_EQUAL + 1 ) ,
        DTSBHT_MULTIPLE	= ( DTSBHT_EQUAL + 1 ) ,
        DTSBHT_EXPRESSION	= ( DTSBHT_MULTIPLE + 1 ) 
    } 	DTSBreakpointHitTest;

typedef /* [v1_enum] */ 
enum DTSExecutionLocation
    {
        DTSEL_INPROC_SERVER	= 0,
        DTSEL_LOCAL_SERVER	= ( DTSEL_INPROC_SERVER + 1 ) ,
        DTSEL_REMOTE_SERVER	= ( DTSEL_LOCAL_SERVER + 1 ) 
    } 	DTSExecutionLocation;

typedef /* [v1_enum] */ 
enum DTSPrecedenceEvalOp
    {
        DTSPEO_EXPRESSION	= 1,
        DTSPEO_CONSTRAINT	= 2,
        DTSPEO_EXPRESSIONANDCONSTRAINT	= 3,
        DTSPEO_EXPRESSIONORCONSTRAINT	= 4
    } 	DTSPrecedenceEvalOp;

typedef /* [v1_enum] */ 
enum DTSPriorityClass
    {
        DTSPC_DEFAULT	= 0,
        DTSPC_ABOVE_NORMAL	= 1,
        DTSPC_NORMAL	= 2,
        DTSPC_BELOW_NORMAL	= 3,
        DTSPC_IDLE	= 4
    } 	DTSPriorityClass;

typedef /* [v1_enum] */ 
enum DTSProtectionLevel
    {
        DTSPL_DONTSAVESENSITIVE	= 0,
        DTSPL_ENCRYPTSENSITIVE_USERKEY	= ( DTSPL_DONTSAVESENSITIVE + 1 ) ,
        DTSPL_ENCRYPTSENSITIVE_PASSWORD	= ( DTSPL_ENCRYPTSENSITIVE_USERKEY + 1 ) ,
        DTSPL_ENCRYPTALL_PASSWORD	= ( DTSPL_ENCRYPTSENSITIVE_PASSWORD + 1 ) ,
        DTSPL_ENCRYPTALL_USERKEY	= ( DTSPL_ENCRYPTALL_PASSWORD + 1 ) ,
        DTSPL_SERVERSTORAGE	= ( DTSPL_ENCRYPTALL_USERKEY + 1 ) 
    } 	DTSProtectionLevel;

typedef /* [v1_enum] */ 
enum DTSPackageInformationFlags
    {
        DTSPIF_FOLDER	= 0,
        DTSPIF_PACKAGE	= ( DTSPIF_FOLDER + 1 ) 
    } 	DTSPackageInformationFlags;

typedef /* [v1_enum] */ 
enum DTSObjectHostType
    {
        DTSOHT_TASK	= 0,
        DTSOHT_CONNECTIONMANAGER	= ( DTSOHT_TASK + 1 ) ,
        DTSOHT_LOGPROVIDER	= ( DTSOHT_CONNECTIONMANAGER + 1 ) ,
        DTSOHT_FOREACHENUMERATOR	= ( DTSOHT_LOGPROVIDER + 1 ) 
    } 	DTSObjectHostType;

typedef /* [v1_enum] */ 
enum DTSLogEntryFrequency
    {
        DTSLEF_OCCASIONAL	= 0,
        DTSLEF_CONSISTENT	= ( DTSLEF_OCCASIONAL + 1 ) ,
        DTSLEF_PROPORTIONAL	= ( DTSLEF_CONSISTENT + 1 ) 
    } 	DTSLogEntryFrequency;

typedef /* [v1_enum] */ 
enum DTSPropertyKind
    {
        DTSPK_OTHER	= 0,
        DTSPK_VARIABLE_READONLY	= ( DTSPK_OTHER + 1 ) ,
        DTSPK_VARIABLE_READWRITE	= ( DTSPK_VARIABLE_READONLY + 1 ) ,
        DTSPK_CONNECTION	= ( DTSPK_VARIABLE_READWRITE + 1 ) ,
        DTSPK_SENSITIVE	= ( DTSPK_CONNECTION + 1 ) 
    } 	DTSPropertyKind;

typedef /* [v1_enum] */ 
enum DTSObjectReferenceType
    {
        DTSORT_VARIABLE_READONLY	= 0,
        DTSORT_VARIABLE_READWRITE	= ( DTSORT_VARIABLE_READONLY + 1 ) ,
        DTSORT_CONNECTION	= ( DTSORT_VARIABLE_READWRITE + 1 ) 
    } 	DTSObjectReferenceType;

typedef /* [v1_enum] */ 
enum DTSExcelVersion
    {
        DTSExcelVer_3	= 0,
        DTSExcelVer_4	= 1,
        DTSExcelVer_5	= 2,
        DTSExcelVer_8	= 3,
        DTSExcelVer_2007	= 4
    } 	DTSExcelVersion;

typedef /* [v1_enum] */ 
enum DTSProductLevel
    {
        DTSPL_NONE	= 0,
        DTSPL_EXPRESS	= 5,
        DTSPL_WORKGROUP	= 10,
        DTSPL_STANDARD	= 20,
        DTSPL_ENTERPRISE	= 30
    } 	DTSProductLevel;

typedef /* [v1_enum] */ 
enum DTSEvaluatorContextOption
    {
        DTSECO_NOOPTION	= 0,
        DTSECO_REPLACE_SENSITIVEVALUE_WITH_FIXEDVALUE	= 1
    } 	DTSEvaluatorContextOption;

typedef /* [v1_enum] */ 
enum DTSServerParameterType
    {
        ProjectParameter	= 20,
        PackageParameter	= 30,
        ServerOption	= 50
    } 	DTSServerParameterType;

typedef struct DTS_EVENT_COLUMN_FILTER
    {
    VARIANT_BOOL Computer;
    VARIANT_BOOL Operator;
    VARIANT_BOOL SourceName;
    VARIANT_BOOL SourceID;
    VARIANT_BOOL ExecutionID;
    VARIANT_BOOL MessageText;
    VARIANT_BOOL DataBytes;
    } 	DTS_EVENT_COLUMN_FILTER;

typedef struct DTS_PACKAGE_UPGRADE_OPTIONS
    {
    VARIANT_BOOL UpgradeConnectionProviders;
    VARIANT_BOOL RegeneratePackageID;
    } 	DTS_PACKAGE_UPGRADE_OPTIONS;

typedef /* [v1_enum] */ 
enum DataType
    {
        DT_EMPTY	= 0,
        DT_NULL	= 1,
        DT_I2	= 2,
        DT_I4	= 3,
        DT_R4	= 4,
        DT_R8	= 5,
        DT_CY	= 6,
        DT_DATE	= 7,
        DT_BOOL	= 11,
        DT_DECIMAL	= 14,
        DT_I1	= 16,
        DT_UI1	= 17,
        DT_UI2	= 18,
        DT_UI4	= 19,
        DT_I8	= 20,
        DT_UI8	= 21,
        DT_FILETIME	= 64,
        DT_GUID	= 72,
        DT_BYTES	= 128,
        DT_STR	= 129,
        DT_WSTR	= 130,
        DT_NUMERIC	= 131,
        DT_DBDATE	= 133,
        DT_DBTIME	= 134,
        DT_DBTIMESTAMP	= 135,
        DT_DBTIME2	= 145,
        DT_DBTIMESTAMPOFFSET	= 146,
        DT_IMAGE	= 301,
        DT_TEXT	= 302,
        DT_NTEXT	= 303,
        DT_DBTIMESTAMP2	= 304,
        DT_BYREF_I2	= 16386,
        DT_BYREF_I4	= 16387,
        DT_BYREF_R4	= 16388,
        DT_BYREF_R8	= 16389,
        DT_BYREF_CY	= 16390,
        DT_BYREF_DATE	= 16391,
        DT_BYREF_BOOL	= 16395,
        DT_BYREF_DECIMAL	= 16398,
        DT_BYREF_I1	= 16400,
        DT_BYREF_UI1	= 16401,
        DT_BYREF_UI2	= 16402,
        DT_BYREF_UI4	= 16403,
        DT_BYREF_I8	= 16404,
        DT_BYREF_UI8	= 16405,
        DT_BYREF_FILETIME	= 16448,
        DT_BYREF_GUID	= 16456,
        DT_BYREF_NUMERIC	= 16515,
        DT_BYREF_DBDATE	= 16517,
        DT_BYREF_DBTIME	= 16518,
        DT_BYREF_DBTIMESTAMP	= 16519,
        DT_BYREF_DBTIME2	= 16520,
        DT_BYREF_DBTIMESTAMPOFFSET	= 16521,
        DT_BYREF_DBTIMESTAMP2	= 16522
    } 	DataType;

typedef /* [switch_type][public] */ union DTP_DATA_UNION
    {
    /* [case()] */ SHORT shortVal;
    /* [case()] */ SHORT *pshortVal;
    /* [case()] */ LONG intVal;
    /* [case()] */ INT *pintVal;
    /* [case()] */ float floatVal;
    /* [case()] */ float *pfloatVal;
    /* [case()] */ double doubleVal;
    /* [case()] */ double *pdoubleVal;
    /* [case()] */ CY cyVal;
    /* [case()] */ CY *pcyVal;
    /* [case()] */ DATE dateVal;
    /* [case()] */ DATE *pdateVal;
    /* [case()] */ VARIANT_BOOL boolVal;
    /* [case()] */ VARIANT_BOOL *pboolVal;
    /* [case()] */ DECIMAL decVal;
    /* [case()] */ DECIMAL *pdecVal;
    /* [case()] */ BYTE byteVal;
    /* [case()] */ BYTE *pbyteVal;
    /* [case()] */ CHAR charVal;
    /* [case()] */ CHAR *pcharVal;
    /* [case()] */ USHORT ushortVal;
    /* [case()] */ USHORT *pushortVal;
    /* [case()] */ DWORD dwVal;
    /* [case()] */ DWORD *pdwVal;
    /* [case()] */ LONGLONG llVal;
    /* [case()] */ LONGLONG *pllVal;
    /* [case()] */ ULONGLONG ullVal;
    /* [case()] */ ULONGLONG *pullVal;
    /* [case()] */ GUID guidVal;
    /* [case()] */ BYTE *bytesVal;
    /* [case()] */ struct DTP_NUMERIC numericVal;
    /* [case()] */ struct DTP_NUMERIC *pnumericVal;
    /* [case()] */ struct DTP_DBDATE dbdateVal;
    /* [case()] */ struct DTP_DBDATE *pdbdateVal;
    /* [case()] */ struct DTP_DBTIME dbtimeVal;
    /* [case()] */ struct DTP_DBTIME *pdbtimeVal;
    /* [case()] */ struct DTP_DBTIME2 dbtime2Val;
    /* [case()] */ struct DTP_DBTIME2 *pdbtime2Val;
    /* [case()] */ struct DTP_DBTIMESTAMP dbtimestampVal;
    /* [case()] */ struct DTP_DBTIMESTAMP *pdbtimestampVal;
    /* [case()] */ struct DTP_DBTIMESTAMP2 dbtimestamp2Val;
    /* [case()] */ struct DTP_DBTIMESTAMP2 *pdbtimestamp2Val;
    /* [case()] */ struct DTP_DBTIMESTAMPOFFSET dbtimestampoffsetVal;
    /* [case()] */ struct DTP_DBTIMESTAMPOFFSET *pdbtimestampoffsetVal;
    /* [case()] */ BYTE *imageVal;
    /* [case()] */ LPSTR textVal;
    /* [case()] */ LPWSTR ntextVal;
    /* [case()] */ LPSTR strVal;
    /* [case()] */ LPWSTR wstrVal;
    /* [case()] */ struct DTP_FILETIME filetimeVal;
    /* [case()] */ struct DTP_FILETIME *pfiletimeVal;
    } 	DTP_DATA_UNION;

typedef /* [public] */ struct DTP_VARIANT
    {
    enum DataType vt;
    DWORD dwLength;
    /* [switch_is] */ DTP_DATA_UNION u;
    } 	DTP_VARIANT;

typedef /* [public] */ struct DTP_VARIANT *PDTP_VARIANT;

typedef /* [v1_enum] */ 
enum DTSConnectionManagerScope
    {
        DTSCMS_PACKAGE	= 0,
        DTSCMS_PROJECT	= ( DTSCMS_PACKAGE + 1 ) 
    } 	DTSConnectionManagerScope;

typedef /* [v1_enum] */ 
enum DTS_MANAGED_INFO_TYPE
    {
        TypeTask	= 0,
        TypeComponent	= ( TypeTask + 1 ) ,
        TypeForEachEnumerator	= ( TypeComponent + 1 ) ,
        TypeLogProvider	= ( TypeForEachEnumerator + 1 ) ,
        TypeConnection	= ( TypeLogProvider + 1 ) 
    } 	DTS_MANAGED_INFO_TYPE;

typedef /* [uuid][restricted][hidden] */  DECLSPEC_UUID("302D1E8A-EBA5-4140-95A0-4CAFEC2DB60C") struct DTS_MANAGED_INFO
    {
    DTS_MANAGED_INFO_TYPE mitType;
    DTSPipelineComponentType pctType;
    BSTR bstrName;
    BSTR bstrDescription;
    BSTR bstrClassID;
    BSTR bstrFileName;
    BSTR bstrFileNameVersionString;
    BSTR bstrUITypeName;
    BSTR bstrShapeProgId;
    BSTR bstrIconFile;
    BSTR bstrIconResource;
    BSTR bstrObjectType;
    BSTR bstrContactInfo;
    BSTR bstrHelpCollection;
    BSTR bstrHelpKeyword;
    BSTR bstrSamplesTag;
    LONG lNoEditor;
    } 	DTS_MANAGED_INFO;

typedef /* [restricted][hidden] */ struct DTS_MANAGED_PROPERTY
    {
    BSTR bstrName;
    VARIANT vValue;
    VARIANT_BOOL bGet;
    VARIANT_BOOL bSet;
    int Index;
    USHORT vtTYPE;
    BSTR bstrUITypeEditor;
    BSTR bstrTypeConverter;
    DTSPropertyKind ePropertyKind;
    BSTR bstrConnectionType;
    VARIANT_BOOL bSensitive;
    } 	DTS_MANAGED_PROPERTY;

typedef /* [uuid][restricted][hidden] */  DECLSPEC_UUID("034AD88A-55AF-424B-96FF-37AC6CF5688D") struct DTS_EXTENSION_MAPPING_INFO
    {
    DTS_MANAGED_INFO_TYPE mitType;
    BSTR bstrIdentifier;
    BSTR bstrMappedSubstance;
    } 	DTS_EXTENSION_MAPPING_INFO;

// Item indexes for event handlers
// Executable Interfaces
// Executable Interfaces

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
// Other DTS Interfaces
// Debugging interfaces
// Miscellaneous interfaces

EXTERN_C const IID LIBID_DTSLib;

#ifndef __IDTSPackageVersionUpdate100_INTERFACE_DEFINED__
#define __IDTSPackageVersionUpdate100_INTERFACE_DEFINED__

/* interface IDTSPackageVersionUpdate100 */
/* [unique][helpstring][uuid][restricted][hidden][dual][object] */ 


EXTERN_C const IID IID_IDTSPackageVersionUpdate100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29043055-298D-466E-B529-B168CBD40058")
    IDTSPackageVersionUpdate100 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UpdateVersion( 
            /* [in] */ long PackageVersion,
            /* [in] */ long TargetVersion,
            /* [in] */ IDTSInfoEvents100 *Events,
            /* [out][in] */ BSTR *XmlDocument,
            /* [in] */ BSTR PackagePassword,
            DTS_PACKAGE_UPGRADE_OPTIONS packageUpgradeVersion) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackageVersionUpdate100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackageVersionUpdate100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackageVersionUpdate100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackageVersionUpdate100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackageVersionUpdate100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackageVersionUpdate100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackageVersionUpdate100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackageVersionUpdate100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateVersion )( 
            IDTSPackageVersionUpdate100 * This,
            /* [in] */ long PackageVersion,
            /* [in] */ long TargetVersion,
            /* [in] */ IDTSInfoEvents100 *Events,
            /* [out][in] */ BSTR *XmlDocument,
            /* [in] */ BSTR PackagePassword,
            DTS_PACKAGE_UPGRADE_OPTIONS packageUpgradeVersion);
        
        END_INTERFACE
    } IDTSPackageVersionUpdate100Vtbl;

    interface IDTSPackageVersionUpdate100
    {
        CONST_VTBL struct IDTSPackageVersionUpdate100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackageVersionUpdate100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackageVersionUpdate100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackageVersionUpdate100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackageVersionUpdate100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackageVersionUpdate100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackageVersionUpdate100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackageVersionUpdate100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackageVersionUpdate100_UpdateVersion(This,PackageVersion,TargetVersion,Events,XmlDocument,PackagePassword,packageUpgradeVersion)	\
    ( (This)->lpVtbl -> UpdateVersion(This,PackageVersion,TargetVersion,Events,XmlDocument,PackagePassword,packageUpgradeVersion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackageVersionUpdate100_INTERFACE_DEFINED__ */


#ifndef __IDTSObjectVersionUpdate100_INTERFACE_DEFINED__
#define __IDTSObjectVersionUpdate100_INTERFACE_DEFINED__

/* interface IDTSObjectVersionUpdate100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSObjectVersionUpdate100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0B3BE2AC-7892-4747-9F4C-CD113F60F176")
    IDTSObjectVersionUpdate100 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CanUpdate( 
            /* [in] */ BSTR ObjectCreationName,
            /* [retval][out] */ VARIANT_BOOL *pvbCanUpdate) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Update( 
            /* [out][in] */ BSTR *pbstrObjectXML) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Version( 
            /* [retval][out] */ long *plVersion) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSObjectVersionUpdate100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSObjectVersionUpdate100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSObjectVersionUpdate100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSObjectVersionUpdate100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSObjectVersionUpdate100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSObjectVersionUpdate100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSObjectVersionUpdate100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSObjectVersionUpdate100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanUpdate )( 
            IDTSObjectVersionUpdate100 * This,
            /* [in] */ BSTR ObjectCreationName,
            /* [retval][out] */ VARIANT_BOOL *pvbCanUpdate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Update )( 
            IDTSObjectVersionUpdate100 * This,
            /* [out][in] */ BSTR *pbstrObjectXML);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Version )( 
            IDTSObjectVersionUpdate100 * This,
            /* [retval][out] */ long *plVersion);
        
        END_INTERFACE
    } IDTSObjectVersionUpdate100Vtbl;

    interface IDTSObjectVersionUpdate100
    {
        CONST_VTBL struct IDTSObjectVersionUpdate100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSObjectVersionUpdate100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSObjectVersionUpdate100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSObjectVersionUpdate100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSObjectVersionUpdate100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSObjectVersionUpdate100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSObjectVersionUpdate100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSObjectVersionUpdate100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSObjectVersionUpdate100_CanUpdate(This,ObjectCreationName,pvbCanUpdate)	\
    ( (This)->lpVtbl -> CanUpdate(This,ObjectCreationName,pvbCanUpdate) ) 

#define IDTSObjectVersionUpdate100_Update(This,pbstrObjectXML)	\
    ( (This)->lpVtbl -> Update(This,pbstrObjectXML) ) 

#define IDTSObjectVersionUpdate100_get_Version(This,plVersion)	\
    ( (This)->lpVtbl -> get_Version(This,plVersion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSObjectVersionUpdate100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedWrapper100_INTERFACE_DEFINED__
#define __IDTSManagedWrapper100_INTERFACE_DEFINED__

/* interface IDTSManagedWrapper100 */
/* [unique][helpstring][uuid][restricted][hidden][dual][object] */ 


EXTERN_C const IID IID_IDTSManagedWrapper100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B5E2964C-986F-4021-A1FB-18495EE8C26B")
    IDTSManagedWrapper100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetManagedObject( 
            /* [in] */ BSTR assemblyName,
            /* [in] */ BSTR className) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WrappedTask( 
            /* [retval][out] */ IUnknown **ppunkManagedTask) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WrappedTask( 
            /* [in] */ IUnknown *ppunkManagedTask) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WrappedConnection( 
            /* [retval][out] */ IUnknown **ppunkManagedConnection) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WrappedConnection( 
            /* [in] */ IUnknown *ppunkManagedConnection) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WrappedLogProvider( 
            /* [retval][out] */ IUnknown **ppunkManagedLogProvider) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WrappedLogProvider( 
            /* [in] */ IUnknown *ppunkManagedLogProvider) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WrappedForEachEnumerator( 
            /* [retval][out] */ IUnknown **ppunkManagedForEachEnum) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WrappedForEachEnumerator( 
            /* [in] */ IUnknown *ppunkManagedForEachEnum) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ManagedForEachEnumeratorQualifiedName( 
            /* [retval][out] */ BSTR *ClassName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedWrapper100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedWrapper100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedWrapper100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSManagedWrapper100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetManagedObject )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ BSTR assemblyName,
            /* [in] */ BSTR className);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WrappedTask )( 
            IDTSManagedWrapper100 * This,
            /* [retval][out] */ IUnknown **ppunkManagedTask);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WrappedTask )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ IUnknown *ppunkManagedTask);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WrappedConnection )( 
            IDTSManagedWrapper100 * This,
            /* [retval][out] */ IUnknown **ppunkManagedConnection);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WrappedConnection )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ IUnknown *ppunkManagedConnection);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WrappedLogProvider )( 
            IDTSManagedWrapper100 * This,
            /* [retval][out] */ IUnknown **ppunkManagedLogProvider);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WrappedLogProvider )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ IUnknown *ppunkManagedLogProvider);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WrappedForEachEnumerator )( 
            IDTSManagedWrapper100 * This,
            /* [retval][out] */ IUnknown **ppunkManagedForEachEnum);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WrappedForEachEnumerator )( 
            IDTSManagedWrapper100 * This,
            /* [in] */ IUnknown *ppunkManagedForEachEnum);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManagedForEachEnumeratorQualifiedName )( 
            IDTSManagedWrapper100 * This,
            /* [retval][out] */ BSTR *ClassName);
        
        END_INTERFACE
    } IDTSManagedWrapper100Vtbl;

    interface IDTSManagedWrapper100
    {
        CONST_VTBL struct IDTSManagedWrapper100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedWrapper100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedWrapper100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedWrapper100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedWrapper100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSManagedWrapper100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSManagedWrapper100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSManagedWrapper100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSManagedWrapper100_SetManagedObject(This,assemblyName,className)	\
    ( (This)->lpVtbl -> SetManagedObject(This,assemblyName,className) ) 

#define IDTSManagedWrapper100_get_WrappedTask(This,ppunkManagedTask)	\
    ( (This)->lpVtbl -> get_WrappedTask(This,ppunkManagedTask) ) 

#define IDTSManagedWrapper100_put_WrappedTask(This,ppunkManagedTask)	\
    ( (This)->lpVtbl -> put_WrappedTask(This,ppunkManagedTask) ) 

#define IDTSManagedWrapper100_get_WrappedConnection(This,ppunkManagedConnection)	\
    ( (This)->lpVtbl -> get_WrappedConnection(This,ppunkManagedConnection) ) 

#define IDTSManagedWrapper100_put_WrappedConnection(This,ppunkManagedConnection)	\
    ( (This)->lpVtbl -> put_WrappedConnection(This,ppunkManagedConnection) ) 

#define IDTSManagedWrapper100_get_WrappedLogProvider(This,ppunkManagedLogProvider)	\
    ( (This)->lpVtbl -> get_WrappedLogProvider(This,ppunkManagedLogProvider) ) 

#define IDTSManagedWrapper100_put_WrappedLogProvider(This,ppunkManagedLogProvider)	\
    ( (This)->lpVtbl -> put_WrappedLogProvider(This,ppunkManagedLogProvider) ) 

#define IDTSManagedWrapper100_get_WrappedForEachEnumerator(This,ppunkManagedForEachEnum)	\
    ( (This)->lpVtbl -> get_WrappedForEachEnumerator(This,ppunkManagedForEachEnum) ) 

#define IDTSManagedWrapper100_put_WrappedForEachEnumerator(This,ppunkManagedForEachEnum)	\
    ( (This)->lpVtbl -> put_WrappedForEachEnumerator(This,ppunkManagedForEachEnum) ) 

#define IDTSManagedWrapper100_get_ManagedForEachEnumeratorQualifiedName(This,ClassName)	\
    ( (This)->lpVtbl -> get_ManagedForEachEnumeratorQualifiedName(This,ClassName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedWrapper100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedForEachEnumeratorWrapper100_INTERFACE_DEFINED__
#define __IDTSManagedForEachEnumeratorWrapper100_INTERFACE_DEFINED__

/* interface IDTSManagedForEachEnumeratorWrapper100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSManagedForEachEnumeratorWrapper100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9716CDBC-D1BA-44F4-A357-218B300CAD9F")
    IDTSManagedForEachEnumeratorWrapper100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetManagedForEachEnumerator( 
            /* [in] */ BSTR className) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WrappedForEachEnumerator( 
            /* [retval][out] */ IUnknown **ppunkManagedForEachEnum) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WrappedForEachEnumerator( 
            /* [in] */ IUnknown *ppunkManagedForEachEnum) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ManagedForEachEnumeratorQualifiedName( 
            /* [retval][out] */ BSTR *ClassName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedForEachEnumeratorWrapper100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedForEachEnumeratorWrapper100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedForEachEnumeratorWrapper100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetManagedForEachEnumerator )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [in] */ BSTR className);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WrappedForEachEnumerator )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [retval][out] */ IUnknown **ppunkManagedForEachEnum);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WrappedForEachEnumerator )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [in] */ IUnknown *ppunkManagedForEachEnum);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ManagedForEachEnumeratorQualifiedName )( 
            IDTSManagedForEachEnumeratorWrapper100 * This,
            /* [retval][out] */ BSTR *ClassName);
        
        END_INTERFACE
    } IDTSManagedForEachEnumeratorWrapper100Vtbl;

    interface IDTSManagedForEachEnumeratorWrapper100
    {
        CONST_VTBL struct IDTSManagedForEachEnumeratorWrapper100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedForEachEnumeratorWrapper100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedForEachEnumeratorWrapper100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedForEachEnumeratorWrapper100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedForEachEnumeratorWrapper100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSManagedForEachEnumeratorWrapper100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSManagedForEachEnumeratorWrapper100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSManagedForEachEnumeratorWrapper100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSManagedForEachEnumeratorWrapper100_SetManagedForEachEnumerator(This,className)	\
    ( (This)->lpVtbl -> SetManagedForEachEnumerator(This,className) ) 

#define IDTSManagedForEachEnumeratorWrapper100_get_WrappedForEachEnumerator(This,ppunkManagedForEachEnum)	\
    ( (This)->lpVtbl -> get_WrappedForEachEnumerator(This,ppunkManagedForEachEnum) ) 

#define IDTSManagedForEachEnumeratorWrapper100_put_WrappedForEachEnumerator(This,ppunkManagedForEachEnum)	\
    ( (This)->lpVtbl -> put_WrappedForEachEnumerator(This,ppunkManagedForEachEnum) ) 

#define IDTSManagedForEachEnumeratorWrapper100_get_ManagedForEachEnumeratorQualifiedName(This,ClassName)	\
    ( (This)->lpVtbl -> get_ManagedForEachEnumeratorQualifiedName(This,ClassName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedForEachEnumeratorWrapper100_INTERFACE_DEFINED__ */


#ifndef __IDTSEvaluatorContext100_INTERFACE_DEFINED__
#define __IDTSEvaluatorContext100_INTERFACE_DEFINED__

/* interface IDTSEvaluatorContext100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSEvaluatorContext100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("543ea5c1-be27-41c0-b686-2f7df83ed3af")
    IDTSEvaluatorContext100 : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AllowSensitiveValues( 
            /* [retval][out] */ VARIANT_BOOL *pvbAllowSensitive) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Option( 
            /* [retval][out] */ LONG *plOption) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEvaluatorContext100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEvaluatorContext100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEvaluatorContext100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEvaluatorContext100 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowSensitiveValues )( 
            IDTSEvaluatorContext100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbAllowSensitive);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Option )( 
            IDTSEvaluatorContext100 * This,
            /* [retval][out] */ LONG *plOption);
        
        END_INTERFACE
    } IDTSEvaluatorContext100Vtbl;

    interface IDTSEvaluatorContext100
    {
        CONST_VTBL struct IDTSEvaluatorContext100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEvaluatorContext100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEvaluatorContext100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEvaluatorContext100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEvaluatorContext100_get_AllowSensitiveValues(This,pvbAllowSensitive)	\
    ( (This)->lpVtbl -> get_AllowSensitiveValues(This,pvbAllowSensitive) ) 

#define IDTSEvaluatorContext100_get_Option(This,plOption)	\
    ( (This)->lpVtbl -> get_Option(This,plOption) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEvaluatorContext100_INTERFACE_DEFINED__ */


#ifndef __IDTSExpressionEvaluator100_INTERFACE_DEFINED__
#define __IDTSExpressionEvaluator100_INTERFACE_DEFINED__

/* interface IDTSExpressionEvaluator100 */
/* [unique][helpstring][uuid][restricted][hidden][dual][object] */ 


EXTERN_C const IID IID_IDTSExpressionEvaluator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F85149A-D05D-46BC-B1E0-5A06BE99C843")
    IDTSExpressionEvaluator100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Expression( 
            /* [in] */ BSTR bstrExpression) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Evaluate( 
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [out] */ VARIANT *pvResult,
            /* [in] */ VARIANT_BOOL vbSetVariable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsBooleanExpression( 
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [out] */ VARIANT_BOOL *pvbIsBoolean) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LocaleID( 
            /* [retval][out] */ long *plLocaleID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LocaleID( 
            /* [in] */ long lLocaleID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Events( 
            /* [in] */ IDTSInfoEvents100 *pInfoEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsAssignmentExpression( 
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [out] */ VARIANT_BOOL *pvbIsBoolean) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EvaluatorContext( 
            /* [in] */ IDTSEvaluatorContext100 *pContext) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExpressionEvaluator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExpressionEvaluator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExpressionEvaluator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExpressionEvaluator100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expression )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ BSTR bstrExpression);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Evaluate )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [out] */ VARIANT *pvResult,
            /* [in] */ VARIANT_BOOL vbSetVariable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsBooleanExpression )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [out] */ VARIANT_BOOL *pvbIsBoolean);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocaleID )( 
            IDTSExpressionEvaluator100 * This,
            /* [retval][out] */ long *plLocaleID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocaleID )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ long lLocaleID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Events )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ IDTSInfoEvents100 *pInfoEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsAssignmentExpression )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [out] */ VARIANT_BOOL *pvbIsBoolean);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EvaluatorContext )( 
            IDTSExpressionEvaluator100 * This,
            /* [in] */ IDTSEvaluatorContext100 *pContext);
        
        END_INTERFACE
    } IDTSExpressionEvaluator100Vtbl;

    interface IDTSExpressionEvaluator100
    {
        CONST_VTBL struct IDTSExpressionEvaluator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExpressionEvaluator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExpressionEvaluator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExpressionEvaluator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExpressionEvaluator100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExpressionEvaluator100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExpressionEvaluator100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExpressionEvaluator100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExpressionEvaluator100_put_Expression(This,bstrExpression)	\
    ( (This)->lpVtbl -> put_Expression(This,bstrExpression) ) 

#define IDTSExpressionEvaluator100_Evaluate(This,pVariableDispenser,pvResult,vbSetVariable)	\
    ( (This)->lpVtbl -> Evaluate(This,pVariableDispenser,pvResult,vbSetVariable) ) 

#define IDTSExpressionEvaluator100_IsBooleanExpression(This,pVariableDispenser,pvbIsBoolean)	\
    ( (This)->lpVtbl -> IsBooleanExpression(This,pVariableDispenser,pvbIsBoolean) ) 

#define IDTSExpressionEvaluator100_get_LocaleID(This,plLocaleID)	\
    ( (This)->lpVtbl -> get_LocaleID(This,plLocaleID) ) 

#define IDTSExpressionEvaluator100_put_LocaleID(This,lLocaleID)	\
    ( (This)->lpVtbl -> put_LocaleID(This,lLocaleID) ) 

#define IDTSExpressionEvaluator100_put_Events(This,pInfoEvents)	\
    ( (This)->lpVtbl -> put_Events(This,pInfoEvents) ) 

#define IDTSExpressionEvaluator100_IsAssignmentExpression(This,pVariableDispenser,pvbIsBoolean)	\
    ( (This)->lpVtbl -> IsAssignmentExpression(This,pVariableDispenser,pvbIsBoolean) ) 

#define IDTSExpressionEvaluator100_put_EvaluatorContext(This,pContext)	\
    ( (This)->lpVtbl -> put_EvaluatorContext(This,pContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExpressionEvaluator100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedTask100_INTERFACE_DEFINED__
#define __IDTSManagedTask100_INTERFACE_DEFINED__

/* interface IDTSManagedTask100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSManagedTask100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96AA076F-82E5-4DF5-A620-EA9819708033")
    IDTSManagedTask100 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedTask100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedTask100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedTask100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedTask100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSManagedTask100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSManagedTask100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSManagedTask100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSManagedTask100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IDTSManagedTask100Vtbl;

    interface IDTSManagedTask100
    {
        CONST_VTBL struct IDTSManagedTask100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedTask100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedTask100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedTask100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedTask100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSManagedTask100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSManagedTask100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSManagedTask100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedTask100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedXmlSerializationHelper100_INTERFACE_DEFINED__
#define __IDTSManagedXmlSerializationHelper100_INTERFACE_DEFINED__

/* interface IDTSManagedXmlSerializationHelper100 */
/* [unique][helpstring][uuid][restricted][hidden][object] */ 


EXTERN_C const IID IID_IDTSManagedXmlSerializationHelper100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C1EAE78E-3463-465F-9914-694B7480B55B")
    IDTSManagedXmlSerializationHelper100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeforeLoadPackageFromXML( 
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [out][in] */ BSTR *bstrPackageXml) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AfterSavePackageToXML( 
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [out][in] */ BSTR *bstrPackageXml) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedXmlSerializationHelper100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedXmlSerializationHelper100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedXmlSerializationHelper100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedXmlSerializationHelper100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *BeforeLoadPackageFromXML )( 
            IDTSManagedXmlSerializationHelper100 * This,
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [out][in] */ BSTR *bstrPackageXml);
        
        HRESULT ( STDMETHODCALLTYPE *AfterSavePackageToXML )( 
            IDTSManagedXmlSerializationHelper100 * This,
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [out][in] */ BSTR *bstrPackageXml);
        
        END_INTERFACE
    } IDTSManagedXmlSerializationHelper100Vtbl;

    interface IDTSManagedXmlSerializationHelper100
    {
        CONST_VTBL struct IDTSManagedXmlSerializationHelper100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedXmlSerializationHelper100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedXmlSerializationHelper100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedXmlSerializationHelper100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedXmlSerializationHelper100_BeforeLoadPackageFromXML(This,pPackage,pEvents,bstrPackageXml)	\
    ( (This)->lpVtbl -> BeforeLoadPackageFromXML(This,pPackage,pEvents,bstrPackageXml) ) 

#define IDTSManagedXmlSerializationHelper100_AfterSavePackageToXML(This,pPackage,pEvents,bstrPackageXml)	\
    ( (This)->lpVtbl -> AfterSavePackageToXML(This,pPackage,pEvents,bstrPackageXml) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedXmlSerializationHelper100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedHelper100_INTERFACE_DEFINED__
#define __IDTSManagedHelper100_INTERFACE_DEFINED__

/* interface IDTSManagedHelper100 */
/* [unique][helpstring][uuid][restricted][hidden][object] */ 


EXTERN_C const IID IID_IDTSManagedHelper100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CCC6C97-1D67-4FCD-9B7E-83AEE3B55A80")
    IDTSManagedHelper100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetManagedConnection( 
            /* [in] */ BSTR bstrAssemblyQualifiedName,
            /* [in] */ BSTR bstrConnectionString,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ IUnknown **ppunkRet) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseManagedConnection( 
            /* [in] */ IUnknown *pManagedConnection) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenAssembly( 
            /* [string][in] */ LPWSTR pwszAssemblyName,
            /* [in] */ DTS_MANAGED_INFO_TYPE mitType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextManagedInfo( 
            /* [out] */ DTS_MANAGED_INFO *pNextComponentInfo,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MakeCertObject( 
            /* [in] */ LONG64 hCertContext,
            /* [retval][out] */ IUnknown **ppCertObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRawCertData( 
            /* [in] */ IUnknown *pCertObj,
            /* [retval][out] */ SAFEARRAY * *ppsaRawData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SignDocument( 
            /* [out][in] */ BSTR *pbstrDocument,
            /* [in] */ LONG64 hCertContext,
            /* [in] */ BSTR bstrKeyContainer,
            /* [in] */ int iKeyNumber,
            /* [in] */ BSTR bstrProviderName,
            /* [in] */ int iProviderType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE VerifyDocument( 
            /* [in] */ BSTR bstrDocument,
            /* [out] */ SAFEARRAY * *ppsaRawCertData,
            /* [out] */ SAFEARRAY * *ppsaSignerPublicKeyBlob,
            /* [retval][out] */ VARIANT_BOOL *pvbSigValid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EncryptDocument( 
            /* [out][in] */ BSTR *pbstrDocument,
            /* [in] */ BSTR bstrPassword) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DecryptDocument( 
            /* [out][in] */ BSTR *pbstrDocument,
            /* [in] */ BSTR bstrPassword) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtensionMappingInfo( 
            /* [in] */ DTS_MANAGED_INFO_TYPE mitType,
            /* [string][in] */ LPWSTR pwszIdentifier,
            /* [out] */ DTS_EXTENSION_MAPPING_INFO *pExtensionMappingInfo,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetExtensionMappingInfoByCreationName( 
            /* [string][in] */ LPWSTR pwszCreationName,
            /* [out] */ DTS_EXTENSION_MAPPING_INFO *pExtensionMappingInfo,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedHelper100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedHelper100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedHelper100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedHelper100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetManagedConnection )( 
            IDTSManagedHelper100 * This,
            /* [in] */ BSTR bstrAssemblyQualifiedName,
            /* [in] */ BSTR bstrConnectionString,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ IUnknown **ppunkRet);
        
        HRESULT ( STDMETHODCALLTYPE *CloseManagedConnection )( 
            IDTSManagedHelper100 * This,
            /* [in] */ IUnknown *pManagedConnection);
        
        HRESULT ( STDMETHODCALLTYPE *OpenAssembly )( 
            IDTSManagedHelper100 * This,
            /* [string][in] */ LPWSTR pwszAssemblyName,
            /* [in] */ DTS_MANAGED_INFO_TYPE mitType);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextManagedInfo )( 
            IDTSManagedHelper100 * This,
            /* [out] */ DTS_MANAGED_INFO *pNextComponentInfo,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded);
        
        HRESULT ( STDMETHODCALLTYPE *MakeCertObject )( 
            IDTSManagedHelper100 * This,
            /* [in] */ LONG64 hCertContext,
            /* [retval][out] */ IUnknown **ppCertObject);
        
        HRESULT ( STDMETHODCALLTYPE *GetRawCertData )( 
            IDTSManagedHelper100 * This,
            /* [in] */ IUnknown *pCertObj,
            /* [retval][out] */ SAFEARRAY * *ppsaRawData);
        
        HRESULT ( STDMETHODCALLTYPE *SignDocument )( 
            IDTSManagedHelper100 * This,
            /* [out][in] */ BSTR *pbstrDocument,
            /* [in] */ LONG64 hCertContext,
            /* [in] */ BSTR bstrKeyContainer,
            /* [in] */ int iKeyNumber,
            /* [in] */ BSTR bstrProviderName,
            /* [in] */ int iProviderType);
        
        HRESULT ( STDMETHODCALLTYPE *VerifyDocument )( 
            IDTSManagedHelper100 * This,
            /* [in] */ BSTR bstrDocument,
            /* [out] */ SAFEARRAY * *ppsaRawCertData,
            /* [out] */ SAFEARRAY * *ppsaSignerPublicKeyBlob,
            /* [retval][out] */ VARIANT_BOOL *pvbSigValid);
        
        HRESULT ( STDMETHODCALLTYPE *EncryptDocument )( 
            IDTSManagedHelper100 * This,
            /* [out][in] */ BSTR *pbstrDocument,
            /* [in] */ BSTR bstrPassword);
        
        HRESULT ( STDMETHODCALLTYPE *DecryptDocument )( 
            IDTSManagedHelper100 * This,
            /* [out][in] */ BSTR *pbstrDocument,
            /* [in] */ BSTR bstrPassword);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtensionMappingInfo )( 
            IDTSManagedHelper100 * This,
            /* [in] */ DTS_MANAGED_INFO_TYPE mitType,
            /* [string][in] */ LPWSTR pwszIdentifier,
            /* [out] */ DTS_EXTENSION_MAPPING_INFO *pExtensionMappingInfo,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded);
        
        HRESULT ( STDMETHODCALLTYPE *GetExtensionMappingInfoByCreationName )( 
            IDTSManagedHelper100 * This,
            /* [string][in] */ LPWSTR pwszCreationName,
            /* [out] */ DTS_EXTENSION_MAPPING_INFO *pExtensionMappingInfo,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded);
        
        END_INTERFACE
    } IDTSManagedHelper100Vtbl;

    interface IDTSManagedHelper100
    {
        CONST_VTBL struct IDTSManagedHelper100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedHelper100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedHelper100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedHelper100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedHelper100_GetManagedConnection(This,bstrAssemblyQualifiedName,bstrConnectionString,pTransaction,ppunkRet)	\
    ( (This)->lpVtbl -> GetManagedConnection(This,bstrAssemblyQualifiedName,bstrConnectionString,pTransaction,ppunkRet) ) 

#define IDTSManagedHelper100_CloseManagedConnection(This,pManagedConnection)	\
    ( (This)->lpVtbl -> CloseManagedConnection(This,pManagedConnection) ) 

#define IDTSManagedHelper100_OpenAssembly(This,pwszAssemblyName,mitType)	\
    ( (This)->lpVtbl -> OpenAssembly(This,pwszAssemblyName,mitType) ) 

#define IDTSManagedHelper100_GetNextManagedInfo(This,pNextComponentInfo,pbSucceeded)	\
    ( (This)->lpVtbl -> GetNextManagedInfo(This,pNextComponentInfo,pbSucceeded) ) 

#define IDTSManagedHelper100_MakeCertObject(This,hCertContext,ppCertObject)	\
    ( (This)->lpVtbl -> MakeCertObject(This,hCertContext,ppCertObject) ) 

#define IDTSManagedHelper100_GetRawCertData(This,pCertObj,ppsaRawData)	\
    ( (This)->lpVtbl -> GetRawCertData(This,pCertObj,ppsaRawData) ) 

#define IDTSManagedHelper100_SignDocument(This,pbstrDocument,hCertContext,bstrKeyContainer,iKeyNumber,bstrProviderName,iProviderType)	\
    ( (This)->lpVtbl -> SignDocument(This,pbstrDocument,hCertContext,bstrKeyContainer,iKeyNumber,bstrProviderName,iProviderType) ) 

#define IDTSManagedHelper100_VerifyDocument(This,bstrDocument,ppsaRawCertData,ppsaSignerPublicKeyBlob,pvbSigValid)	\
    ( (This)->lpVtbl -> VerifyDocument(This,bstrDocument,ppsaRawCertData,ppsaSignerPublicKeyBlob,pvbSigValid) ) 

#define IDTSManagedHelper100_EncryptDocument(This,pbstrDocument,bstrPassword)	\
    ( (This)->lpVtbl -> EncryptDocument(This,pbstrDocument,bstrPassword) ) 

#define IDTSManagedHelper100_DecryptDocument(This,pbstrDocument,bstrPassword)	\
    ( (This)->lpVtbl -> DecryptDocument(This,pbstrDocument,bstrPassword) ) 

#define IDTSManagedHelper100_GetExtensionMappingInfo(This,mitType,pwszIdentifier,pExtensionMappingInfo,pbSucceeded)	\
    ( (This)->lpVtbl -> GetExtensionMappingInfo(This,mitType,pwszIdentifier,pExtensionMappingInfo,pbSucceeded) ) 

#define IDTSManagedHelper100_GetExtensionMappingInfoByCreationName(This,pwszCreationName,pExtensionMappingInfo,pbSucceeded)	\
    ( (This)->lpVtbl -> GetExtensionMappingInfoByCreationName(This,pwszCreationName,pExtensionMappingInfo,pbSucceeded) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedHelper100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedPropertyHelper100_INTERFACE_DEFINED__
#define __IDTSManagedPropertyHelper100_INTERFACE_DEFINED__

/* interface IDTSManagedPropertyHelper100 */
/* [unique][helpstring][uuid][restricted][hidden][object] */ 


EXTERN_C const IID IID_IDTSManagedPropertyHelper100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("91FC1D7B-6CAD-49ED-90EE-7AF292CF9501")
    IDTSManagedPropertyHelper100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ReflectOnObject( 
            /* [in] */ IUnknown *oObjectToReflect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNextManagedProperty( 
            /* [out] */ DTS_MANAGED_PROPERTY *nextManagedProperty,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPropertyValue( 
            /* [in] */ IUnknown *pObject,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pvValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPropertyValue( 
            /* [in] */ IUnknown *pObject,
            int Index,
            /* [in] */ VARIANT vValue) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedPropertyHelper100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedPropertyHelper100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedPropertyHelper100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedPropertyHelper100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *ReflectOnObject )( 
            IDTSManagedPropertyHelper100 * This,
            /* [in] */ IUnknown *oObjectToReflect);
        
        HRESULT ( STDMETHODCALLTYPE *GetNextManagedProperty )( 
            IDTSManagedPropertyHelper100 * This,
            /* [out] */ DTS_MANAGED_PROPERTY *nextManagedProperty,
            /* [retval][out] */ VARIANT_BOOL *pbSucceeded);
        
        HRESULT ( STDMETHODCALLTYPE *GetPropertyValue )( 
            IDTSManagedPropertyHelper100 * This,
            /* [in] */ IUnknown *pObject,
            /* [in] */ int Index,
            /* [retval][out] */ VARIANT *pvValue);
        
        HRESULT ( STDMETHODCALLTYPE *SetPropertyValue )( 
            IDTSManagedPropertyHelper100 * This,
            /* [in] */ IUnknown *pObject,
            int Index,
            /* [in] */ VARIANT vValue);
        
        END_INTERFACE
    } IDTSManagedPropertyHelper100Vtbl;

    interface IDTSManagedPropertyHelper100
    {
        CONST_VTBL struct IDTSManagedPropertyHelper100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedPropertyHelper100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedPropertyHelper100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedPropertyHelper100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedPropertyHelper100_ReflectOnObject(This,oObjectToReflect)	\
    ( (This)->lpVtbl -> ReflectOnObject(This,oObjectToReflect) ) 

#define IDTSManagedPropertyHelper100_GetNextManagedProperty(This,nextManagedProperty,pbSucceeded)	\
    ( (This)->lpVtbl -> GetNextManagedProperty(This,nextManagedProperty,pbSucceeded) ) 

#define IDTSManagedPropertyHelper100_GetPropertyValue(This,pObject,Index,pvValue)	\
    ( (This)->lpVtbl -> GetPropertyValue(This,pObject,Index,pvValue) ) 

#define IDTSManagedPropertyHelper100_SetPropertyValue(This,pObject,Index,vValue)	\
    ( (This)->lpVtbl -> SetPropertyValue(This,pObject,Index,vValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedPropertyHelper100_INTERFACE_DEFINED__ */


#ifndef __IDTSManagedSerializer100_INTERFACE_DEFINED__
#define __IDTSManagedSerializer100_INTERFACE_DEFINED__

/* interface IDTSManagedSerializer100 */
/* [unique][helpstring][uuid][restricted][hidden][object] */ 


EXTERN_C const IID IID_IDTSManagedSerializer100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5944DAE-AB2C-43E9-927E-4DBEFCC10387")
    IDTSManagedSerializer100 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsSerializable( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ VARIANT_BOOL *pIsSerializable) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Serialize( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ BSTR *pXML) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeSerialize( 
            /* [in] */ BSTR xml,
            /* [retval][out] */ IUnknown **ppObject) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSManagedSerializer100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSManagedSerializer100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSManagedSerializer100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSManagedSerializer100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsSerializable )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ VARIANT_BOOL *pIsSerializable);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Serialize )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ BSTR *pXML);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeSerialize )( 
            IDTSManagedSerializer100 * This,
            /* [in] */ BSTR xml,
            /* [retval][out] */ IUnknown **ppObject);
        
        END_INTERFACE
    } IDTSManagedSerializer100Vtbl;

    interface IDTSManagedSerializer100
    {
        CONST_VTBL struct IDTSManagedSerializer100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSManagedSerializer100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSManagedSerializer100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSManagedSerializer100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSManagedSerializer100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSManagedSerializer100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSManagedSerializer100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSManagedSerializer100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSManagedSerializer100_IsSerializable(This,pObject,pIsSerializable)	\
    ( (This)->lpVtbl -> IsSerializable(This,pObject,pIsSerializable) ) 

#define IDTSManagedSerializer100_Serialize(This,pObject,pXML)	\
    ( (This)->lpVtbl -> Serialize(This,pObject,pXML) ) 

#define IDTSManagedSerializer100_DeSerialize(This,xml,ppObject)	\
    ( (This)->lpVtbl -> DeSerialize(This,xml,ppObject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSManagedSerializer100_INTERFACE_DEFINED__ */


#ifndef __IDTSTaskCreator100_INTERFACE_DEFINED__
#define __IDTSTaskCreator100_INTERFACE_DEFINED__

/* interface IDTSTaskCreator100 */
/* [unique][helpstring][uuid][restricted][hidden][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSTaskCreator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("532796AE-7BD4-4BA8-B23A-F047F85EBFAE")
    IDTSTaskCreator100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateTask( 
            /* [in] */ BSTR bstrMoniker,
            /* [in] */ BSTR bstrTaskData,
            /* [in] */ IDTSBreakpointManager100 *pBreakpointManager,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [out] */ DWORD *pdwCancelEvent,
            /* [out] */ IDTSTask100 **ppTask) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MarshalConnections( 
            /* [in] */ IDTSConnections100 *pIn,
            /* [out] */ IDTSConnections100 **ppOut) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSTaskCreator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSTaskCreator100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSTaskCreator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSTaskCreator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CreateTask )( 
            IDTSTaskCreator100 * This,
            /* [in] */ BSTR bstrMoniker,
            /* [in] */ BSTR bstrTaskData,
            /* [in] */ IDTSBreakpointManager100 *pBreakpointManager,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [out] */ DWORD *pdwCancelEvent,
            /* [out] */ IDTSTask100 **ppTask);
        
        HRESULT ( STDMETHODCALLTYPE *MarshalConnections )( 
            IDTSTaskCreator100 * This,
            /* [in] */ IDTSConnections100 *pIn,
            /* [out] */ IDTSConnections100 **ppOut);
        
        END_INTERFACE
    } IDTSTaskCreator100Vtbl;

    interface IDTSTaskCreator100
    {
        CONST_VTBL struct IDTSTaskCreator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSTaskCreator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSTaskCreator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSTaskCreator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSTaskCreator100_CreateTask(This,bstrMoniker,bstrTaskData,pBreakpointManager,pEvents,pdwCancelEvent,ppTask)	\
    ( (This)->lpVtbl -> CreateTask(This,bstrMoniker,bstrTaskData,pBreakpointManager,pEvents,pdwCancelEvent,ppTask) ) 

#define IDTSTaskCreator100_MarshalConnections(This,pIn,ppOut)	\
    ( (This)->lpVtbl -> MarshalConnections(This,pIn,ppOut) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSTaskCreator100_INTERFACE_DEFINED__ */


#ifndef __IDTSRuntimeObject100_INTERFACE_DEFINED__
#define __IDTSRuntimeObject100_INTERFACE_DEFINED__

/* interface IDTSRuntimeObject100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSRuntimeObject100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("45FBB556-3A51-4771-9D93-AD792E50ECB1")
    IDTSRuntimeObject100 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSRuntimeObject100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSRuntimeObject100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSRuntimeObject100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSRuntimeObject100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSRuntimeObject100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSRuntimeObject100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSRuntimeObject100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSRuntimeObject100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IDTSRuntimeObject100Vtbl;

    interface IDTSRuntimeObject100
    {
        CONST_VTBL struct IDTSRuntimeObject100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSRuntimeObject100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSRuntimeObject100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSRuntimeObject100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSRuntimeObject100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSRuntimeObject100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSRuntimeObject100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSRuntimeObject100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSRuntimeObject100_INTERFACE_DEFINED__ */


#ifndef __IDTSExecutables100_INTERFACE_DEFINED__
#define __IDTSExecutables100_INTERFACE_DEFINED__

/* interface IDTSExecutables100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExecutables100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("965E514F-202F-4BC9-B2ED-10217A364B5B")
    IDTSExecutables100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSExecutable100 **ppDTSExecutable) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bstrMoniker,
            /* [retval][out] */ IDTSExecutable100 **ppDTSExecutable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSExecutable100 *pDTSExecutable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExecutables100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExecutables100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExecutables100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExecutables100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExecutables100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExecutables100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExecutables100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExecutables100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSExecutables100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSExecutable100 **ppDTSExecutable);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSExecutables100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSExecutables100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSExecutables100 * This,
            /* [in] */ BSTR bstrMoniker,
            /* [retval][out] */ IDTSExecutable100 **ppDTSExecutable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSExecutables100 * This,
            /* [in] */ IDTSExecutable100 *pDTSExecutable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSExecutables100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IDTSExecutables100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        END_INTERFACE
    } IDTSExecutables100Vtbl;

    interface IDTSExecutables100
    {
        CONST_VTBL struct IDTSExecutables100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExecutables100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExecutables100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExecutables100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExecutables100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExecutables100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExecutables100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExecutables100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExecutables100_get_Item(This,Index,ppDTSExecutable)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSExecutable) ) 

#define IDTSExecutables100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSExecutables100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSExecutables100_Add(This,bstrMoniker,ppDTSExecutable)	\
    ( (This)->lpVtbl -> Add(This,bstrMoniker,ppDTSExecutable) ) 

#define IDTSExecutables100_Join(This,pDTSExecutable)	\
    ( (This)->lpVtbl -> Join(This,pDTSExecutable) ) 

#define IDTSExecutables100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSExecutables100_Contains(This,Index,RetVal)	\
    ( (This)->lpVtbl -> Contains(This,Index,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExecutables100_INTERFACE_DEFINED__ */


#ifndef __IDTSProperties100_INTERFACE_DEFINED__
#define __IDTSProperties100_INTERFACE_DEFINED__

/* interface IDTSProperties100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSProperties100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BD297511-0721-466D-AC57-A457BA151009")
    IDTSProperties100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSProperty100 **ppDTSProperty) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ IDTSProperty100 *pProperty) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProperties100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProperties100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProperties100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProperties100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSProperties100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSProperties100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSProperties100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSProperties100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSProperties100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSProperty100 **ppDTSProperty);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSProperties100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSProperties100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSProperties100 * This,
            /* [in] */ IDTSProperty100 *pProperty);
        
        END_INTERFACE
    } IDTSProperties100Vtbl;

    interface IDTSProperties100
    {
        CONST_VTBL struct IDTSProperties100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProperties100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProperties100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProperties100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProperties100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSProperties100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSProperties100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSProperties100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSProperties100_get_Item(This,Index,ppDTSProperty)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSProperty) ) 

#define IDTSProperties100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSProperties100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSProperties100_Add(This,pProperty)	\
    ( (This)->lpVtbl -> Add(This,pProperty) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProperties100_INTERFACE_DEFINED__ */


#ifndef __IDTSConfigurations100_INTERFACE_DEFINED__
#define __IDTSConfigurations100_INTERFACE_DEFINED__

/* interface IDTSConfigurations100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConfigurations100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2394F8D2-C9A1-488C-A63A-460898EBBC29")
    IDTSConfigurations100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSConfiguration100 **ppDTSConfiguration) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IDTSConfiguration100 **ppConfig) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveBefore( 
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveAfter( 
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertBefore( 
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InsertAfter( 
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConfigurations100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConfigurations100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConfigurations100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConfigurations100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConfigurations100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConfigurations100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConfigurations100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConfigurations100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSConfigurations100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSConfiguration100 **ppDTSConfiguration);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSConfigurations100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSConfigurations100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSConfigurations100 * This,
            /* [retval][out] */ IDTSConfiguration100 **ppConfig);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSConfigurations100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveBefore )( 
            IDTSConfigurations100 * This,
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveAfter )( 
            IDTSConfigurations100 * This,
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertBefore )( 
            IDTSConfigurations100 * This,
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *InsertAfter )( 
            IDTSConfigurations100 * This,
            /* [in] */ VARIANT Index,
            /* [in] */ IDTSConfiguration100 *pConfig);
        
        END_INTERFACE
    } IDTSConfigurations100Vtbl;

    interface IDTSConfigurations100
    {
        CONST_VTBL struct IDTSConfigurations100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConfigurations100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConfigurations100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConfigurations100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConfigurations100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConfigurations100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConfigurations100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConfigurations100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConfigurations100_get_Item(This,Index,ppDTSConfiguration)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSConfiguration) ) 

#define IDTSConfigurations100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSConfigurations100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSConfigurations100_Add(This,ppConfig)	\
    ( (This)->lpVtbl -> Add(This,ppConfig) ) 

#define IDTSConfigurations100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSConfigurations100_MoveBefore(This,Index,pConfig)	\
    ( (This)->lpVtbl -> MoveBefore(This,Index,pConfig) ) 

#define IDTSConfigurations100_MoveAfter(This,Index,pConfig)	\
    ( (This)->lpVtbl -> MoveAfter(This,Index,pConfig) ) 

#define IDTSConfigurations100_InsertBefore(This,Index,pConfig)	\
    ( (This)->lpVtbl -> InsertBefore(This,Index,pConfig) ) 

#define IDTSConfigurations100_InsertAfter(This,Index,pConfig)	\
    ( (This)->lpVtbl -> InsertAfter(This,Index,pConfig) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConfigurations100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackageInfos100_INTERFACE_DEFINED__
#define __IDTSPackageInfos100_INTERFACE_DEFINED__

/* interface IDTSPackageInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPackageInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6A589966-B483-45A1-AC84-CC052C2E199E")
    IDTSPackageInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSPackageInfo100 **ppDTSPackageInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackageInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackageInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackageInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackageInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackageInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackageInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackageInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackageInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSPackageInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSPackageInfo100 **ppDTSPackageInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSPackageInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSPackageInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSPackageInfos100Vtbl;

    interface IDTSPackageInfos100
    {
        CONST_VTBL struct IDTSPackageInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackageInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackageInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackageInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackageInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackageInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackageInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackageInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackageInfos100_get_Item(This,Index,ppDTSPackageInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSPackageInfo) ) 

#define IDTSPackageInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSPackageInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackageInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSDBProviderInfos100_INTERFACE_DEFINED__
#define __IDTSDBProviderInfos100_INTERFACE_DEFINED__

/* interface IDTSDBProviderInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSDBProviderInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("706E4011-2653-4CE8-BEDB-99AEA09A93DE")
    IDTSDBProviderInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSDBProviderInfo100 **ppDTSDBProviderInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDBProviderInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDBProviderInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDBProviderInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDBProviderInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDBProviderInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDBProviderInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDBProviderInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDBProviderInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSDBProviderInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSDBProviderInfo100 **ppDTSDBProviderInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSDBProviderInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSDBProviderInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSDBProviderInfos100Vtbl;

    interface IDTSDBProviderInfos100
    {
        CONST_VTBL struct IDTSDBProviderInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDBProviderInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDBProviderInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDBProviderInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDBProviderInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDBProviderInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDBProviderInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDBProviderInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDBProviderInfos100_get_Item(This,Index,ppDTSDBProviderInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSDBProviderInfo) ) 

#define IDTSDBProviderInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSDBProviderInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDBProviderInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSTaskInfos100_INTERFACE_DEFINED__
#define __IDTSTaskInfos100_INTERFACE_DEFINED__

/* interface IDTSTaskInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSTaskInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3903DAC4-59FA-49E9-8902-83E5F50A12B3")
    IDTSTaskInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSTaskInfo100 **ppDTSTaskInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSTaskInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSTaskInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSTaskInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSTaskInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSTaskInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSTaskInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSTaskInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSTaskInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSTaskInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSTaskInfo100 **ppDTSTaskInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSTaskInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSTaskInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSTaskInfos100Vtbl;

    interface IDTSTaskInfos100
    {
        CONST_VTBL struct IDTSTaskInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSTaskInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSTaskInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSTaskInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSTaskInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSTaskInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSTaskInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSTaskInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSTaskInfos100_get_Item(This,Index,ppDTSTaskInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSTaskInfo) ) 

#define IDTSTaskInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSTaskInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSTaskInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSPipelineComponentInfos100_INTERFACE_DEFINED__
#define __IDTSPipelineComponentInfos100_INTERFACE_DEFINED__

/* interface IDTSPipelineComponentInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPipelineComponentInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E4CD6BA0-4F7F-4DE8-A71F-A31670C2019F")
    IDTSPipelineComponentInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSPipelineComponentInfo100 **ppDTSPipelineComponentInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPipelineComponentInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPipelineComponentInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPipelineComponentInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPipelineComponentInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPipelineComponentInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPipelineComponentInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPipelineComponentInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPipelineComponentInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSPipelineComponentInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSPipelineComponentInfo100 **ppDTSPipelineComponentInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSPipelineComponentInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSPipelineComponentInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSPipelineComponentInfos100Vtbl;

    interface IDTSPipelineComponentInfos100
    {
        CONST_VTBL struct IDTSPipelineComponentInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPipelineComponentInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPipelineComponentInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPipelineComponentInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPipelineComponentInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPipelineComponentInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPipelineComponentInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPipelineComponentInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPipelineComponentInfos100_get_Item(This,Index,ppDTSPipelineComponentInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSPipelineComponentInfo) ) 

#define IDTSPipelineComponentInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSPipelineComponentInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPipelineComponentInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionInfo100_INTERFACE_DEFINED__
#define __IDTSConnectionInfo100_INTERFACE_DEFINED__

/* interface IDTSConnectionInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CC8D06E-6B67-4892-98F1-BE661875C48B")
    IDTSConnectionInfo100 : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FileNameVersionString( 
            /* [retval][out] */ BSTR *pbstrVersionString) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_UITypeName( 
            /* [retval][out] */ BSTR *pbstrTypeName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IconFile( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_IconResource( 
            /* [retval][out] */ BSTR *pbstrIconResource) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionType( 
            /* [retval][out] */ BSTR *pbstrConnectionType) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionContact( 
            /* [retval][out] */ BSTR *pbstrConnectionContact) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileNameVersionString )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrVersionString);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_UITypeName )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconFile )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconResource )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrIconResource);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionType )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrConnectionType);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionContact )( 
            IDTSConnectionInfo100 * This,
            /* [retval][out] */ BSTR *pbstrConnectionContact);
        
        END_INTERFACE
    } IDTSConnectionInfo100Vtbl;

    interface IDTSConnectionInfo100
    {
        CONST_VTBL struct IDTSConnectionInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionInfo100_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IDTSConnectionInfo100_get_FileNameVersionString(This,pbstrVersionString)	\
    ( (This)->lpVtbl -> get_FileNameVersionString(This,pbstrVersionString) ) 

#define IDTSConnectionInfo100_get_UITypeName(This,pbstrTypeName)	\
    ( (This)->lpVtbl -> get_UITypeName(This,pbstrTypeName) ) 

#define IDTSConnectionInfo100_get_IconFile(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_IconFile(This,pbstrFileName) ) 

#define IDTSConnectionInfo100_get_IconResource(This,pbstrIconResource)	\
    ( (This)->lpVtbl -> get_IconResource(This,pbstrIconResource) ) 

#define IDTSConnectionInfo100_get_ConnectionType(This,pbstrConnectionType)	\
    ( (This)->lpVtbl -> get_ConnectionType(This,pbstrConnectionType) ) 

#define IDTSConnectionInfo100_get_ConnectionContact(This,pbstrConnectionContact)	\
    ( (This)->lpVtbl -> get_ConnectionContact(This,pbstrConnectionContact) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionInfos100_INTERFACE_DEFINED__
#define __IDTSConnectionInfos100_INTERFACE_DEFINED__

/* interface IDTSConnectionInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CFC7ADCC-5275-4F89-9DB2-D7BDCAC4BE87")
    IDTSConnectionInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSConnectionInfo100 **ppDTSConnectionInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSConnectionInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSConnectionInfo100 **ppDTSConnectionInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSConnectionInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSConnectionInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSConnectionInfos100Vtbl;

    interface IDTSConnectionInfos100
    {
        CONST_VTBL struct IDTSConnectionInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionInfos100_get_Item(This,Index,ppDTSConnectionInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSConnectionInfo) ) 

#define IDTSConnectionInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSConnectionInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSEventHandlers100_INTERFACE_DEFINED__
#define __IDTSEventHandlers100_INTERFACE_DEFINED__

/* interface IDTSEventHandlers100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEventHandlers100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("38A7140D-6FAA-4956-8C44-2708C51BD7F1")
    IDTSEventHandlers100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSEventHandler100 **ppDTSEventHandler) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR EventName,
            /* [retval][out] */ IDTSEventHandler100 **ppDTSeventHandler) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSEventHandler100 *pEventHandler) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEventHandlers100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEventHandlers100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEventHandlers100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEventHandlers100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEventHandlers100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEventHandlers100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEventHandlers100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEventHandlers100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSEventHandlers100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSEventHandler100 **ppDTSEventHandler);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSEventHandlers100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSEventHandlers100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSEventHandlers100 * This,
            /* [in] */ BSTR EventName,
            /* [retval][out] */ IDTSEventHandler100 **ppDTSeventHandler);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSEventHandlers100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSEventHandlers100 * This,
            /* [in] */ IDTSEventHandler100 *pEventHandler);
        
        END_INTERFACE
    } IDTSEventHandlers100Vtbl;

    interface IDTSEventHandlers100
    {
        CONST_VTBL struct IDTSEventHandlers100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEventHandlers100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEventHandlers100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEventHandlers100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEventHandlers100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEventHandlers100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEventHandlers100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEventHandlers100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSEventHandlers100_get_Item(This,Index,ppDTSEventHandler)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSEventHandler) ) 

#define IDTSEventHandlers100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSEventHandlers100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSEventHandlers100_Add(This,EventName,ppDTSeventHandler)	\
    ( (This)->lpVtbl -> Add(This,EventName,ppDTSeventHandler) ) 

#define IDTSEventHandlers100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSEventHandlers100_Join(This,pEventHandler)	\
    ( (This)->lpVtbl -> Join(This,pEventHandler) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEventHandlers100_INTERFACE_DEFINED__ */


#ifndef __IDTSErrors100_INTERFACE_DEFINED__
#define __IDTSErrors100_INTERFACE_DEFINED__

/* interface IDTSErrors100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSErrors100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F639B4BC-7B6D-4ED0-A5EF-BBE7E7BF668F")
    IDTSErrors100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSError100 **ppDTSError) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSErrors100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSErrors100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSErrors100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSErrors100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSErrors100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSErrors100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSErrors100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSErrors100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSErrors100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSError100 **ppDTSError);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSErrors100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSErrors100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IDTSErrors100 * This);
        
        END_INTERFACE
    } IDTSErrors100Vtbl;

    interface IDTSErrors100
    {
        CONST_VTBL struct IDTSErrors100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSErrors100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSErrors100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSErrors100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSErrors100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSErrors100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSErrors100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSErrors100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSErrors100_get_Item(This,Index,ppDTSError)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSError) ) 

#define IDTSErrors100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSErrors100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSErrors100_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSErrors100_INTERFACE_DEFINED__ */


#ifndef __IDTSWarnings100_INTERFACE_DEFINED__
#define __IDTSWarnings100_INTERFACE_DEFINED__

/* interface IDTSWarnings100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSWarnings100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("02C9FD9A-158F-4C36-AA9B-7603A445C606")
    IDTSWarnings100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSWarning100 **ppDTSWarning) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSWarnings100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSWarnings100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSWarnings100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSWarnings100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSWarnings100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSWarnings100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSWarnings100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSWarnings100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSWarnings100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSWarning100 **ppDTSWarning);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSWarnings100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSWarnings100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IDTSWarnings100 * This);
        
        END_INTERFACE
    } IDTSWarnings100Vtbl;

    interface IDTSWarnings100
    {
        CONST_VTBL struct IDTSWarnings100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSWarnings100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSWarnings100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSWarnings100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSWarnings100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSWarnings100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSWarnings100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSWarnings100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSWarnings100_get_Item(This,Index,ppDTSWarning)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSWarning) ) 

#define IDTSWarnings100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSWarnings100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSWarnings100_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSWarnings100_INTERFACE_DEFINED__ */


#ifndef __IDTSVariables100_INTERFACE_DEFINED__
#define __IDTSVariables100_INTERFACE_DEFINED__

/* interface IDTSVariables100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSVariables100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("340F5073-2F2E-4E7E-A3FA-E1B00B5BBB06")
    IDTSVariables100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSVariable100 **ppDTSVariable) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bstrName,
            /* [in] */ VARIANT_BOOL bReadOnly,
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ VARIANT vValue,
            /* [retval][out] */ IDTSVariable100 **ppDTSVariable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Unlock( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Locked( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSVariable100 *pVariable) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSVariables100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSVariables100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSVariables100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSVariables100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSVariables100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSVariables100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSVariables100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSVariables100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSVariables100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSVariable100 **ppDTSVariable);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSVariables100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSVariables100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSVariables100 * This,
            /* [in] */ BSTR bstrName,
            /* [in] */ VARIANT_BOOL bReadOnly,
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ VARIANT vValue,
            /* [retval][out] */ IDTSVariable100 **ppDTSVariable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSVariables100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Unlock )( 
            IDTSVariables100 * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Locked )( 
            IDTSVariables100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IDTSVariables100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSVariables100 * This,
            /* [in] */ IDTSVariable100 *pVariable);
        
        END_INTERFACE
    } IDTSVariables100Vtbl;

    interface IDTSVariables100
    {
        CONST_VTBL struct IDTSVariables100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSVariables100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSVariables100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSVariables100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSVariables100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSVariables100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSVariables100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSVariables100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSVariables100_get_Item(This,Index,ppDTSVariable)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSVariable) ) 

#define IDTSVariables100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSVariables100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSVariables100_Add(This,bstrName,bReadOnly,bstrNamespace,vValue,ppDTSVariable)	\
    ( (This)->lpVtbl -> Add(This,bstrName,bReadOnly,bstrNamespace,vValue,ppDTSVariable) ) 

#define IDTSVariables100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSVariables100_Unlock(This)	\
    ( (This)->lpVtbl -> Unlock(This) ) 

#define IDTSVariables100_get_Locked(This,RetVal)	\
    ( (This)->lpVtbl -> get_Locked(This,RetVal) ) 

#define IDTSVariables100_Contains(This,Index,RetVal)	\
    ( (This)->lpVtbl -> Contains(This,Index,RetVal) ) 

#define IDTSVariables100_Join(This,pVariable)	\
    ( (This)->lpVtbl -> Join(This,pVariable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSVariables100_INTERFACE_DEFINED__ */


#ifndef __IDTSVariableDispenser100_INTERFACE_DEFINED__
#define __IDTSVariableDispenser100_INTERFACE_DEFINED__

/* interface IDTSVariableDispenser100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSVariableDispenser100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("484FB5B8-CE4E-4CA3-BBAE-EF9CF83BDC43")
    IDTSVariableDispenser100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LockForRead( 
            /* [in] */ BSTR Variable) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LockForWrite( 
            /* [in] */ BSTR Variable) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetVariables( 
            /* [out] */ IDTSVariables100 **ppVariables) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LockOneForRead( 
            /* [in] */ BSTR Variable,
            /* [out][in] */ IDTSVariables100 **ppVariables) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LockOneForWrite( 
            /* [in] */ BSTR Variable,
            /* [out][in] */ IDTSVariables100 **ppVariables) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ BSTR Variable,
            /* [retval][out] */ VARIANT_BOOL *pvbContains) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetQualifiedName( 
            /* [in] */ BSTR Variable,
            /* [retval][out] */ BSTR *pbstrQualifiedName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSVariableDispenser100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSVariableDispenser100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSVariableDispenser100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSVariableDispenser100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LockForRead )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ BSTR Variable);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LockForWrite )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ BSTR Variable);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetVariables )( 
            IDTSVariableDispenser100 * This,
            /* [out] */ IDTSVariables100 **ppVariables);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IDTSVariableDispenser100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LockOneForRead )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ BSTR Variable,
            /* [out][in] */ IDTSVariables100 **ppVariables);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LockOneForWrite )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ BSTR Variable,
            /* [out][in] */ IDTSVariables100 **ppVariables);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ BSTR Variable,
            /* [retval][out] */ VARIANT_BOOL *pvbContains);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetQualifiedName )( 
            IDTSVariableDispenser100 * This,
            /* [in] */ BSTR Variable,
            /* [retval][out] */ BSTR *pbstrQualifiedName);
        
        END_INTERFACE
    } IDTSVariableDispenser100Vtbl;

    interface IDTSVariableDispenser100
    {
        CONST_VTBL struct IDTSVariableDispenser100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSVariableDispenser100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSVariableDispenser100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSVariableDispenser100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSVariableDispenser100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSVariableDispenser100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSVariableDispenser100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSVariableDispenser100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSVariableDispenser100_LockForRead(This,Variable)	\
    ( (This)->lpVtbl -> LockForRead(This,Variable) ) 

#define IDTSVariableDispenser100_LockForWrite(This,Variable)	\
    ( (This)->lpVtbl -> LockForWrite(This,Variable) ) 

#define IDTSVariableDispenser100_GetVariables(This,ppVariables)	\
    ( (This)->lpVtbl -> GetVariables(This,ppVariables) ) 

#define IDTSVariableDispenser100_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#define IDTSVariableDispenser100_LockOneForRead(This,Variable,ppVariables)	\
    ( (This)->lpVtbl -> LockOneForRead(This,Variable,ppVariables) ) 

#define IDTSVariableDispenser100_LockOneForWrite(This,Variable,ppVariables)	\
    ( (This)->lpVtbl -> LockOneForWrite(This,Variable,ppVariables) ) 

#define IDTSVariableDispenser100_Contains(This,Variable,pvbContains)	\
    ( (This)->lpVtbl -> Contains(This,Variable,pvbContains) ) 

#define IDTSVariableDispenser100_GetQualifiedName(This,Variable,pbstrQualifiedName)	\
    ( (This)->lpVtbl -> GetQualifiedName(This,Variable,pbstrQualifiedName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSVariableDispenser100_INTERFACE_DEFINED__ */


#ifndef __IDTSUnsafeVariables100_INTERFACE_DEFINED__
#define __IDTSUnsafeVariables100_INTERFACE_DEFINED__

/* interface IDTSUnsafeVariables100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSUnsafeVariables100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41FEA9BC-4510-414C-9615-A41551F2ACDA")
    IDTSUnsafeVariables100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetUnsafeVariables( 
            /* [retval][out] */ IDTSVariables100 **ppUnsafeVariables) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetUnsafeVariables( 
            /* [in] */ IDTSVariables100 *pUnsafeVariables) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSUnsafeVariables100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSUnsafeVariables100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSUnsafeVariables100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSUnsafeVariables100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetUnsafeVariables )( 
            IDTSUnsafeVariables100 * This,
            /* [retval][out] */ IDTSVariables100 **ppUnsafeVariables);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetUnsafeVariables )( 
            IDTSUnsafeVariables100 * This,
            /* [in] */ IDTSVariables100 *pUnsafeVariables);
        
        END_INTERFACE
    } IDTSUnsafeVariables100Vtbl;

    interface IDTSUnsafeVariables100
    {
        CONST_VTBL struct IDTSUnsafeVariables100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSUnsafeVariables100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSUnsafeVariables100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSUnsafeVariables100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSUnsafeVariables100_GetUnsafeVariables(This,ppUnsafeVariables)	\
    ( (This)->lpVtbl -> GetUnsafeVariables(This,ppUnsafeVariables) ) 

#define IDTSUnsafeVariables100_SetUnsafeVariables(This,pUnsafeVariables)	\
    ( (This)->lpVtbl -> SetUnsafeVariables(This,pUnsafeVariables) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSUnsafeVariables100_INTERFACE_DEFINED__ */


#ifndef __IDTSCloneVariableDispenser100_INTERFACE_DEFINED__
#define __IDTSCloneVariableDispenser100_INTERFACE_DEFINED__

/* interface IDTSCloneVariableDispenser100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSCloneVariableDispenser100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E7CEF56-B817-4312-B9BC-3B4AE48DA7EC")
    IDTSCloneVariableDispenser100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CloneVariableDispenser( 
            /* [retval][out] */ IDTSVariableDispenser100 **ppNewDispenser) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSCloneVariableDispenser100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSCloneVariableDispenser100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSCloneVariableDispenser100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSCloneVariableDispenser100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CloneVariableDispenser )( 
            IDTSCloneVariableDispenser100 * This,
            /* [retval][out] */ IDTSVariableDispenser100 **ppNewDispenser);
        
        END_INTERFACE
    } IDTSCloneVariableDispenser100Vtbl;

    interface IDTSCloneVariableDispenser100
    {
        CONST_VTBL struct IDTSCloneVariableDispenser100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSCloneVariableDispenser100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSCloneVariableDispenser100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSCloneVariableDispenser100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSCloneVariableDispenser100_CloneVariableDispenser(This,ppNewDispenser)	\
    ( (This)->lpVtbl -> CloneVariableDispenser(This,ppNewDispenser) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSCloneVariableDispenser100_INTERFACE_DEFINED__ */


#ifndef __IDTSExtendedProperties100_INTERFACE_DEFINED__
#define __IDTSExtendedProperties100_INTERFACE_DEFINED__

/* interface IDTSExtendedProperties100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExtendedProperties100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2A42E20E-AAD4-43A7-B2B0-3C332189C31B")
    IDTSExtendedProperties100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSExtendedProperty100 **ppDTSExtendedProperty) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bstrName,
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ VARIANT vValue,
            /* [retval][out] */ IDTSExtendedProperty100 **ppDTSExtendedProperty) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExtendedProperties100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExtendedProperties100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExtendedProperties100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExtendedProperties100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSExtendedProperty100 **ppDTSExtendedProperty);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSExtendedProperties100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSExtendedProperties100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ BSTR bstrName,
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ VARIANT vValue,
            /* [retval][out] */ IDTSExtendedProperty100 **ppDTSExtendedProperty);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSExtendedProperties100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSExtendedProperties100Vtbl;

    interface IDTSExtendedProperties100
    {
        CONST_VTBL struct IDTSExtendedProperties100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExtendedProperties100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExtendedProperties100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExtendedProperties100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExtendedProperties100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExtendedProperties100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExtendedProperties100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExtendedProperties100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExtendedProperties100_get_Item(This,Index,ppDTSExtendedProperty)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSExtendedProperty) ) 

#define IDTSExtendedProperties100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSExtendedProperties100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSExtendedProperties100_Add(This,bstrName,bstrNamespace,vValue,ppDTSExtendedProperty)	\
    ( (This)->lpVtbl -> Add(This,bstrName,bstrNamespace,vValue,ppDTSExtendedProperty) ) 

#define IDTSExtendedProperties100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExtendedProperties100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnections100_INTERFACE_DEFINED__
#define __IDTSConnections100_INTERFACE_DEFINED__

/* interface IDTSConnections100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnections100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("144048C6-695E-41DE-B383-CE97B200E03D")
    IDTSConnections100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Key,
            /* [retval][out] */ IDTSConnectionManager100 **ppDTSConnectionManager) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bstrConnectionType,
            /* [retval][out] */ IDTSConnectionManager100 **ppDTSConnectionManager) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Key) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ VARIANT Key,
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSConnectionManager100 *pConnectionManager) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AddFromXML( 
            /* [in] */ IDispatch *pNode,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSConnectionManager100 **ppNewObj) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnections100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnections100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnections100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnections100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnections100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnections100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnections100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnections100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSConnections100 * This,
            /* [in] */ VARIANT Key,
            /* [retval][out] */ IDTSConnectionManager100 **ppDTSConnectionManager);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSConnections100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSConnections100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSConnections100 * This,
            /* [in] */ BSTR bstrConnectionType,
            /* [retval][out] */ IDTSConnectionManager100 **ppDTSConnectionManager);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSConnections100 * This,
            /* [in] */ VARIANT Key);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IDTSConnections100 * This,
            /* [in] */ VARIANT Key,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSConnections100 * This,
            /* [in] */ IDTSConnectionManager100 *pConnectionManager);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AddFromXML )( 
            IDTSConnections100 * This,
            /* [in] */ IDispatch *pNode,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSConnectionManager100 **ppNewObj);
        
        END_INTERFACE
    } IDTSConnections100Vtbl;

    interface IDTSConnections100
    {
        CONST_VTBL struct IDTSConnections100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnections100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnections100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnections100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnections100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnections100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnections100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnections100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnections100_get_Item(This,Key,ppDTSConnectionManager)	\
    ( (This)->lpVtbl -> get_Item(This,Key,ppDTSConnectionManager) ) 

#define IDTSConnections100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSConnections100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSConnections100_Add(This,bstrConnectionType,ppDTSConnectionManager)	\
    ( (This)->lpVtbl -> Add(This,bstrConnectionType,ppDTSConnectionManager) ) 

#define IDTSConnections100_Remove(This,Key)	\
    ( (This)->lpVtbl -> Remove(This,Key) ) 

#define IDTSConnections100_Contains(This,Key,RetVal)	\
    ( (This)->lpVtbl -> Contains(This,Key,RetVal) ) 

#define IDTSConnections100_Join(This,pConnectionManager)	\
    ( (This)->lpVtbl -> Join(This,pConnectionManager) ) 

#define IDTSConnections100_AddFromXML(This,pNode,pEvents,ppNewObj)	\
    ( (This)->lpVtbl -> AddFromXML(This,pNode,pEvents,ppNewObj) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnections100_INTERFACE_DEFINED__ */


#ifndef __IDTSPrecedenceConstraints100_INTERFACE_DEFINED__
#define __IDTSPrecedenceConstraints100_INTERFACE_DEFINED__

/* interface IDTSPrecedenceConstraints100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPrecedenceConstraints100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DD6ABDFB-3997-4227-A816-27A4A6904D50")
    IDTSPrecedenceConstraints100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSPrecedenceConstraint100 **ppDTSPC) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            IDTSExecutable100 *pExecFrom,
            IDTSExecutable100 *pExecTo,
            /* [retval][out] */ IDTSPrecedenceConstraint100 **ppDTSPC) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSPrecedenceConstraint100 *pPrecedenceConstraint) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPrecedenceConstraints100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPrecedenceConstraints100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPrecedenceConstraints100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPrecedenceConstraints100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSPrecedenceConstraint100 **ppDTSPC);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSPrecedenceConstraints100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSPrecedenceConstraints100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSPrecedenceConstraints100 * This,
            IDTSExecutable100 *pExecFrom,
            IDTSExecutable100 *pExecTo,
            /* [retval][out] */ IDTSPrecedenceConstraint100 **ppDTSPC);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSPrecedenceConstraints100 * This,
            /* [in] */ IDTSPrecedenceConstraint100 *pPrecedenceConstraint);
        
        END_INTERFACE
    } IDTSPrecedenceConstraints100Vtbl;

    interface IDTSPrecedenceConstraints100
    {
        CONST_VTBL struct IDTSPrecedenceConstraints100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPrecedenceConstraints100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPrecedenceConstraints100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPrecedenceConstraints100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPrecedenceConstraints100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPrecedenceConstraints100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPrecedenceConstraints100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPrecedenceConstraints100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPrecedenceConstraints100_get_Item(This,Index,ppDTSPC)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSPC) ) 

#define IDTSPrecedenceConstraints100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSPrecedenceConstraints100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSPrecedenceConstraints100_Add(This,pExecFrom,pExecTo,ppDTSPC)	\
    ( (This)->lpVtbl -> Add(This,pExecFrom,pExecTo,ppDTSPC) ) 

#define IDTSPrecedenceConstraints100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSPrecedenceConstraints100_Join(This,pPrecedenceConstraint)	\
    ( (This)->lpVtbl -> Join(This,pPrecedenceConstraint) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPrecedenceConstraints100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManager100_INTERFACE_DEFINED__
#define __IDTSConnectionManager100_INTERFACE_DEFINED__

/* interface IDTSConnectionManager100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManager100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AFDFC1C5-A448-45B2-96A1-1269CCA0F652")
    IDTSConnectionManager100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionString( 
            /* [retval][out] */ BSTR *pbstrConnectionString) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ConnectionString( 
            /* [in] */ BSTR bstrConnectionString) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProtectionLevel( 
            /* [retval][out] */ DTSProtectionLevel *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProtectionLevel( 
            /* [in] */ DTSProtectionLevel NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SupportsDTCTransactions( 
            /* [retval][out] */ VARIANT_BOOL *pvbSupportsDTCTransactions) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AcquireConnection( 
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ VARIANT *pvarConnection) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Validate( 
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [retval][out] */ DTSExecResult *pValidateResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetQualifier( 
            /* [in] */ BSTR bstrQualifier) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReleaseConnection( 
            /* [in] */ VARIANT varConnection) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Scope( 
            /* [retval][out] */ DTSConnectionManagerScope *pScope) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Scope( 
            /* [in] */ DTSConnectionManagerScope scope) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManager100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManager100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManager100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManager100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManager100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManager100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManager100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManager100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionString )( 
            IDTSConnectionManager100 * This,
            /* [retval][out] */ BSTR *pbstrConnectionString);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConnectionString )( 
            IDTSConnectionManager100 * This,
            /* [in] */ BSTR bstrConnectionString);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionLevel )( 
            IDTSConnectionManager100 * This,
            /* [retval][out] */ DTSProtectionLevel *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectionLevel )( 
            IDTSConnectionManager100 * This,
            /* [in] */ DTSProtectionLevel NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SupportsDTCTransactions )( 
            IDTSConnectionManager100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbSupportsDTCTransactions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AcquireConnection )( 
            IDTSConnectionManager100 * This,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ VARIANT *pvarConnection);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSConnectionManager100 * This,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetQualifier )( 
            IDTSConnectionManager100 * This,
            /* [in] */ BSTR bstrQualifier);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReleaseConnection )( 
            IDTSConnectionManager100 * This,
            /* [in] */ VARIANT varConnection);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scope )( 
            IDTSConnectionManager100 * This,
            /* [retval][out] */ DTSConnectionManagerScope *pScope);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Scope )( 
            IDTSConnectionManager100 * This,
            /* [in] */ DTSConnectionManagerScope scope);
        
        END_INTERFACE
    } IDTSConnectionManager100Vtbl;

    interface IDTSConnectionManager100
    {
        CONST_VTBL struct IDTSConnectionManager100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManager100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManager100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManager100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManager100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManager100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManager100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManager100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManager100_get_ConnectionString(This,pbstrConnectionString)	\
    ( (This)->lpVtbl -> get_ConnectionString(This,pbstrConnectionString) ) 

#define IDTSConnectionManager100_put_ConnectionString(This,bstrConnectionString)	\
    ( (This)->lpVtbl -> put_ConnectionString(This,bstrConnectionString) ) 

#define IDTSConnectionManager100_get_ProtectionLevel(This,RetVal)	\
    ( (This)->lpVtbl -> get_ProtectionLevel(This,RetVal) ) 

#define IDTSConnectionManager100_put_ProtectionLevel(This,NewVal)	\
    ( (This)->lpVtbl -> put_ProtectionLevel(This,NewVal) ) 

#define IDTSConnectionManager100_get_SupportsDTCTransactions(This,pvbSupportsDTCTransactions)	\
    ( (This)->lpVtbl -> get_SupportsDTCTransactions(This,pvbSupportsDTCTransactions) ) 

#define IDTSConnectionManager100_AcquireConnection(This,pTransaction,pvarConnection)	\
    ( (This)->lpVtbl -> AcquireConnection(This,pTransaction,pvarConnection) ) 

#define IDTSConnectionManager100_Validate(This,pEvents,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pEvents,pValidateResult) ) 

#define IDTSConnectionManager100_SetQualifier(This,bstrQualifier)	\
    ( (This)->lpVtbl -> SetQualifier(This,bstrQualifier) ) 

#define IDTSConnectionManager100_ReleaseConnection(This,varConnection)	\
    ( (This)->lpVtbl -> ReleaseConnection(This,varConnection) ) 

#define IDTSConnectionManager100_get_Scope(This,pScope)	\
    ( (This)->lpVtbl -> get_Scope(This,pScope) ) 

#define IDTSConnectionManager100_put_Scope(This,scope)	\
    ( (This)->lpVtbl -> put_Scope(This,scope) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManager100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerVariables100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerVariables100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerVariables100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerVariables100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E60703CF-45EA-4A37-873C-03EF5FA71033")
    IDTSConnectionManagerVariables100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Variables( 
            /* [retval][out] */ IDTSVariables100 **ppVariables) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableDispenser( 
            /* [retval][out] */ IDTSVariableDispenser100 **ppVariableDispenser) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerVariables100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerVariables100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerVariables100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerVariables100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerVariables100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerVariables100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerVariables100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerVariables100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Variables )( 
            IDTSConnectionManagerVariables100 * This,
            /* [retval][out] */ IDTSVariables100 **ppVariables);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableDispenser )( 
            IDTSConnectionManagerVariables100 * This,
            /* [retval][out] */ IDTSVariableDispenser100 **ppVariableDispenser);
        
        END_INTERFACE
    } IDTSConnectionManagerVariables100Vtbl;

    interface IDTSConnectionManagerVariables100
    {
        CONST_VTBL struct IDTSConnectionManagerVariables100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerVariables100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerVariables100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerVariables100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerVariables100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerVariables100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerVariables100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerVariables100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerVariables100_get_Variables(This,ppVariables)	\
    ( (This)->lpVtbl -> get_Variables(This,ppVariables) ) 

#define IDTSConnectionManagerVariables100_get_VariableDispenser(This,ppVariableDispenser)	\
    ( (This)->lpVtbl -> get_VariableDispenser(This,ppVariableDispenser) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerVariables100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerInit100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerInit100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerInit100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerInit100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4AB58E6F-EA10-4D06-905E-539291C37F31")
    IDTSConnectionManagerInit100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InitializeConnectionManager( 
            /* [in] */ BSTR bstrQualifier,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerInit100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerInit100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerInit100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerInit100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InitializeConnectionManager )( 
            IDTSConnectionManagerInit100 * This,
            /* [in] */ BSTR bstrQualifier,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog);
        
        END_INTERFACE
    } IDTSConnectionManagerInit100Vtbl;

    interface IDTSConnectionManagerInit100
    {
        CONST_VTBL struct IDTSConnectionManagerInit100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerInit100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerInit100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerInit100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerInit100_InitializeConnectionManager(This,bstrQualifier,pEvents,pLog)	\
    ( (This)->lpVtbl -> InitializeConnectionManager(This,bstrQualifier,pEvents,pLog) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerInit100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerMarshalControl100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerMarshalControl100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerMarshalControl100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerMarshalControl100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5A231A8A-615F-4F3A-A085-F0B83BDE5915")
    IDTSConnectionManagerMarshalControl100 : public IUnknown
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CanMarshal( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CanClone( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ConfigureClone( 
            /* [in] */ IDTSConnectionManager100 *pConnectionManager) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerMarshalControl100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerMarshalControl100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerMarshalControl100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerMarshalControl100 * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanMarshal )( 
            IDTSConnectionManagerMarshalControl100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CanClone )( 
            IDTSConnectionManagerMarshalControl100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ConfigureClone )( 
            IDTSConnectionManagerMarshalControl100 * This,
            /* [in] */ IDTSConnectionManager100 *pConnectionManager);
        
        END_INTERFACE
    } IDTSConnectionManagerMarshalControl100Vtbl;

    interface IDTSConnectionManagerMarshalControl100
    {
        CONST_VTBL struct IDTSConnectionManagerMarshalControl100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerMarshalControl100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerMarshalControl100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerMarshalControl100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerMarshalControl100_get_CanMarshal(This,RetVal)	\
    ( (This)->lpVtbl -> get_CanMarshal(This,RetVal) ) 

#define IDTSConnectionManagerMarshalControl100_get_CanClone(This,RetVal)	\
    ( (This)->lpVtbl -> get_CanClone(This,RetVal) ) 

#define IDTSConnectionManagerMarshalControl100_ConfigureClone(This,pConnectionManager)	\
    ( (This)->lpVtbl -> ConfigureClone(This,pConnectionManager) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerMarshalControl100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerDatabaseParameters100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerDatabaseParameters100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerDatabaseParameters100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerDatabaseParameters100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D2D60F2F-C5D9-4484-9B91-BF4CC06F11ED")
    IDTSConnectionManagerDatabaseParameters100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerName( 
            /* [retval][out] */ BSTR *pbstrServerName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerName( 
            /* [in] */ BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UserName( 
            /* [retval][out] */ BSTR *pbstrUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UserName( 
            /* [in] */ BSTR bstrUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Password( 
            /* [in] */ BSTR bstrPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InitialCatalog( 
            /* [retval][out] */ BSTR *pbstrInitialCatalog) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_InitialCatalog( 
            /* [in] */ BSTR bstrInitialCatalog) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RetainSameConnection( 
            /* [retval][out] */ VARIANT_BOOL *pvbRetain) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_RetainSameConnection( 
            /* [in] */ VARIANT_BOOL vbRetain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetConnectionForSchema( 
            /* [retval][out] */ IUnknown **ppunkConnection) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerDatabaseParameters100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerDatabaseParameters100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerDatabaseParameters100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerName )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [retval][out] */ BSTR *pbstrServerName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerName )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ BSTR bstrServerName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [retval][out] */ BSTR *pbstrUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UserName )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ BSTR bstrUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ BSTR bstrPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InitialCatalog )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [retval][out] */ BSTR *pbstrInitialCatalog);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InitialCatalog )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ BSTR bstrInitialCatalog);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RetainSameConnection )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbRetain);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RetainSameConnection )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [in] */ VARIANT_BOOL vbRetain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetConnectionForSchema )( 
            IDTSConnectionManagerDatabaseParameters100 * This,
            /* [retval][out] */ IUnknown **ppunkConnection);
        
        END_INTERFACE
    } IDTSConnectionManagerDatabaseParameters100Vtbl;

    interface IDTSConnectionManagerDatabaseParameters100
    {
        CONST_VTBL struct IDTSConnectionManagerDatabaseParameters100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerDatabaseParameters100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerDatabaseParameters100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerDatabaseParameters100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerDatabaseParameters100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerDatabaseParameters100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerDatabaseParameters100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerDatabaseParameters100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerDatabaseParameters100_get_ServerName(This,pbstrServerName)	\
    ( (This)->lpVtbl -> get_ServerName(This,pbstrServerName) ) 

#define IDTSConnectionManagerDatabaseParameters100_put_ServerName(This,bstrServerName)	\
    ( (This)->lpVtbl -> put_ServerName(This,bstrServerName) ) 

#define IDTSConnectionManagerDatabaseParameters100_get_UserName(This,pbstrUserName)	\
    ( (This)->lpVtbl -> get_UserName(This,pbstrUserName) ) 

#define IDTSConnectionManagerDatabaseParameters100_put_UserName(This,bstrUserName)	\
    ( (This)->lpVtbl -> put_UserName(This,bstrUserName) ) 

#define IDTSConnectionManagerDatabaseParameters100_put_Password(This,bstrPassword)	\
    ( (This)->lpVtbl -> put_Password(This,bstrPassword) ) 

#define IDTSConnectionManagerDatabaseParameters100_get_InitialCatalog(This,pbstrInitialCatalog)	\
    ( (This)->lpVtbl -> get_InitialCatalog(This,pbstrInitialCatalog) ) 

#define IDTSConnectionManagerDatabaseParameters100_put_InitialCatalog(This,bstrInitialCatalog)	\
    ( (This)->lpVtbl -> put_InitialCatalog(This,bstrInitialCatalog) ) 

#define IDTSConnectionManagerDatabaseParameters100_get_RetainSameConnection(This,pvbRetain)	\
    ( (This)->lpVtbl -> get_RetainSameConnection(This,pvbRetain) ) 

#define IDTSConnectionManagerDatabaseParameters100_put_RetainSameConnection(This,vbRetain)	\
    ( (This)->lpVtbl -> put_RetainSameConnection(This,vbRetain) ) 

#define IDTSConnectionManagerDatabaseParameters100_GetConnectionForSchema(This,ppunkConnection)	\
    ( (This)->lpVtbl -> GetConnectionForSchema(This,ppunkConnection) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerDatabaseParameters100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerFile100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerFile100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerFile100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerFile100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2F51EB90-678D-43DC-9C3D-6C28A3B9FED0")
    IDTSConnectionManagerFile100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FileUsageType( 
            /* [retval][out] */ DTSFileConnectionUsageType *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FileUsageType( 
            /* [in] */ DTSFileConnectionUsageType NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerFile100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerFile100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerFile100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerFile100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerFile100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerFile100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerFile100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerFile100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileUsageType )( 
            IDTSConnectionManagerFile100 * This,
            /* [retval][out] */ DTSFileConnectionUsageType *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FileUsageType )( 
            IDTSConnectionManagerFile100 * This,
            /* [in] */ DTSFileConnectionUsageType NewVal);
        
        END_INTERFACE
    } IDTSConnectionManagerFile100Vtbl;

    interface IDTSConnectionManagerFile100
    {
        CONST_VTBL struct IDTSConnectionManagerFile100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerFile100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerFile100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerFile100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerFile100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerFile100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerFile100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerFile100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerFile100_get_FileUsageType(This,RetVal)	\
    ( (This)->lpVtbl -> get_FileUsageType(This,RetVal) ) 

#define IDTSConnectionManagerFile100_put_FileUsageType(This,NewVal)	\
    ( (This)->lpVtbl -> put_FileUsageType(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerFile100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerFlatFile100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerFlatFile100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerFlatFile100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerFlatFile100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41608803-C503-4C50-A464-8AC184BFF751")
    IDTSConnectionManagerFlatFile100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Format( 
            /* [in] */ BSTR bstrFormat) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Format( 
            /* [retval][out] */ BSTR *pbstrFormat) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LocaleID( 
            /* [in] */ long lLocaleID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LocaleID( 
            /* [retval][out] */ long *plLocaleID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Unicode( 
            /* [in] */ VARIANT_BOOL vbUnicode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Unicode( 
            /* [retval][out] */ VARIANT_BOOL *pvbUnicode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HeaderRowsToSkip( 
            /* [in] */ long lRowsToSkip) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HeaderRowsToSkip( 
            /* [retval][out] */ long *plRowsToSkip) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HeaderRowDelimiter( 
            /* [in] */ BSTR bstrDelimiter) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HeaderRowDelimiter( 
            /* [retval][out] */ BSTR *pbstrDelimiter) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ColumnNamesInFirstDataRow( 
            /* [in] */ VARIANT_BOOL vbColumnNamesInFirstDataRow) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ColumnNamesInFirstDataRow( 
            /* [retval][out] */ VARIANT_BOOL *pvbColumnNamesInFirstDataRow) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_RowDelimiter( 
            /* [in] */ BSTR bstrDelimiter) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RowDelimiter( 
            /* [retval][out] */ BSTR *pbstrDelimiter) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DataRowsToSkip( 
            /* [in] */ long lRowsToSkip) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataRowsToSkip( 
            /* [retval][out] */ long *plRowsToSkip) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TextQualifier( 
            /* [in] */ BSTR bstrTextQualifier) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TextQualifier( 
            /* [retval][out] */ BSTR *pbstrTextQualifier) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CodePage( 
            /* [in] */ long lCodePage) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CodePage( 
            /* [retval][out] */ long *plCOdePage) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ IDTSConnectionManagerFlatFileColumns100 **ppColumns) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AlwaysCheckForRowDelimiters( 
            /* [in] */ VARIANT_BOOL vbAlwaysCheckForRowDelimiters) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AlwaysCheckForRowDelimiters( 
            /* [retval][out] */ VARIANT_BOOL *vbAlwaysCheckForRowDelimiters) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerFlatFile100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerFlatFile100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerFlatFile100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Format )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ BSTR bstrFormat);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Format )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ BSTR *pbstrFormat);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocaleID )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ long lLocaleID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocaleID )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ long *plLocaleID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Unicode )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ VARIANT_BOOL vbUnicode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Unicode )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUnicode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderRowsToSkip )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ long lRowsToSkip);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderRowsToSkip )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ long *plRowsToSkip);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HeaderRowDelimiter )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ BSTR bstrDelimiter);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HeaderRowDelimiter )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ BSTR *pbstrDelimiter);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColumnNamesInFirstDataRow )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ VARIANT_BOOL vbColumnNamesInFirstDataRow);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnNamesInFirstDataRow )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbColumnNamesInFirstDataRow);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RowDelimiter )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ BSTR bstrDelimiter);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RowDelimiter )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ BSTR *pbstrDelimiter);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataRowsToSkip )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ long lRowsToSkip);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataRowsToSkip )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ long *plRowsToSkip);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextQualifier )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ BSTR bstrTextQualifier);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextQualifier )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ BSTR *pbstrTextQualifier);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CodePage )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ long lCodePage);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CodePage )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ long *plCOdePage);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ IDTSConnectionManagerFlatFileColumns100 **ppColumns);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AlwaysCheckForRowDelimiters )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [in] */ VARIANT_BOOL vbAlwaysCheckForRowDelimiters);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AlwaysCheckForRowDelimiters )( 
            IDTSConnectionManagerFlatFile100 * This,
            /* [retval][out] */ VARIANT_BOOL *vbAlwaysCheckForRowDelimiters);
        
        END_INTERFACE
    } IDTSConnectionManagerFlatFile100Vtbl;

    interface IDTSConnectionManagerFlatFile100
    {
        CONST_VTBL struct IDTSConnectionManagerFlatFile100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerFlatFile100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerFlatFile100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerFlatFile100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerFlatFile100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerFlatFile100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerFlatFile100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerFlatFile100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerFlatFile100_put_Format(This,bstrFormat)	\
    ( (This)->lpVtbl -> put_Format(This,bstrFormat) ) 

#define IDTSConnectionManagerFlatFile100_get_Format(This,pbstrFormat)	\
    ( (This)->lpVtbl -> get_Format(This,pbstrFormat) ) 

#define IDTSConnectionManagerFlatFile100_put_LocaleID(This,lLocaleID)	\
    ( (This)->lpVtbl -> put_LocaleID(This,lLocaleID) ) 

#define IDTSConnectionManagerFlatFile100_get_LocaleID(This,plLocaleID)	\
    ( (This)->lpVtbl -> get_LocaleID(This,plLocaleID) ) 

#define IDTSConnectionManagerFlatFile100_put_Unicode(This,vbUnicode)	\
    ( (This)->lpVtbl -> put_Unicode(This,vbUnicode) ) 

#define IDTSConnectionManagerFlatFile100_get_Unicode(This,pvbUnicode)	\
    ( (This)->lpVtbl -> get_Unicode(This,pvbUnicode) ) 

#define IDTSConnectionManagerFlatFile100_put_HeaderRowsToSkip(This,lRowsToSkip)	\
    ( (This)->lpVtbl -> put_HeaderRowsToSkip(This,lRowsToSkip) ) 

#define IDTSConnectionManagerFlatFile100_get_HeaderRowsToSkip(This,plRowsToSkip)	\
    ( (This)->lpVtbl -> get_HeaderRowsToSkip(This,plRowsToSkip) ) 

#define IDTSConnectionManagerFlatFile100_put_HeaderRowDelimiter(This,bstrDelimiter)	\
    ( (This)->lpVtbl -> put_HeaderRowDelimiter(This,bstrDelimiter) ) 

#define IDTSConnectionManagerFlatFile100_get_HeaderRowDelimiter(This,pbstrDelimiter)	\
    ( (This)->lpVtbl -> get_HeaderRowDelimiter(This,pbstrDelimiter) ) 

#define IDTSConnectionManagerFlatFile100_put_ColumnNamesInFirstDataRow(This,vbColumnNamesInFirstDataRow)	\
    ( (This)->lpVtbl -> put_ColumnNamesInFirstDataRow(This,vbColumnNamesInFirstDataRow) ) 

#define IDTSConnectionManagerFlatFile100_get_ColumnNamesInFirstDataRow(This,pvbColumnNamesInFirstDataRow)	\
    ( (This)->lpVtbl -> get_ColumnNamesInFirstDataRow(This,pvbColumnNamesInFirstDataRow) ) 

#define IDTSConnectionManagerFlatFile100_put_RowDelimiter(This,bstrDelimiter)	\
    ( (This)->lpVtbl -> put_RowDelimiter(This,bstrDelimiter) ) 

#define IDTSConnectionManagerFlatFile100_get_RowDelimiter(This,pbstrDelimiter)	\
    ( (This)->lpVtbl -> get_RowDelimiter(This,pbstrDelimiter) ) 

#define IDTSConnectionManagerFlatFile100_put_DataRowsToSkip(This,lRowsToSkip)	\
    ( (This)->lpVtbl -> put_DataRowsToSkip(This,lRowsToSkip) ) 

#define IDTSConnectionManagerFlatFile100_get_DataRowsToSkip(This,plRowsToSkip)	\
    ( (This)->lpVtbl -> get_DataRowsToSkip(This,plRowsToSkip) ) 

#define IDTSConnectionManagerFlatFile100_put_TextQualifier(This,bstrTextQualifier)	\
    ( (This)->lpVtbl -> put_TextQualifier(This,bstrTextQualifier) ) 

#define IDTSConnectionManagerFlatFile100_get_TextQualifier(This,pbstrTextQualifier)	\
    ( (This)->lpVtbl -> get_TextQualifier(This,pbstrTextQualifier) ) 

#define IDTSConnectionManagerFlatFile100_put_CodePage(This,lCodePage)	\
    ( (This)->lpVtbl -> put_CodePage(This,lCodePage) ) 

#define IDTSConnectionManagerFlatFile100_get_CodePage(This,plCOdePage)	\
    ( (This)->lpVtbl -> get_CodePage(This,plCOdePage) ) 

#define IDTSConnectionManagerFlatFile100_get_Columns(This,ppColumns)	\
    ( (This)->lpVtbl -> get_Columns(This,ppColumns) ) 

#define IDTSConnectionManagerFlatFile100_put_AlwaysCheckForRowDelimiters(This,vbAlwaysCheckForRowDelimiters)	\
    ( (This)->lpVtbl -> put_AlwaysCheckForRowDelimiters(This,vbAlwaysCheckForRowDelimiters) ) 

#define IDTSConnectionManagerFlatFile100_get_AlwaysCheckForRowDelimiters(This,vbAlwaysCheckForRowDelimiters)	\
    ( (This)->lpVtbl -> get_AlwaysCheckForRowDelimiters(This,vbAlwaysCheckForRowDelimiters) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerFlatFile100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerFlatFileColumn100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerFlatFileColumn100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerFlatFileColumn100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerFlatFileColumn100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E3B4B19-317A-4CA3-B860-88FC38AE74FB")
    IDTSConnectionManagerFlatFileColumn100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ColumnType( 
            /* [in] */ BSTR bstrColumnType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ColumnType( 
            /* [retval][out] */ BSTR *pbstrColumnType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ColumnDelimiter( 
            /* [in] */ BSTR bstrColumnDelimiter) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ColumnDelimiter( 
            /* [retval][out] */ BSTR *pbstrColumnDelimiter) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ColumnWidth( 
            /* [in] */ long lWidth) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ColumnWidth( 
            /* [retval][out] */ long *plWidth) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MaximumWidth( 
            /* [in] */ long lWidth) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MaximumWidth( 
            /* [retval][out] */ long *plWidth) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DataType( 
            /* [in] */ enum DataType eDataType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
            /* [retval][out] */ enum DataType *peDataType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DataPrecision( 
            /* [in] */ long lDataPrecision) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataPrecision( 
            /* [retval][out] */ long *plDataPrecision) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DataScale( 
            /* [in] */ long lDataScale) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataScale( 
            /* [retval][out] */ long *plDataScale) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TextQualified( 
            /* [in] */ VARIANT_BOOL vbTextQualified) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TextQualified( 
            /* [retval][out] */ VARIANT_BOOL *pvbTextQualified) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerFlatFileColumn100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerFlatFileColumn100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerFlatFileColumn100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColumnType )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ BSTR bstrColumnType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnType )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ BSTR *pbstrColumnType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColumnDelimiter )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ BSTR bstrColumnDelimiter);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnDelimiter )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ BSTR *pbstrColumnDelimiter);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ColumnWidth )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ long lWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ColumnWidth )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ long *plWidth);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaximumWidth )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ long lWidth);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumWidth )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ long *plWidth);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataType )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ enum DataType eDataType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ enum DataType *peDataType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataPrecision )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ long lDataPrecision);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataPrecision )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ long *plDataPrecision);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataScale )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ long lDataScale);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataScale )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ long *plDataScale);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TextQualified )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [in] */ VARIANT_BOOL vbTextQualified);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TextQualified )( 
            IDTSConnectionManagerFlatFileColumn100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbTextQualified);
        
        END_INTERFACE
    } IDTSConnectionManagerFlatFileColumn100Vtbl;

    interface IDTSConnectionManagerFlatFileColumn100
    {
        CONST_VTBL struct IDTSConnectionManagerFlatFileColumn100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerFlatFileColumn100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerFlatFileColumn100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerFlatFileColumn100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerFlatFileColumn100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerFlatFileColumn100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerFlatFileColumn100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerFlatFileColumn100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerFlatFileColumn100_put_ColumnType(This,bstrColumnType)	\
    ( (This)->lpVtbl -> put_ColumnType(This,bstrColumnType) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_ColumnType(This,pbstrColumnType)	\
    ( (This)->lpVtbl -> get_ColumnType(This,pbstrColumnType) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_ColumnDelimiter(This,bstrColumnDelimiter)	\
    ( (This)->lpVtbl -> put_ColumnDelimiter(This,bstrColumnDelimiter) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_ColumnDelimiter(This,pbstrColumnDelimiter)	\
    ( (This)->lpVtbl -> get_ColumnDelimiter(This,pbstrColumnDelimiter) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_ColumnWidth(This,lWidth)	\
    ( (This)->lpVtbl -> put_ColumnWidth(This,lWidth) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_ColumnWidth(This,plWidth)	\
    ( (This)->lpVtbl -> get_ColumnWidth(This,plWidth) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_MaximumWidth(This,lWidth)	\
    ( (This)->lpVtbl -> put_MaximumWidth(This,lWidth) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_MaximumWidth(This,plWidth)	\
    ( (This)->lpVtbl -> get_MaximumWidth(This,plWidth) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_DataType(This,eDataType)	\
    ( (This)->lpVtbl -> put_DataType(This,eDataType) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_DataType(This,peDataType)	\
    ( (This)->lpVtbl -> get_DataType(This,peDataType) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_DataPrecision(This,lDataPrecision)	\
    ( (This)->lpVtbl -> put_DataPrecision(This,lDataPrecision) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_DataPrecision(This,plDataPrecision)	\
    ( (This)->lpVtbl -> get_DataPrecision(This,plDataPrecision) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_DataScale(This,lDataScale)	\
    ( (This)->lpVtbl -> put_DataScale(This,lDataScale) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_DataScale(This,plDataScale)	\
    ( (This)->lpVtbl -> get_DataScale(This,plDataScale) ) 

#define IDTSConnectionManagerFlatFileColumn100_put_TextQualified(This,vbTextQualified)	\
    ( (This)->lpVtbl -> put_TextQualified(This,vbTextQualified) ) 

#define IDTSConnectionManagerFlatFileColumn100_get_TextQualified(This,pvbTextQualified)	\
    ( (This)->lpVtbl -> get_TextQualified(This,pvbTextQualified) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerFlatFileColumn100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerFlatFileColumns100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerFlatFileColumns100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerFlatFileColumns100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerFlatFileColumns100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("783A0BE2-F6D1-4D9A-8595-C26494F511C3")
    IDTSConnectionManagerFlatFileColumns100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Key,
            /* [retval][out] */ IDTSConnectionManagerFlatFileColumn100 **ppColumn) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IDTSConnectionManagerFlatFileColumn100 **ppColumn) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Key) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveBefore( 
            /* [in] */ VARIANT Key,
            /* [in] */ IDTSConnectionManagerFlatFileColumn100 *Column) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE MoveAfter( 
            /* [in] */ VARIANT Key,
            /* [in] */ IDTSConnectionManagerFlatFileColumn100 *Column) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerFlatFileColumns100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerFlatFileColumns100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerFlatFileColumns100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ VARIANT Key,
            /* [retval][out] */ IDTSConnectionManagerFlatFileColumn100 **ppColumn);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [retval][out] */ IDTSConnectionManagerFlatFileColumn100 **ppColumn);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ VARIANT Key);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveBefore )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ VARIANT Key,
            /* [in] */ IDTSConnectionManagerFlatFileColumn100 *Column);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *MoveAfter )( 
            IDTSConnectionManagerFlatFileColumns100 * This,
            /* [in] */ VARIANT Key,
            /* [in] */ IDTSConnectionManagerFlatFileColumn100 *Column);
        
        END_INTERFACE
    } IDTSConnectionManagerFlatFileColumns100Vtbl;

    interface IDTSConnectionManagerFlatFileColumns100
    {
        CONST_VTBL struct IDTSConnectionManagerFlatFileColumns100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerFlatFileColumns100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerFlatFileColumns100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerFlatFileColumns100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerFlatFileColumns100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerFlatFileColumns100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerFlatFileColumns100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerFlatFileColumns100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerFlatFileColumns100_get_Item(This,Key,ppColumn)	\
    ( (This)->lpVtbl -> get_Item(This,Key,ppColumn) ) 

#define IDTSConnectionManagerFlatFileColumns100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSConnectionManagerFlatFileColumns100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSConnectionManagerFlatFileColumns100_Add(This,ppColumn)	\
    ( (This)->lpVtbl -> Add(This,ppColumn) ) 

#define IDTSConnectionManagerFlatFileColumns100_Remove(This,Key)	\
    ( (This)->lpVtbl -> Remove(This,Key) ) 

#define IDTSConnectionManagerFlatFileColumns100_MoveBefore(This,Key,Column)	\
    ( (This)->lpVtbl -> MoveBefore(This,Key,Column) ) 

#define IDTSConnectionManagerFlatFileColumns100_MoveAfter(This,Key,Column)	\
    ( (This)->lpVtbl -> MoveAfter(This,Key,Column) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerFlatFileColumns100_INTERFACE_DEFINED__ */


#ifndef __IDTSODBCHandles100_INTERFACE_DEFINED__
#define __IDTSODBCHandles100_INTERFACE_DEFINED__

/* interface IDTSODBCHandles100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSODBCHandles100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0882860C-63A2-4DC0-ADB5-A2F794236708")
    IDTSODBCHandles100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_henv( 
            /* [retval][out] */ long *plhenv) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_hdbc( 
            /* [retval][out] */ long *plhdbc) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_cstr( 
            /* [retval][out] */ BSTR *pbstrCompletedConnectionString) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSODBCHandles100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSODBCHandles100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSODBCHandles100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSODBCHandles100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSODBCHandles100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSODBCHandles100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSODBCHandles100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSODBCHandles100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_henv )( 
            IDTSODBCHandles100 * This,
            /* [retval][out] */ long *plhenv);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_hdbc )( 
            IDTSODBCHandles100 * This,
            /* [retval][out] */ long *plhdbc);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cstr )( 
            IDTSODBCHandles100 * This,
            /* [retval][out] */ BSTR *pbstrCompletedConnectionString);
        
        END_INTERFACE
    } IDTSODBCHandles100Vtbl;

    interface IDTSODBCHandles100
    {
        CONST_VTBL struct IDTSODBCHandles100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSODBCHandles100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSODBCHandles100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSODBCHandles100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSODBCHandles100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSODBCHandles100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSODBCHandles100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSODBCHandles100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSODBCHandles100_get_henv(This,plhenv)	\
    ( (This)->lpVtbl -> get_henv(This,plhenv) ) 

#define IDTSODBCHandles100_get_hdbc(This,plhdbc)	\
    ( (This)->lpVtbl -> get_hdbc(This,plhdbc) ) 

#define IDTSODBCHandles100_get_cstr(This,pbstrCompletedConnectionString)	\
    ( (This)->lpVtbl -> get_cstr(This,pbstrCompletedConnectionString) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSODBCHandles100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachEnumerator100_INTERFACE_DEFINED__
#define __IDTSForEachEnumerator100_INTERFACE_DEFINED__

/* interface IDTSForEachEnumerator100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachEnumerator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C4D94B60-C3BB-40A3-BCE6-A3966B2B33F1")
    IDTSForEachEnumerator100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InitializeForEachEnumerator( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSObjectReferenceTracker100 *pRefTracker) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ IUnknown **ppEnumUnk) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CollectionEnumerator( 
            /* [retval][out] */ VARIANT_BOOL *pvbIsCollectionEnumerator) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CollectionEnumerator( 
            /* [in] */ VARIANT_BOOL vbIsCollectionEnumerator) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Validate( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachEnumerator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachEnumerator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachEnumerator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachEnumerator100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InitializeForEachEnumerator )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSObjectReferenceTracker100 *pRefTracker);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ IUnknown **ppEnumUnk);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CollectionEnumerator )( 
            IDTSForEachEnumerator100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbIsCollectionEnumerator);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CollectionEnumerator )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ VARIANT_BOOL vbIsCollectionEnumerator);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSForEachEnumerator100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        END_INTERFACE
    } IDTSForEachEnumerator100Vtbl;

    interface IDTSForEachEnumerator100
    {
        CONST_VTBL struct IDTSForEachEnumerator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachEnumerator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachEnumerator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachEnumerator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachEnumerator100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachEnumerator100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachEnumerator100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachEnumerator100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachEnumerator100_InitializeForEachEnumerator(This,pConnections,pEvents,pRefTracker)	\
    ( (This)->lpVtbl -> InitializeForEachEnumerator(This,pConnections,pEvents,pRefTracker) ) 

#define IDTSForEachEnumerator100_GetEnumerator(This,pConnections,pVariableDispenser,pEvents,pLog,ppEnumUnk)	\
    ( (This)->lpVtbl -> GetEnumerator(This,pConnections,pVariableDispenser,pEvents,pLog,ppEnumUnk) ) 

#define IDTSForEachEnumerator100_get_CollectionEnumerator(This,pvbIsCollectionEnumerator)	\
    ( (This)->lpVtbl -> get_CollectionEnumerator(This,pvbIsCollectionEnumerator) ) 

#define IDTSForEachEnumerator100_put_CollectionEnumerator(This,vbIsCollectionEnumerator)	\
    ( (This)->lpVtbl -> put_CollectionEnumerator(This,vbIsCollectionEnumerator) ) 

#define IDTSForEachEnumerator100_Validate(This,pConnections,pVariableDispenser,pEvents,pLog,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pConnections,pVariableDispenser,pEvents,pLog,pValidateResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachEnumerator100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachEnumeratorInfo100_INTERFACE_DEFINED__
#define __IDTSForEachEnumeratorInfo100_INTERFACE_DEFINED__

/* interface IDTSForEachEnumeratorInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachEnumeratorInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("588E26A5-CA5F-4F7B-AA8D-E34BD63FC0A2")
    IDTSForEachEnumeratorInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateNew( 
            /* [retval][out] */ IDTSForEachEnumerator100 **ppEnum) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileNameVersionString( 
            /* [retval][out] */ BSTR *pbstrVersionString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UITypeName( 
            /* [retval][out] */ BSTR *pbstrTypeName) = 0;
        
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_ForEachEnumeratorContact( 
            /* [retval][out] */ BSTR *pbstrFEEContact) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachEnumeratorInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachEnumeratorInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachEnumeratorInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateNew )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [retval][out] */ IDTSForEachEnumerator100 **ppEnum);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileNameVersionString )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [retval][out] */ BSTR *pbstrVersionString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UITypeName )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeName);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForEachEnumeratorContact )( 
            IDTSForEachEnumeratorInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFEEContact);
        
        END_INTERFACE
    } IDTSForEachEnumeratorInfo100Vtbl;

    interface IDTSForEachEnumeratorInfo100
    {
        CONST_VTBL struct IDTSForEachEnumeratorInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachEnumeratorInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachEnumeratorInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachEnumeratorInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachEnumeratorInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachEnumeratorInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachEnumeratorInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachEnumeratorInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachEnumeratorInfo100_CreateNew(This,ppEnum)	\
    ( (This)->lpVtbl -> CreateNew(This,ppEnum) ) 

#define IDTSForEachEnumeratorInfo100_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IDTSForEachEnumeratorInfo100_get_FileNameVersionString(This,pbstrVersionString)	\
    ( (This)->lpVtbl -> get_FileNameVersionString(This,pbstrVersionString) ) 

#define IDTSForEachEnumeratorInfo100_get_UITypeName(This,pbstrTypeName)	\
    ( (This)->lpVtbl -> get_UITypeName(This,pbstrTypeName) ) 

#define IDTSForEachEnumeratorInfo100_get_ForEachEnumeratorContact(This,pbstrFEEContact)	\
    ( (This)->lpVtbl -> get_ForEachEnumeratorContact(This,pbstrFEEContact) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachEnumeratorInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachEnumeratorInfos100_INTERFACE_DEFINED__
#define __IDTSForEachEnumeratorInfos100_INTERFACE_DEFINED__

/* interface IDTSForEachEnumeratorInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachEnumeratorInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C85DC3FD-CD99-4BB7-A228-2EBF121FD256")
    IDTSForEachEnumeratorInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachEnumeratorInfo100 **ppForEachEnum) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachEnumeratorInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachEnumeratorInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachEnumeratorInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachEnumeratorInfo100 **ppForEachEnum);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSForEachEnumeratorInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSForEachEnumeratorInfos100Vtbl;

    interface IDTSForEachEnumeratorInfos100
    {
        CONST_VTBL struct IDTSForEachEnumeratorInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachEnumeratorInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachEnumeratorInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachEnumeratorInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachEnumeratorInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachEnumeratorInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachEnumeratorInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachEnumeratorInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachEnumeratorInfos100_get_Item(This,Index,ppForEachEnum)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppForEachEnum) ) 

#define IDTSForEachEnumeratorInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSForEachEnumeratorInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachEnumeratorInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachVariableMappings100_INTERFACE_DEFINED__
#define __IDTSForEachVariableMappings100_INTERFACE_DEFINED__

/* interface IDTSForEachVariableMappings100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachVariableMappings100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2E9AC9F-54BF-4335-B1D2-45C7B6907047")
    IDTSForEachVariableMappings100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachVariableMapping100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IDTSForEachVariableMapping100 **RetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachVariableMappings100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachVariableMappings100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachVariableMappings100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachVariableMappings100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachVariableMappings100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachVariableMappings100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachVariableMappings100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachVariableMappings100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSForEachVariableMappings100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachVariableMapping100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSForEachVariableMappings100 * This,
            /* [retval][out] */ long *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSForEachVariableMappings100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSForEachVariableMappings100 * This,
            /* [retval][out] */ IDTSForEachVariableMapping100 **RetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSForEachVariableMappings100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSForEachVariableMappings100Vtbl;

    interface IDTSForEachVariableMappings100
    {
        CONST_VTBL struct IDTSForEachVariableMappings100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachVariableMappings100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachVariableMappings100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachVariableMappings100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachVariableMappings100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachVariableMappings100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachVariableMappings100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachVariableMappings100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachVariableMappings100_get_Item(This,Index,RetVal)	\
    ( (This)->lpVtbl -> get_Item(This,Index,RetVal) ) 

#define IDTSForEachVariableMappings100_get_Count(This,RetVal)	\
    ( (This)->lpVtbl -> get_Count(This,RetVal) ) 

#define IDTSForEachVariableMappings100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSForEachVariableMappings100_Add(This,RetVal)	\
    ( (This)->lpVtbl -> Add(This,RetVal) ) 

#define IDTSForEachVariableMappings100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachVariableMappings100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachVariableMapping100_INTERFACE_DEFINED__
#define __IDTSForEachVariableMapping100_INTERFACE_DEFINED__

/* interface IDTSForEachVariableMapping100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachVariableMapping100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5014C60E-E780-4B45-89E7-0AA60FB13DF2")
    IDTSForEachVariableMapping100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableName( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VariableName( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ValueIndex( 
            /* [retval][out] */ VARIANT *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ValueIndex( 
            /* [in] */ VARIANT NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachVariableMapping100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachVariableMapping100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachVariableMapping100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachVariableMapping100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachVariableMapping100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachVariableMapping100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachVariableMapping100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachVariableMapping100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableName )( 
            IDTSForEachVariableMapping100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VariableName )( 
            IDTSForEachVariableMapping100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ValueIndex )( 
            IDTSForEachVariableMapping100 * This,
            /* [retval][out] */ VARIANT *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ValueIndex )( 
            IDTSForEachVariableMapping100 * This,
            /* [in] */ VARIANT NewVal);
        
        END_INTERFACE
    } IDTSForEachVariableMapping100Vtbl;

    interface IDTSForEachVariableMapping100
    {
        CONST_VTBL struct IDTSForEachVariableMapping100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachVariableMapping100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachVariableMapping100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachVariableMapping100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachVariableMapping100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachVariableMapping100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachVariableMapping100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachVariableMapping100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachVariableMapping100_get_VariableName(This,RetVal)	\
    ( (This)->lpVtbl -> get_VariableName(This,RetVal) ) 

#define IDTSForEachVariableMapping100_put_VariableName(This,NewVal)	\
    ( (This)->lpVtbl -> put_VariableName(This,NewVal) ) 

#define IDTSForEachVariableMapping100_get_ValueIndex(This,RetVal)	\
    ( (This)->lpVtbl -> get_ValueIndex(This,RetVal) ) 

#define IDTSForEachVariableMapping100_put_ValueIndex(This,NewVal)	\
    ( (This)->lpVtbl -> put_ValueIndex(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachVariableMapping100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachItemValue100_INTERFACE_DEFINED__
#define __IDTSForEachItemValue100_INTERFACE_DEFINED__

/* interface IDTSForEachItemValue100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachItemValue100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B748DCB-F36E-4ACA-A2D6-FCEDAEB367B6")
    IDTSForEachItemValue100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvValue) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT vValue) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachItemValue100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachItemValue100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachItemValue100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachItemValue100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachItemValue100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachItemValue100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachItemValue100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachItemValue100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IDTSForEachItemValue100 * This,
            /* [retval][out] */ VARIANT *pvValue);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IDTSForEachItemValue100 * This,
            /* [in] */ VARIANT vValue);
        
        END_INTERFACE
    } IDTSForEachItemValue100Vtbl;

    interface IDTSForEachItemValue100
    {
        CONST_VTBL struct IDTSForEachItemValue100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachItemValue100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachItemValue100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachItemValue100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachItemValue100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachItemValue100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachItemValue100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachItemValue100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachItemValue100_get_Value(This,pvValue)	\
    ( (This)->lpVtbl -> get_Value(This,pvValue) ) 

#define IDTSForEachItemValue100_put_Value(This,vValue)	\
    ( (This)->lpVtbl -> put_Value(This,vValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachItemValue100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachItem100_INTERFACE_DEFINED__
#define __IDTSForEachItem100_INTERFACE_DEFINED__

/* interface IDTSForEachItem100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachItem100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE83C487-28D7-452F-BF17-459F58B7DC5C")
    IDTSForEachItem100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachItemValue100 **ppForEachItemValue) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IDTSForEachItemValue100 **ppForEachItemValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachItem100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachItem100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachItem100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachItem100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachItem100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachItem100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachItem100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachItem100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSForEachItem100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachItemValue100 **ppForEachItemValue);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSForEachItem100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSForEachItem100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSForEachItem100 * This,
            /* [retval][out] */ IDTSForEachItemValue100 **ppForEachItemValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSForEachItem100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSForEachItem100Vtbl;

    interface IDTSForEachItem100
    {
        CONST_VTBL struct IDTSForEachItem100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachItem100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachItem100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachItem100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachItem100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachItem100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachItem100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachItem100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachItem100_get_Item(This,Index,ppForEachItemValue)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppForEachItemValue) ) 

#define IDTSForEachItem100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSForEachItem100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSForEachItem100_Add(This,ppForEachItemValue)	\
    ( (This)->lpVtbl -> Add(This,ppForEachItemValue) ) 

#define IDTSForEachItem100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachItem100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachItems100_INTERFACE_DEFINED__
#define __IDTSForEachItems100_INTERFACE_DEFINED__

/* interface IDTSForEachItems100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachItems100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("189148B4-7134-4E57-93F7-FD5E73B30AA7")
    IDTSForEachItems100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachItem100 **ppForEachItem) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IDTSForEachItem100 **ppForEachItem) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachItems100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachItems100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachItems100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachItems100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachItems100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachItems100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachItems100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachItems100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSForEachItems100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSForEachItem100 **ppForEachItem);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSForEachItems100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSForEachItems100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSForEachItems100 * This,
            /* [retval][out] */ IDTSForEachItem100 **ppForEachItem);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSForEachItems100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSForEachItems100Vtbl;

    interface IDTSForEachItems100
    {
        CONST_VTBL struct IDTSForEachItems100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachItems100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachItems100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachItems100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachItems100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachItems100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachItems100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachItems100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachItems100_get_Item(This,Index,ppForEachItem)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppForEachItem) ) 

#define IDTSForEachItems100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSForEachItems100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSForEachItems100_Add(This,ppForEachItem)	\
    ( (This)->lpVtbl -> Add(This,ppForEachItem) ) 

#define IDTSForEachItems100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachItems100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachItemEnumerator100_INTERFACE_DEFINED__
#define __IDTSForEachItemEnumerator100_INTERFACE_DEFINED__

/* interface IDTSForEachItemEnumerator100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachItemEnumerator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("507EB35F-08B8-4D81-A869-16FC9D30F88C")
    IDTSForEachItemEnumerator100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Items( 
            /* [retval][out] */ IDTSForEachItems100 **ppItems) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Items( 
            /* [in] */ IDTSForEachItems100 *pItems) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ImportXML( 
            /* [in] */ BSTR bstrFilename) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExportXML( 
            /* [in] */ BSTR bstrFilename) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachItemEnumerator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachItemEnumerator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachItemEnumerator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachItemEnumerator100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Items )( 
            IDTSForEachItemEnumerator100 * This,
            /* [retval][out] */ IDTSForEachItems100 **ppItems);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Items )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ IDTSForEachItems100 *pItems);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ImportXML )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ BSTR bstrFilename);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExportXML )( 
            IDTSForEachItemEnumerator100 * This,
            /* [in] */ BSTR bstrFilename);
        
        END_INTERFACE
    } IDTSForEachItemEnumerator100Vtbl;

    interface IDTSForEachItemEnumerator100
    {
        CONST_VTBL struct IDTSForEachItemEnumerator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachItemEnumerator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachItemEnumerator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachItemEnumerator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachItemEnumerator100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachItemEnumerator100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachItemEnumerator100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachItemEnumerator100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachItemEnumerator100_get_Items(This,ppItems)	\
    ( (This)->lpVtbl -> get_Items(This,ppItems) ) 

#define IDTSForEachItemEnumerator100_put_Items(This,pItems)	\
    ( (This)->lpVtbl -> put_Items(This,pItems) ) 

#define IDTSForEachItemEnumerator100_ImportXML(This,bstrFilename)	\
    ( (This)->lpVtbl -> ImportXML(This,bstrFilename) ) 

#define IDTSForEachItemEnumerator100_ExportXML(This,bstrFilename)	\
    ( (This)->lpVtbl -> ExportXML(This,bstrFilename) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachItemEnumerator100_INTERFACE_DEFINED__ */


#ifndef __IDTSObjectHost100_INTERFACE_DEFINED__
#define __IDTSObjectHost100_INTERFACE_DEFINED__

/* interface IDTSObjectHost100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSObjectHost100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96BFFB2B-18FD-4852-ABDA-3A3DC35C463D")
    IDTSObjectHost100 : public IUnknown
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InnerObject( 
            /* [retval][out] */ IUnknown **RetVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HostType( 
            /* [retval][out] */ DTSObjectHostType *RetVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DelayValidation( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DelayValidation( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSObjectHost100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSObjectHost100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSObjectHost100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSObjectHost100 * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InnerObject )( 
            IDTSObjectHost100 * This,
            /* [retval][out] */ IUnknown **RetVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HostType )( 
            IDTSObjectHost100 * This,
            /* [retval][out] */ DTSObjectHostType *RetVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelayValidation )( 
            IDTSObjectHost100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DelayValidation )( 
            IDTSObjectHost100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        END_INTERFACE
    } IDTSObjectHost100Vtbl;

    interface IDTSObjectHost100
    {
        CONST_VTBL struct IDTSObjectHost100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSObjectHost100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSObjectHost100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSObjectHost100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSObjectHost100_get_InnerObject(This,RetVal)	\
    ( (This)->lpVtbl -> get_InnerObject(This,RetVal) ) 

#define IDTSObjectHost100_get_HostType(This,RetVal)	\
    ( (This)->lpVtbl -> get_HostType(This,RetVal) ) 

#define IDTSObjectHost100_get_DelayValidation(This,RetVal)	\
    ( (This)->lpVtbl -> get_DelayValidation(This,RetVal) ) 

#define IDTSObjectHost100_put_DelayValidation(This,NewVal)	\
    ( (This)->lpVtbl -> put_DelayValidation(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSObjectHost100_INTERFACE_DEFINED__ */


#ifndef __IDTSTaskHost100_INTERFACE_DEFINED__
#define __IDTSTaskHost100_INTERFACE_DEFINED__

/* interface IDTSTaskHost100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSTaskHost100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("770FE594-F52C-4B5A-81F9-FB7B4B52974F")
    IDTSTaskHost100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecValueVariable( 
            /* [retval][out] */ IDTSVariable100 **ppVar) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExecValueVariable( 
            /* [in] */ IDTSVariable100 *pVar) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ApartmentThreaded( 
            /* [retval][out] */ VARIANT_BOOL *pIsApartmentThreaded) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionValue( 
            /* [retval][out] */ VARIANT *pValue) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSTaskHost100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSTaskHost100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSTaskHost100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSTaskHost100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSTaskHost100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSTaskHost100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSTaskHost100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSTaskHost100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecValueVariable )( 
            IDTSTaskHost100 * This,
            /* [retval][out] */ IDTSVariable100 **ppVar);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExecValueVariable )( 
            IDTSTaskHost100 * This,
            /* [in] */ IDTSVariable100 *pVar);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ApartmentThreaded )( 
            IDTSTaskHost100 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsApartmentThreaded);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionValue )( 
            IDTSTaskHost100 * This,
            /* [retval][out] */ VARIANT *pValue);
        
        END_INTERFACE
    } IDTSTaskHost100Vtbl;

    interface IDTSTaskHost100
    {
        CONST_VTBL struct IDTSTaskHost100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSTaskHost100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSTaskHost100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSTaskHost100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSTaskHost100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSTaskHost100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSTaskHost100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSTaskHost100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSTaskHost100_get_ExecValueVariable(This,ppVar)	\
    ( (This)->lpVtbl -> get_ExecValueVariable(This,ppVar) ) 

#define IDTSTaskHost100_put_ExecValueVariable(This,pVar)	\
    ( (This)->lpVtbl -> put_ExecValueVariable(This,pVar) ) 

#define IDTSTaskHost100_get_ApartmentThreaded(This,pIsApartmentThreaded)	\
    ( (This)->lpVtbl -> get_ApartmentThreaded(This,pIsApartmentThreaded) ) 

#define IDTSTaskHost100_get_ExecutionValue(This,pValue)	\
    ( (This)->lpVtbl -> get_ExecutionValue(This,pValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSTaskHost100_INTERFACE_DEFINED__ */


#ifndef __IDTSExecutable100_INTERFACE_DEFINED__
#define __IDTSExecutable100_INTERFACE_DEFINED__

/* interface IDTSExecutable100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExecutable100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8B89BE11-395A-4914-A113-9224E6F1A3C5")
    IDTSExecutable100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Validate( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExecutable100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExecutable100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExecutable100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExecutable100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExecutable100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExecutable100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExecutable100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExecutable100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSExecutable100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IDTSExecutable100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult);
        
        END_INTERFACE
    } IDTSExecutable100Vtbl;

    interface IDTSExecutable100
    {
        CONST_VTBL struct IDTSExecutable100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExecutable100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExecutable100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExecutable100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExecutable100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExecutable100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExecutable100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExecutable100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExecutable100_Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult) ) 

#define IDTSExecutable100_Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult)	\
    ( (This)->lpVtbl -> Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExecutable100_INTERFACE_DEFINED__ */


#ifndef __IDTSPropertiesProvider100_INTERFACE_DEFINED__
#define __IDTSPropertiesProvider100_INTERFACE_DEFINED__

/* interface IDTSPropertiesProvider100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPropertiesProvider100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("50B29133-28C3-4E4E-BD00-7BA0292B81EF")
    IDTSPropertiesProvider100 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ IDTSProperties100 **pProperties) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExpression( 
            /* [in] */ BSTR bstrPropertyName,
            /* [retval][out] */ BSTR *pbstrExpression) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetExpression( 
            /* [in] */ BSTR bstrPropertyName,
            /* [in] */ BSTR bstrExpression) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ComputeExpressions( 
            /* [in] */ VARIANT_BOOL recursive) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPropertiesProvider100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPropertiesProvider100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPropertiesProvider100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPropertiesProvider100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            IDTSPropertiesProvider100 * This,
            /* [retval][out] */ IDTSProperties100 **pProperties);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExpression )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ BSTR bstrPropertyName,
            /* [retval][out] */ BSTR *pbstrExpression);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetExpression )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ BSTR bstrPropertyName,
            /* [in] */ BSTR bstrExpression);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ComputeExpressions )( 
            IDTSPropertiesProvider100 * This,
            /* [in] */ VARIANT_BOOL recursive);
        
        END_INTERFACE
    } IDTSPropertiesProvider100Vtbl;

    interface IDTSPropertiesProvider100
    {
        CONST_VTBL struct IDTSPropertiesProvider100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPropertiesProvider100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPropertiesProvider100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPropertiesProvider100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPropertiesProvider100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPropertiesProvider100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPropertiesProvider100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPropertiesProvider100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPropertiesProvider100_get_Properties(This,pProperties)	\
    ( (This)->lpVtbl -> get_Properties(This,pProperties) ) 

#define IDTSPropertiesProvider100_GetExpression(This,bstrPropertyName,pbstrExpression)	\
    ( (This)->lpVtbl -> GetExpression(This,bstrPropertyName,pbstrExpression) ) 

#define IDTSPropertiesProvider100_SetExpression(This,bstrPropertyName,bstrExpression)	\
    ( (This)->lpVtbl -> SetExpression(This,bstrPropertyName,bstrExpression) ) 

#define IDTSPropertiesProvider100_ComputeExpressions(This,recursive)	\
    ( (This)->lpVtbl -> ComputeExpressions(This,recursive) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPropertiesProvider100_INTERFACE_DEFINED__ */


#ifndef __IDTSPropertiesProviderEx100_INTERFACE_DEFINED__
#define __IDTSPropertiesProviderEx100_INTERFACE_DEFINED__

/* interface IDTSPropertiesProviderEx100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPropertiesProviderEx100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FCFEE18C-244A-4F11-AB79-58DCAE4AA7EE")
    IDTSPropertiesProviderEx100 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_HasExpressions( 
            /* [retval][out] */ VARIANT_BOOL *pvbContainsExpressions) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ComputeExpressions( 
            /* [in] */ IDTSInfoEvents100 *pInfoEvents,
            /* [in] */ long lLocaleID,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPropertiesProviderEx100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPropertiesProviderEx100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPropertiesProviderEx100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPropertiesProviderEx100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPropertiesProviderEx100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPropertiesProviderEx100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPropertiesProviderEx100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPropertiesProviderEx100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasExpressions )( 
            IDTSPropertiesProviderEx100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbContainsExpressions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ComputeExpressions )( 
            IDTSPropertiesProviderEx100 * This,
            /* [in] */ IDTSInfoEvents100 *pInfoEvents,
            /* [in] */ long lLocaleID,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser);
        
        END_INTERFACE
    } IDTSPropertiesProviderEx100Vtbl;

    interface IDTSPropertiesProviderEx100
    {
        CONST_VTBL struct IDTSPropertiesProviderEx100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPropertiesProviderEx100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPropertiesProviderEx100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPropertiesProviderEx100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPropertiesProviderEx100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPropertiesProviderEx100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPropertiesProviderEx100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPropertiesProviderEx100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPropertiesProviderEx100_get_HasExpressions(This,pvbContainsExpressions)	\
    ( (This)->lpVtbl -> get_HasExpressions(This,pvbContainsExpressions) ) 

#define IDTSPropertiesProviderEx100_ComputeExpressions(This,pInfoEvents,lLocaleID,pVariableDispenser)	\
    ( (This)->lpVtbl -> ComputeExpressions(This,pInfoEvents,lLocaleID,pVariableDispenser) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPropertiesProviderEx100_INTERFACE_DEFINED__ */


#ifndef __IDTSContainer100_INTERFACE_DEFINED__
#define __IDTSContainer100_INTERFACE_DEFINED__

/* interface IDTSContainer100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSContainer100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E9052E9-A19F-4CD8-980B-54401D63FC82")
    IDTSContainer100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Variables( 
            /* [retval][out] */ IDTSVariables100 **ppVariables) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableDispenser( 
            /* [retval][out] */ IDTSVariableDispenser100 **ppVariableDispenser) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionStatus( 
            /* [retval][out] */ DTSExecStat *pStatus) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionResult( 
            /* [retval][out] */ DTSExecResult *plResult) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Disable( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Disable( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ForceExecutionResult( 
            /* [retval][out] */ DTSForcedExecResult *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ForceExecutionResult( 
            /* [in] */ DTSForcedExecResult NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FailPackageOnFailure( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FailPackageOnFailure( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FailParentOnFailure( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FailParentOnFailure( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MaximumErrorCount( 
            /* [retval][out] */ long *plCountErrors) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MaximumErrorCount( 
            /* [in] */ long lCountErrors) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDTSContainer100 **ppContainer) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IsolationLevel( 
            /* [in] */ long lIsolationLevel) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IsolationLevel( 
            /* [retval][out] */ long *pIsolationLevel) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TransactionOption( 
            /* [in] */ DTSTransactionOption NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TransactionOption( 
            /* [retval][out] */ DTSTransactionOption *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LoggingOptions( 
            /* [retval][out] */ IDTSLoggingOptions100 **ppLoggingOptions) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LoggingMode( 
            /* [retval][out] */ DTSLoggingMode *pMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LoggingMode( 
            /* [in] */ DTSLoggingMode Mode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IsDefaultLocaleID( 
            /* [retval][out] */ VARIANT_BOOL *pbIsDefaultLocaleID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LocaleID( 
            /* [retval][out] */ long *plLCID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LocaleID( 
            /* [in] */ long lLCID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DelayValidation( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DelayValidation( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LogEntryInfos( 
            /* [retval][out] */ IDTSLogEntryInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ForceExecutionValue( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ForceExecutionValue( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ForcedExecutionValue( 
            /* [retval][out] */ VARIANT *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ForcedExecutionValue( 
            /* [in] */ VARIANT NewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RegenerateID( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetParentID( 
            /* [retval][out] */ BSTR *pbstrID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSContainer100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSContainer100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSContainer100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSContainer100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSContainer100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSContainer100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSContainer100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSContainer100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Variables )( 
            IDTSContainer100 * This,
            /* [retval][out] */ IDTSVariables100 **ppVariables);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableDispenser )( 
            IDTSContainer100 * This,
            /* [retval][out] */ IDTSVariableDispenser100 **ppVariableDispenser);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionStatus )( 
            IDTSContainer100 * This,
            /* [retval][out] */ DTSExecStat *pStatus);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionResult )( 
            IDTSContainer100 * This,
            /* [retval][out] */ DTSExecResult *plResult);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Disable )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Disable )( 
            IDTSContainer100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceExecutionResult )( 
            IDTSContainer100 * This,
            /* [retval][out] */ DTSForcedExecResult *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceExecutionResult )( 
            IDTSContainer100 * This,
            /* [in] */ DTSForcedExecResult NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FailPackageOnFailure )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FailPackageOnFailure )( 
            IDTSContainer100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FailParentOnFailure )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FailParentOnFailure )( 
            IDTSContainer100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaximumErrorCount )( 
            IDTSContainer100 * This,
            /* [retval][out] */ long *plCountErrors);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaximumErrorCount )( 
            IDTSContainer100 * This,
            /* [in] */ long lCountErrors);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IDTSContainer100 * This,
            /* [retval][out] */ IDTSContainer100 **ppContainer);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IsolationLevel )( 
            IDTSContainer100 * This,
            /* [in] */ long lIsolationLevel);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsolationLevel )( 
            IDTSContainer100 * This,
            /* [retval][out] */ long *pIsolationLevel);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TransactionOption )( 
            IDTSContainer100 * This,
            /* [in] */ DTSTransactionOption NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TransactionOption )( 
            IDTSContainer100 * This,
            /* [retval][out] */ DTSTransactionOption *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LoggingOptions )( 
            IDTSContainer100 * This,
            /* [retval][out] */ IDTSLoggingOptions100 **ppLoggingOptions);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LoggingMode )( 
            IDTSContainer100 * This,
            /* [retval][out] */ DTSLoggingMode *pMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LoggingMode )( 
            IDTSContainer100 * This,
            /* [in] */ DTSLoggingMode Mode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IsDefaultLocaleID )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbIsDefaultLocaleID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LocaleID )( 
            IDTSContainer100 * This,
            /* [retval][out] */ long *plLCID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LocaleID )( 
            IDTSContainer100 * This,
            /* [in] */ long lLCID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DelayValidation )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DelayValidation )( 
            IDTSContainer100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogEntryInfos )( 
            IDTSContainer100 * This,
            /* [retval][out] */ IDTSLogEntryInfos100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForceExecutionValue )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForceExecutionValue )( 
            IDTSContainer100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForcedExecutionValue )( 
            IDTSContainer100 * This,
            /* [retval][out] */ VARIANT *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForcedExecutionValue )( 
            IDTSContainer100 * This,
            /* [in] */ VARIANT NewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RegenerateID )( 
            IDTSContainer100 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetParentID )( 
            IDTSContainer100 * This,
            /* [retval][out] */ BSTR *pbstrID);
        
        END_INTERFACE
    } IDTSContainer100Vtbl;

    interface IDTSContainer100
    {
        CONST_VTBL struct IDTSContainer100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSContainer100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSContainer100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSContainer100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSContainer100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSContainer100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSContainer100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSContainer100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSContainer100_get_Variables(This,ppVariables)	\
    ( (This)->lpVtbl -> get_Variables(This,ppVariables) ) 

#define IDTSContainer100_get_VariableDispenser(This,ppVariableDispenser)	\
    ( (This)->lpVtbl -> get_VariableDispenser(This,ppVariableDispenser) ) 

#define IDTSContainer100_get_ExecutionStatus(This,pStatus)	\
    ( (This)->lpVtbl -> get_ExecutionStatus(This,pStatus) ) 

#define IDTSContainer100_get_ExecutionResult(This,plResult)	\
    ( (This)->lpVtbl -> get_ExecutionResult(This,plResult) ) 

#define IDTSContainer100_get_Disable(This,RetVal)	\
    ( (This)->lpVtbl -> get_Disable(This,RetVal) ) 

#define IDTSContainer100_put_Disable(This,NewVal)	\
    ( (This)->lpVtbl -> put_Disable(This,NewVal) ) 

#define IDTSContainer100_get_ForceExecutionResult(This,RetVal)	\
    ( (This)->lpVtbl -> get_ForceExecutionResult(This,RetVal) ) 

#define IDTSContainer100_put_ForceExecutionResult(This,NewVal)	\
    ( (This)->lpVtbl -> put_ForceExecutionResult(This,NewVal) ) 

#define IDTSContainer100_get_FailPackageOnFailure(This,RetVal)	\
    ( (This)->lpVtbl -> get_FailPackageOnFailure(This,RetVal) ) 

#define IDTSContainer100_put_FailPackageOnFailure(This,NewVal)	\
    ( (This)->lpVtbl -> put_FailPackageOnFailure(This,NewVal) ) 

#define IDTSContainer100_get_FailParentOnFailure(This,RetVal)	\
    ( (This)->lpVtbl -> get_FailParentOnFailure(This,RetVal) ) 

#define IDTSContainer100_put_FailParentOnFailure(This,NewVal)	\
    ( (This)->lpVtbl -> put_FailParentOnFailure(This,NewVal) ) 

#define IDTSContainer100_get_MaximumErrorCount(This,plCountErrors)	\
    ( (This)->lpVtbl -> get_MaximumErrorCount(This,plCountErrors) ) 

#define IDTSContainer100_put_MaximumErrorCount(This,lCountErrors)	\
    ( (This)->lpVtbl -> put_MaximumErrorCount(This,lCountErrors) ) 

#define IDTSContainer100_get_Parent(This,ppContainer)	\
    ( (This)->lpVtbl -> get_Parent(This,ppContainer) ) 

#define IDTSContainer100_put_IsolationLevel(This,lIsolationLevel)	\
    ( (This)->lpVtbl -> put_IsolationLevel(This,lIsolationLevel) ) 

#define IDTSContainer100_get_IsolationLevel(This,pIsolationLevel)	\
    ( (This)->lpVtbl -> get_IsolationLevel(This,pIsolationLevel) ) 

#define IDTSContainer100_put_TransactionOption(This,NewVal)	\
    ( (This)->lpVtbl -> put_TransactionOption(This,NewVal) ) 

#define IDTSContainer100_get_TransactionOption(This,RetVal)	\
    ( (This)->lpVtbl -> get_TransactionOption(This,RetVal) ) 

#define IDTSContainer100_get_LoggingOptions(This,ppLoggingOptions)	\
    ( (This)->lpVtbl -> get_LoggingOptions(This,ppLoggingOptions) ) 

#define IDTSContainer100_get_LoggingMode(This,pMode)	\
    ( (This)->lpVtbl -> get_LoggingMode(This,pMode) ) 

#define IDTSContainer100_put_LoggingMode(This,Mode)	\
    ( (This)->lpVtbl -> put_LoggingMode(This,Mode) ) 

#define IDTSContainer100_get_IsDefaultLocaleID(This,pbIsDefaultLocaleID)	\
    ( (This)->lpVtbl -> get_IsDefaultLocaleID(This,pbIsDefaultLocaleID) ) 

#define IDTSContainer100_get_LocaleID(This,plLCID)	\
    ( (This)->lpVtbl -> get_LocaleID(This,plLCID) ) 

#define IDTSContainer100_put_LocaleID(This,lLCID)	\
    ( (This)->lpVtbl -> put_LocaleID(This,lLCID) ) 

#define IDTSContainer100_get_DelayValidation(This,RetVal)	\
    ( (This)->lpVtbl -> get_DelayValidation(This,RetVal) ) 

#define IDTSContainer100_put_DelayValidation(This,NewVal)	\
    ( (This)->lpVtbl -> put_DelayValidation(This,NewVal) ) 

#define IDTSContainer100_get_LogEntryInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_LogEntryInfos(This,RetVal) ) 

#define IDTSContainer100_get_ForceExecutionValue(This,RetVal)	\
    ( (This)->lpVtbl -> get_ForceExecutionValue(This,RetVal) ) 

#define IDTSContainer100_put_ForceExecutionValue(This,NewVal)	\
    ( (This)->lpVtbl -> put_ForceExecutionValue(This,NewVal) ) 

#define IDTSContainer100_get_ForcedExecutionValue(This,RetVal)	\
    ( (This)->lpVtbl -> get_ForcedExecutionValue(This,RetVal) ) 

#define IDTSContainer100_put_ForcedExecutionValue(This,NewVal)	\
    ( (This)->lpVtbl -> put_ForcedExecutionValue(This,NewVal) ) 

#define IDTSContainer100_RegenerateID(This)	\
    ( (This)->lpVtbl -> RegenerateID(This) ) 

#define IDTSContainer100_GetParentID(This,pbstrID)	\
    ( (This)->lpVtbl -> GetParentID(This,pbstrID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSContainer100_INTERFACE_DEFINED__ */


#ifndef __IDTSExecutionLocation100_INTERFACE_DEFINED__
#define __IDTSExecutionLocation100_INTERFACE_DEFINED__

/* interface IDTSExecutionLocation100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExecutionLocation100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B4BDDB2A-1B56-4A13-89AC-952113BCD2E8")
    IDTSExecutionLocation100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionLocation( 
            /* [retval][out] */ DTSExecutionLocation *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExecutionLocation( 
            /* [in] */ DTSExecutionLocation NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionAddress( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExecutionAddress( 
            /* [in] */ BSTR NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExecutionLocation100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExecutionLocation100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExecutionLocation100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExecutionLocation100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExecutionLocation100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExecutionLocation100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExecutionLocation100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExecutionLocation100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionLocation )( 
            IDTSExecutionLocation100 * This,
            /* [retval][out] */ DTSExecutionLocation *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExecutionLocation )( 
            IDTSExecutionLocation100 * This,
            /* [in] */ DTSExecutionLocation NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionAddress )( 
            IDTSExecutionLocation100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExecutionAddress )( 
            IDTSExecutionLocation100 * This,
            /* [in] */ BSTR NewVal);
        
        END_INTERFACE
    } IDTSExecutionLocation100Vtbl;

    interface IDTSExecutionLocation100
    {
        CONST_VTBL struct IDTSExecutionLocation100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExecutionLocation100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExecutionLocation100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExecutionLocation100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExecutionLocation100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExecutionLocation100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExecutionLocation100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExecutionLocation100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExecutionLocation100_get_ExecutionLocation(This,RetVal)	\
    ( (This)->lpVtbl -> get_ExecutionLocation(This,RetVal) ) 

#define IDTSExecutionLocation100_put_ExecutionLocation(This,NewVal)	\
    ( (This)->lpVtbl -> put_ExecutionLocation(This,NewVal) ) 

#define IDTSExecutionLocation100_get_ExecutionAddress(This,RetVal)	\
    ( (This)->lpVtbl -> get_ExecutionAddress(This,RetVal) ) 

#define IDTSExecutionLocation100_put_ExecutionAddress(This,NewVal)	\
    ( (This)->lpVtbl -> put_ExecutionAddress(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExecutionLocation100_INTERFACE_DEFINED__ */


#ifndef __IDTSTask100_INTERFACE_DEFINED__
#define __IDTSTask100_INTERFACE_DEFINED__

/* interface IDTSTask100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSTask100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8266A638-4A4B-4A82-8648-F54B5B879197")
    IDTSTask100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Validate( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSComponentEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSComponentEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ VARIANT vTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionValue( 
            /* [retval][out] */ VARIANT *RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSTask100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSTask100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSTask100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSTask100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSTask100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSTask100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSTask100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSTask100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSTask100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSComponentEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IDTSTask100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSComponentEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ VARIANT vTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionValue )( 
            IDTSTask100 * This,
            /* [retval][out] */ VARIANT *RetVal);
        
        END_INTERFACE
    } IDTSTask100Vtbl;

    interface IDTSTask100
    {
        CONST_VTBL struct IDTSTask100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSTask100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSTask100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSTask100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSTask100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSTask100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSTask100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSTask100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSTask100_Validate(This,pConnections,pVariableDispenser,pEvents,pLog,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pConnections,pVariableDispenser,pEvents,pLog,pValidateResult) ) 

#define IDTSTask100_Execute(This,pConnections,pVariableDispenser,pEvents,pLog,vTransaction,pExecResult)	\
    ( (This)->lpVtbl -> Execute(This,pConnections,pVariableDispenser,pEvents,pLog,vTransaction,pExecResult) ) 

#define IDTSTask100_get_ExecutionValue(This,RetVal)	\
    ( (This)->lpVtbl -> get_ExecutionValue(This,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSTask100_INTERFACE_DEFINED__ */


#ifndef __IDTSProductLevel100_INTERFACE_DEFINED__
#define __IDTSProductLevel100_INTERFACE_DEFINED__

/* interface IDTSProductLevel100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSProductLevel100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2A474F17-FB45-4396-AF16-9489F7E345F7")
    IDTSProductLevel100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_RequiredProductLevel( 
            /* [retval][out] */ DTSProductLevel *eProductLevel) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProductLevel100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProductLevel100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProductLevel100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProductLevel100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSProductLevel100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSProductLevel100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSProductLevel100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSProductLevel100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RequiredProductLevel )( 
            IDTSProductLevel100 * This,
            /* [retval][out] */ DTSProductLevel *eProductLevel);
        
        END_INTERFACE
    } IDTSProductLevel100Vtbl;

    interface IDTSProductLevel100
    {
        CONST_VTBL struct IDTSProductLevel100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProductLevel100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProductLevel100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProductLevel100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProductLevel100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSProductLevel100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSProductLevel100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSProductLevel100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSProductLevel100_get_RequiredProductLevel(This,eProductLevel)	\
    ( (This)->lpVtbl -> get_RequiredProductLevel(This,eProductLevel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProductLevel100_INTERFACE_DEFINED__ */


#ifndef __IDTSTaskInit100_INTERFACE_DEFINED__
#define __IDTSTaskInit100_INTERFACE_DEFINED__

/* interface IDTSTaskInit100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSTaskInit100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8B700F62-ADE7-41BA-9A3A-D91645DF014D")
    IDTSTaskInit100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InitializeTask( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IDTSEventInfos100 *pEventInfos,
            /* [in] */ IDTSLogEntryInfos100 *pLogEntryInfos,
            /* [in] */ IDTSObjectReferenceTracker100 *pRefTracker) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSTaskInit100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSTaskInit100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSTaskInit100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSTaskInit100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSTaskInit100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSTaskInit100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSTaskInit100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSTaskInit100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InitializeTask )( 
            IDTSTaskInit100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariableDispenser100 *pVariableDispenser,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IDTSEventInfos100 *pEventInfos,
            /* [in] */ IDTSLogEntryInfos100 *pLogEntryInfos,
            /* [in] */ IDTSObjectReferenceTracker100 *pRefTracker);
        
        END_INTERFACE
    } IDTSTaskInit100Vtbl;

    interface IDTSTaskInit100
    {
        CONST_VTBL struct IDTSTaskInit100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSTaskInit100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSTaskInit100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSTaskInit100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSTaskInit100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSTaskInit100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSTaskInit100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSTaskInit100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSTaskInit100_InitializeTask(This,pConnections,pVariableDispenser,pEvents,pLog,pEventInfos,pLogEntryInfos,pRefTracker)	\
    ( (This)->lpVtbl -> InitializeTask(This,pConnections,pVariableDispenser,pEvents,pLog,pEventInfos,pLogEntryInfos,pRefTracker) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSTaskInit100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogProviderInit100_INTERFACE_DEFINED__
#define __IDTSLogProviderInit100_INTERFACE_DEFINED__

/* interface IDTSLogProviderInit100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSLogProviderInit100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B5073ED-7199-401A-80FE-FF00A072AF79")
    IDTSLogProviderInit100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE InitializeLogProvider( 
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSObjectReferenceTracker100 *pRefTracker) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogProviderInit100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogProviderInit100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogProviderInit100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogProviderInit100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *InitializeLogProvider )( 
            IDTSLogProviderInit100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [in] */ IDTSObjectReferenceTracker100 *pRefTracker);
        
        END_INTERFACE
    } IDTSLogProviderInit100Vtbl;

    interface IDTSLogProviderInit100
    {
        CONST_VTBL struct IDTSLogProviderInit100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogProviderInit100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogProviderInit100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogProviderInit100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogProviderInit100_InitializeLogProvider(This,pConnections,pEvents,pRefTracker)	\
    ( (This)->lpVtbl -> InitializeLogProvider(This,pConnections,pEvents,pRefTracker) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogProviderInit100_INTERFACE_DEFINED__ */


#ifndef __IDTSSequence100_INTERFACE_DEFINED__
#define __IDTSSequence100_INTERFACE_DEFINED__

/* interface IDTSSequence100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSSequence100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("850D5776-8E24-4FB7-B612-5F4864B93141")
    IDTSSequence100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Executables( 
            /* [retval][out] */ IDTSExecutables100 **ppDTSExecutables) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PrecedenceConstraints( 
            /* [retval][out] */ IDTSPrecedenceConstraints100 **ppDTSPrecedenceConstraints) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSequence100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSequence100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSequence100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSequence100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSSequence100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSSequence100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSSequence100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSSequence100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Executables )( 
            IDTSSequence100 * This,
            /* [retval][out] */ IDTSExecutables100 **ppDTSExecutables);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrecedenceConstraints )( 
            IDTSSequence100 * This,
            /* [retval][out] */ IDTSPrecedenceConstraints100 **ppDTSPrecedenceConstraints);
        
        END_INTERFACE
    } IDTSSequence100Vtbl;

    interface IDTSSequence100
    {
        CONST_VTBL struct IDTSSequence100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSequence100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSequence100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSequence100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSequence100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSSequence100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSSequence100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSSequence100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSSequence100_get_Executables(This,ppDTSExecutables)	\
    ( (This)->lpVtbl -> get_Executables(This,ppDTSExecutables) ) 

#define IDTSSequence100_get_PrecedenceConstraints(This,ppDTSPrecedenceConstraints)	\
    ( (This)->lpVtbl -> get_PrecedenceConstraints(This,ppDTSPrecedenceConstraints) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSequence100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachLoop100_INTERFACE_DEFINED__
#define __IDTSForEachLoop100_INTERFACE_DEFINED__

/* interface IDTSForEachLoop100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachLoop100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("14EFB195-C7B7-48F4-BF52-334ED6DF2334")
    IDTSForEachLoop100 : public IDTSExecutable100
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ForEachEnumerator( 
            /* [retval][out] */ IDTSForEachEnumerator100 **ppEnum) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ForEachEnumerator( 
            /* [in] */ IDTSForEachEnumerator100 *pEnum) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VariableMappings( 
            /* [retval][out] */ IDTSForEachVariableMappings100 **RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachLoop100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachLoop100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachLoop100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachLoop100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachLoop100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachLoop100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachLoop100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachLoop100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSForEachLoop100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IDTSForEachLoop100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForEachEnumerator )( 
            IDTSForEachLoop100 * This,
            /* [retval][out] */ IDTSForEachEnumerator100 **ppEnum);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ForEachEnumerator )( 
            IDTSForEachLoop100 * This,
            /* [in] */ IDTSForEachEnumerator100 *pEnum);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VariableMappings )( 
            IDTSForEachLoop100 * This,
            /* [retval][out] */ IDTSForEachVariableMappings100 **RetVal);
        
        END_INTERFACE
    } IDTSForEachLoop100Vtbl;

    interface IDTSForEachLoop100
    {
        CONST_VTBL struct IDTSForEachLoop100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachLoop100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachLoop100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachLoop100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachLoop100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachLoop100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachLoop100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachLoop100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachLoop100_Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult) ) 

#define IDTSForEachLoop100_Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult)	\
    ( (This)->lpVtbl -> Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult) ) 


#define IDTSForEachLoop100_get_ForEachEnumerator(This,ppEnum)	\
    ( (This)->lpVtbl -> get_ForEachEnumerator(This,ppEnum) ) 

#define IDTSForEachLoop100_put_ForEachEnumerator(This,pEnum)	\
    ( (This)->lpVtbl -> put_ForEachEnumerator(This,pEnum) ) 

#define IDTSForEachLoop100_get_VariableMappings(This,RetVal)	\
    ( (This)->lpVtbl -> get_VariableMappings(This,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachLoop100_INTERFACE_DEFINED__ */


#ifndef __IDTSForLoop100_INTERFACE_DEFINED__
#define __IDTSForLoop100_INTERFACE_DEFINED__

/* interface IDTSForLoop100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForLoop100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("67BF5633-396D-46FA-8D63-ADE4B17B43E1")
    IDTSForLoop100 : public IDTSExecutable100
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InitExpression( 
            /* [retval][out] */ BSTR *pbstrExpr) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_InitExpression( 
            /* [in] */ BSTR bstrExpr) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EvalExpression( 
            /* [retval][out] */ BSTR *pbstrExpr) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EvalExpression( 
            /* [in] */ BSTR bstrExpr) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AssignExpression( 
            /* [retval][out] */ BSTR *pbstrExpr) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_AssignExpression( 
            /* [in] */ BSTR bstrExpr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForLoop100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForLoop100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForLoop100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForLoop100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForLoop100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForLoop100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForLoop100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForLoop100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSForLoop100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IDTSForLoop100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InitExpression )( 
            IDTSForLoop100 * This,
            /* [retval][out] */ BSTR *pbstrExpr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InitExpression )( 
            IDTSForLoop100 * This,
            /* [in] */ BSTR bstrExpr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EvalExpression )( 
            IDTSForLoop100 * This,
            /* [retval][out] */ BSTR *pbstrExpr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EvalExpression )( 
            IDTSForLoop100 * This,
            /* [in] */ BSTR bstrExpr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AssignExpression )( 
            IDTSForLoop100 * This,
            /* [retval][out] */ BSTR *pbstrExpr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_AssignExpression )( 
            IDTSForLoop100 * This,
            /* [in] */ BSTR bstrExpr);
        
        END_INTERFACE
    } IDTSForLoop100Vtbl;

    interface IDTSForLoop100
    {
        CONST_VTBL struct IDTSForLoop100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForLoop100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForLoop100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForLoop100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForLoop100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForLoop100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForLoop100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForLoop100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForLoop100_Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult) ) 

#define IDTSForLoop100_Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult)	\
    ( (This)->lpVtbl -> Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult) ) 


#define IDTSForLoop100_get_InitExpression(This,pbstrExpr)	\
    ( (This)->lpVtbl -> get_InitExpression(This,pbstrExpr) ) 

#define IDTSForLoop100_put_InitExpression(This,bstrExpr)	\
    ( (This)->lpVtbl -> put_InitExpression(This,bstrExpr) ) 

#define IDTSForLoop100_get_EvalExpression(This,pbstrExpr)	\
    ( (This)->lpVtbl -> get_EvalExpression(This,pbstrExpr) ) 

#define IDTSForLoop100_put_EvalExpression(This,bstrExpr)	\
    ( (This)->lpVtbl -> put_EvalExpression(This,bstrExpr) ) 

#define IDTSForLoop100_get_AssignExpression(This,pbstrExpr)	\
    ( (This)->lpVtbl -> get_AssignExpression(This,pbstrExpr) ) 

#define IDTSForLoop100_put_AssignExpression(This,bstrExpr)	\
    ( (This)->lpVtbl -> put_AssignExpression(This,bstrExpr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForLoop100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackage100_INTERFACE_DEFINED__
#define __IDTSPackage100_INTERFACE_DEFINED__

/* interface IDTSPackage100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPackage100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BBD5810-E260-45A2-8C45-B946C6A18C51")
    IDTSPackage100 : public IDTSExecutable100
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Connections( 
            /* [retval][out] */ IDTSConnections100 **DTSConnections) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Configurations( 
            /* [retval][out] */ IDTSConfigurations100 **DTSConfigurations) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageType( 
            /* [retval][out] */ DTSPackageType *PackageType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackageType( 
            /* [in] */ DTSPackageType PackageType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CreatorName( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CreatorName( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CreatorComputerName( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CreatorComputerName( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CreationDate( 
            /* [retval][out] */ DATE *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CreationDate( 
            /* [in] */ DATE NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MaxConcurrentExecutables( 
            /* [retval][out] */ long *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_MaxConcurrentExecutables( 
            /* [in] */ long NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackagePriorityClass( 
            /* [retval][out] */ DTSPriorityClass *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackagePriorityClass( 
            /* [in] */ DTSPriorityClass NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionMajor( 
            /* [retval][out] */ long *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VersionMajor( 
            /* [in] */ long NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionMinor( 
            /* [retval][out] */ long *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VersionMinor( 
            /* [in] */ long NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionBuild( 
            /* [retval][out] */ long *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VersionBuild( 
            /* [in] */ long NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionComments( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_VersionComments( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionGUID( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LastModifiedProductVersion( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Execute( 
            /* [retval][out] */ DTSExecResult *plExecResult) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExportConfigurationFile( 
            /* [in] */ BSTR bstrFileName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ImportConfigurationFile( 
            /* [in] */ BSTR bstrFileName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EnableConfigurations( 
            /* [retval][out] */ VARIANT_BOOL *pvbEnable) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EnableConfigurations( 
            /* [in] */ VARIANT_BOOL vbEnable) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBreakpointTargets( 
            /* [in] */ IDTSBreakpointSite100 *pBreakpointSite,
            /* [in] */ VARIANT_BOOL onlyEnabled,
            /* [retval][out] */ IDTSBreakpointTargets100 **ppBreakpointTargets) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LogProviders( 
            /* [retval][out] */ IDTSLogProviders100 **ppLogProviders) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CertificateObject( 
            /* [retval][out] */ IUnknown **ppCertObj) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CertificateObject( 
            /* [in] */ IUnknown *pCertObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CertificateContext( 
            /* [retval][out] */ LONG64 *phCertContext) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CertificateContext( 
            /* [in] */ LONG64 hCertContext) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CheckSignature( 
            /* [retval][out] */ DTSSignatureStatus *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadUserCertificateByName( 
            /* [in] */ BSTR SubjectName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadUserCertificateByHash( 
            /* [in] */ SAFEARRAY * *ppsaCertHash) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CheckSignatureOnLoad( 
            /* [retval][out] */ VARIANT_BOOL *pvbCheckSigOnLoad) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CheckSignatureOnLoad( 
            /* [in] */ VARIANT_BOOL vbCheckSigOnLoad) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExtendedProperties( 
            /* [retval][out] */ IDTSExtendedProperties100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CheckpointFileName( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CheckpointFileName( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EncryptCheckpoints( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EncryptCheckpoints( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SaveCheckpoints( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SaveCheckpoints( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CheckpointUsage( 
            /* [retval][out] */ DTSCheckpointUsage *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CheckpointUsage( 
            /* [in] */ DTSCheckpointUsage NewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ProcessConfiguration( 
            /* [in] */ BSTR bstrPath,
            /* [in] */ VARIANT vValue) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetObjectFromPackagePath( 
            /* [in] */ BSTR bstrPath,
            /* [out] */ IDTSProperty100 **ppProperty,
            /* [retval][out] */ IDispatch **ppObj) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Errors( 
            /* [retval][out] */ IDTSErrors100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Warnings( 
            /* [retval][out] */ IDTSWarnings100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProtectionLevel( 
            /* [retval][out] */ DTSProtectionLevel *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProtectionLevel( 
            /* [in] */ DTSProtectionLevel NewVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackagePassword( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SQLFolder( 
            /* [retval][out] */ BSTR *pbstrFolder) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SQLFolder( 
            /* [in] */ BSTR bstrFolder) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_InteractiveMode( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_InteractiveMode( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineMode( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OfflineMode( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DesignEvents( 
            /* [retval][out] */ IDTSEvents100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DesignEvents( 
            /* [in] */ IDTSEvents100 *NewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FindReferencedObjects( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ IDTSEnumReferencedObjects100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageFormatVersion( 
            /* [retval][out] */ LONG *plPackageFormatVersion) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UpdatePackage( 
            /* [in] */ VARIANT_BOOL vbUpdatePackage) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UpdatePackage( 
            /* [retval][out] */ VARIANT_BOOL *pvbUpdatePackage) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UpdateObjects( 
            /* [in] */ VARIANT_BOOL vbUpdateObjects) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UpdateObjects( 
            /* [retval][out] */ VARIANT_BOOL *pvbUpdateObjects) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SuppressConfigurationWarnings( 
            /* [in] */ VARIANT_BOOL vbSuppressConfigWarns) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SuppressConfigurationWarnings( 
            /* [retval][out] */ VARIANT_BOOL *pvbSuppressConfigWarns) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageUpgradeOptions( 
            /* [retval][out] */ DTS_PACKAGE_UPGRADE_OPTIONS *pPackageUpgradeOptions) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackageUpgradeOptions( 
            /* [in] */ DTS_PACKAGE_UPGRADE_OPTIONS packageUpgradeOptions) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PermitUnencryptedSave( 
            /* [in] */ VARIANT_BOOL vbPermit) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DesignTimeProperties( 
            /* [retval][out] */ BSTR *pbstrDesignTimeProperties) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DesignTimeProperties( 
            /* [in] */ BSTR bstrDesignTimeProperties) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageLocation( 
            /* [retval][out] */ BSTR *pbstrPackageLocation) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SafeRecursiveProjectPackageExecution( 
            /* [retval][out] */ VARIANT_BOOL *pvbEnable) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_SafeRecursiveProjectPackageExecution( 
            /* [in] */ VARIANT_BOOL vbEnable) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPreExecutionPackageXML( 
            /* [out] */ VARIANT *pvDestination) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackage100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackage100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackage100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackage100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackage100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackage100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackage100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackage100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSPackage100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IDTSPackage100 * This,
            /* [in] */ IDTSConnections100 *pConnections,
            /* [in] */ IDTSVariables100 *pVariables,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ IDTSLogging100 *pLog,
            /* [in] */ IUnknown *pTransaction,
            /* [retval][out] */ DTSExecResult *pExecResult);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Connections )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSConnections100 **DTSConnections);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Configurations )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSConfigurations100 **DTSConfigurations);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageType )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTSPackageType *PackageType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackageType )( 
            IDTSPackage100 * This,
            /* [in] */ DTSPackageType PackageType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreatorName )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CreatorName )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreatorComputerName )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CreatorComputerName )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreationDate )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DATE *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CreationDate )( 
            IDTSPackage100 * This,
            /* [in] */ DATE NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_MaxConcurrentExecutables )( 
            IDTSPackage100 * This,
            /* [retval][out] */ long *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_MaxConcurrentExecutables )( 
            IDTSPackage100 * This,
            /* [in] */ long NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackagePriorityClass )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTSPriorityClass *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackagePriorityClass )( 
            IDTSPackage100 * This,
            /* [in] */ DTSPriorityClass NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionMajor )( 
            IDTSPackage100 * This,
            /* [retval][out] */ long *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VersionMajor )( 
            IDTSPackage100 * This,
            /* [in] */ long NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionMinor )( 
            IDTSPackage100 * This,
            /* [retval][out] */ long *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VersionMinor )( 
            IDTSPackage100 * This,
            /* [in] */ long NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionBuild )( 
            IDTSPackage100 * This,
            /* [retval][out] */ long *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VersionBuild )( 
            IDTSPackage100 * This,
            /* [in] */ long NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionComments )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_VersionComments )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionGUID )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LastModifiedProductVersion )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Execute )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTSExecResult *plExecResult);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExportConfigurationFile )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR bstrFileName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ImportConfigurationFile )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR bstrFileName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableConfigurations )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbEnable);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableConfigurations )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbEnable);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBreakpointTargets )( 
            IDTSPackage100 * This,
            /* [in] */ IDTSBreakpointSite100 *pBreakpointSite,
            /* [in] */ VARIANT_BOOL onlyEnabled,
            /* [retval][out] */ IDTSBreakpointTargets100 **ppBreakpointTargets);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogProviders )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSLogProviders100 **ppLogProviders);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CertificateObject )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IUnknown **ppCertObj);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CertificateObject )( 
            IDTSPackage100 * This,
            /* [in] */ IUnknown *pCertObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CertificateContext )( 
            IDTSPackage100 * This,
            /* [retval][out] */ LONG64 *phCertContext);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CertificateContext )( 
            IDTSPackage100 * This,
            /* [in] */ LONG64 hCertContext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CheckSignature )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTSSignatureStatus *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadUserCertificateByName )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR SubjectName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadUserCertificateByHash )( 
            IDTSPackage100 * This,
            /* [in] */ SAFEARRAY * *ppsaCertHash);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CheckSignatureOnLoad )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbCheckSigOnLoad);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CheckSignatureOnLoad )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbCheckSigOnLoad);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExtendedProperties )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSExtendedProperties100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CheckpointFileName )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CheckpointFileName )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EncryptCheckpoints )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EncryptCheckpoints )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SaveCheckpoints )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SaveCheckpoints )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CheckpointUsage )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTSCheckpointUsage *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CheckpointUsage )( 
            IDTSPackage100 * This,
            /* [in] */ DTSCheckpointUsage NewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ProcessConfiguration )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR bstrPath,
            /* [in] */ VARIANT vValue);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectFromPackagePath )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR bstrPath,
            /* [out] */ IDTSProperty100 **ppProperty,
            /* [retval][out] */ IDispatch **ppObj);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Errors )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSErrors100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Warnings )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSWarnings100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionLevel )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTSProtectionLevel *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectionLevel )( 
            IDTSPackage100 * This,
            /* [in] */ DTSProtectionLevel NewVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackagePassword )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SQLFolder )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *pbstrFolder);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SQLFolder )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR bstrFolder);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InteractiveMode )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_InteractiveMode )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineMode )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineMode )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DesignEvents )( 
            IDTSPackage100 * This,
            /* [retval][out] */ IDTSEvents100 **RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DesignEvents )( 
            IDTSPackage100 * This,
            /* [in] */ IDTSEvents100 *NewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FindReferencedObjects )( 
            IDTSPackage100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ IDTSEnumReferencedObjects100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageFormatVersion )( 
            IDTSPackage100 * This,
            /* [retval][out] */ LONG *plPackageFormatVersion);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpdatePackage )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbUpdatePackage);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpdatePackage )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUpdatePackage);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpdateObjects )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbUpdateObjects);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpdateObjects )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUpdateObjects);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuppressConfigurationWarnings )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbSuppressConfigWarns);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuppressConfigurationWarnings )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbSuppressConfigWarns);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageUpgradeOptions )( 
            IDTSPackage100 * This,
            /* [retval][out] */ DTS_PACKAGE_UPGRADE_OPTIONS *pPackageUpgradeOptions);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackageUpgradeOptions )( 
            IDTSPackage100 * This,
            /* [in] */ DTS_PACKAGE_UPGRADE_OPTIONS packageUpgradeOptions);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PermitUnencryptedSave )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbPermit);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DesignTimeProperties )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *pbstrDesignTimeProperties);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DesignTimeProperties )( 
            IDTSPackage100 * This,
            /* [in] */ BSTR bstrDesignTimeProperties);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageLocation )( 
            IDTSPackage100 * This,
            /* [retval][out] */ BSTR *pbstrPackageLocation);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SafeRecursiveProjectPackageExecution )( 
            IDTSPackage100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbEnable);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SafeRecursiveProjectPackageExecution )( 
            IDTSPackage100 * This,
            /* [in] */ VARIANT_BOOL vbEnable);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPreExecutionPackageXML )( 
            IDTSPackage100 * This,
            /* [out] */ VARIANT *pvDestination);
        
        END_INTERFACE
    } IDTSPackage100Vtbl;

    interface IDTSPackage100
    {
        CONST_VTBL struct IDTSPackage100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackage100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackage100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackage100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackage100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackage100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackage100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackage100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackage100_Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pConnections,pVariables,pEvents,pLog,pValidateResult) ) 

#define IDTSPackage100_Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult)	\
    ( (This)->lpVtbl -> Execute(This,pConnections,pVariables,pEvents,pLog,pTransaction,pExecResult) ) 


#define IDTSPackage100_get_Connections(This,DTSConnections)	\
    ( (This)->lpVtbl -> get_Connections(This,DTSConnections) ) 

#define IDTSPackage100_get_Configurations(This,DTSConfigurations)	\
    ( (This)->lpVtbl -> get_Configurations(This,DTSConfigurations) ) 

#define IDTSPackage100_get_PackageType(This,PackageType)	\
    ( (This)->lpVtbl -> get_PackageType(This,PackageType) ) 

#define IDTSPackage100_put_PackageType(This,PackageType)	\
    ( (This)->lpVtbl -> put_PackageType(This,PackageType) ) 

#define IDTSPackage100_get_CreatorName(This,RetVal)	\
    ( (This)->lpVtbl -> get_CreatorName(This,RetVal) ) 

#define IDTSPackage100_put_CreatorName(This,NewVal)	\
    ( (This)->lpVtbl -> put_CreatorName(This,NewVal) ) 

#define IDTSPackage100_get_CreatorComputerName(This,RetVal)	\
    ( (This)->lpVtbl -> get_CreatorComputerName(This,RetVal) ) 

#define IDTSPackage100_put_CreatorComputerName(This,NewVal)	\
    ( (This)->lpVtbl -> put_CreatorComputerName(This,NewVal) ) 

#define IDTSPackage100_get_CreationDate(This,RetVal)	\
    ( (This)->lpVtbl -> get_CreationDate(This,RetVal) ) 

#define IDTSPackage100_put_CreationDate(This,NewVal)	\
    ( (This)->lpVtbl -> put_CreationDate(This,NewVal) ) 

#define IDTSPackage100_get_MaxConcurrentExecutables(This,RetVal)	\
    ( (This)->lpVtbl -> get_MaxConcurrentExecutables(This,RetVal) ) 

#define IDTSPackage100_put_MaxConcurrentExecutables(This,NewVal)	\
    ( (This)->lpVtbl -> put_MaxConcurrentExecutables(This,NewVal) ) 

#define IDTSPackage100_get_PackagePriorityClass(This,RetVal)	\
    ( (This)->lpVtbl -> get_PackagePriorityClass(This,RetVal) ) 

#define IDTSPackage100_put_PackagePriorityClass(This,NewVal)	\
    ( (This)->lpVtbl -> put_PackagePriorityClass(This,NewVal) ) 

#define IDTSPackage100_get_VersionMajor(This,RetVal)	\
    ( (This)->lpVtbl -> get_VersionMajor(This,RetVal) ) 

#define IDTSPackage100_put_VersionMajor(This,NewVal)	\
    ( (This)->lpVtbl -> put_VersionMajor(This,NewVal) ) 

#define IDTSPackage100_get_VersionMinor(This,RetVal)	\
    ( (This)->lpVtbl -> get_VersionMinor(This,RetVal) ) 

#define IDTSPackage100_put_VersionMinor(This,NewVal)	\
    ( (This)->lpVtbl -> put_VersionMinor(This,NewVal) ) 

#define IDTSPackage100_get_VersionBuild(This,RetVal)	\
    ( (This)->lpVtbl -> get_VersionBuild(This,RetVal) ) 

#define IDTSPackage100_put_VersionBuild(This,NewVal)	\
    ( (This)->lpVtbl -> put_VersionBuild(This,NewVal) ) 

#define IDTSPackage100_get_VersionComments(This,RetVal)	\
    ( (This)->lpVtbl -> get_VersionComments(This,RetVal) ) 

#define IDTSPackage100_put_VersionComments(This,NewVal)	\
    ( (This)->lpVtbl -> put_VersionComments(This,NewVal) ) 

#define IDTSPackage100_get_VersionGUID(This,RetVal)	\
    ( (This)->lpVtbl -> get_VersionGUID(This,RetVal) ) 

#define IDTSPackage100_get_LastModifiedProductVersion(This,RetVal)	\
    ( (This)->lpVtbl -> get_LastModifiedProductVersion(This,RetVal) ) 

#define IDTSPackage100_Execute(This,plExecResult)	\
    ( (This)->lpVtbl -> Execute(This,plExecResult) ) 

#define IDTSPackage100_ExportConfigurationFile(This,bstrFileName)	\
    ( (This)->lpVtbl -> ExportConfigurationFile(This,bstrFileName) ) 

#define IDTSPackage100_ImportConfigurationFile(This,bstrFileName)	\
    ( (This)->lpVtbl -> ImportConfigurationFile(This,bstrFileName) ) 

#define IDTSPackage100_get_EnableConfigurations(This,pvbEnable)	\
    ( (This)->lpVtbl -> get_EnableConfigurations(This,pvbEnable) ) 

#define IDTSPackage100_put_EnableConfigurations(This,vbEnable)	\
    ( (This)->lpVtbl -> put_EnableConfigurations(This,vbEnable) ) 

#define IDTSPackage100_GetBreakpointTargets(This,pBreakpointSite,onlyEnabled,ppBreakpointTargets)	\
    ( (This)->lpVtbl -> GetBreakpointTargets(This,pBreakpointSite,onlyEnabled,ppBreakpointTargets) ) 

#define IDTSPackage100_get_LogProviders(This,ppLogProviders)	\
    ( (This)->lpVtbl -> get_LogProviders(This,ppLogProviders) ) 

#define IDTSPackage100_get_CertificateObject(This,ppCertObj)	\
    ( (This)->lpVtbl -> get_CertificateObject(This,ppCertObj) ) 

#define IDTSPackage100_put_CertificateObject(This,pCertObj)	\
    ( (This)->lpVtbl -> put_CertificateObject(This,pCertObj) ) 

#define IDTSPackage100_get_CertificateContext(This,phCertContext)	\
    ( (This)->lpVtbl -> get_CertificateContext(This,phCertContext) ) 

#define IDTSPackage100_put_CertificateContext(This,hCertContext)	\
    ( (This)->lpVtbl -> put_CertificateContext(This,hCertContext) ) 

#define IDTSPackage100_CheckSignature(This,RetVal)	\
    ( (This)->lpVtbl -> CheckSignature(This,RetVal) ) 

#define IDTSPackage100_LoadUserCertificateByName(This,SubjectName)	\
    ( (This)->lpVtbl -> LoadUserCertificateByName(This,SubjectName) ) 

#define IDTSPackage100_LoadUserCertificateByHash(This,ppsaCertHash)	\
    ( (This)->lpVtbl -> LoadUserCertificateByHash(This,ppsaCertHash) ) 

#define IDTSPackage100_get_CheckSignatureOnLoad(This,pvbCheckSigOnLoad)	\
    ( (This)->lpVtbl -> get_CheckSignatureOnLoad(This,pvbCheckSigOnLoad) ) 

#define IDTSPackage100_put_CheckSignatureOnLoad(This,vbCheckSigOnLoad)	\
    ( (This)->lpVtbl -> put_CheckSignatureOnLoad(This,vbCheckSigOnLoad) ) 

#define IDTSPackage100_get_ExtendedProperties(This,RetVal)	\
    ( (This)->lpVtbl -> get_ExtendedProperties(This,RetVal) ) 

#define IDTSPackage100_get_CheckpointFileName(This,RetVal)	\
    ( (This)->lpVtbl -> get_CheckpointFileName(This,RetVal) ) 

#define IDTSPackage100_put_CheckpointFileName(This,NewVal)	\
    ( (This)->lpVtbl -> put_CheckpointFileName(This,NewVal) ) 

#define IDTSPackage100_get_EncryptCheckpoints(This,RetVal)	\
    ( (This)->lpVtbl -> get_EncryptCheckpoints(This,RetVal) ) 

#define IDTSPackage100_put_EncryptCheckpoints(This,NewVal)	\
    ( (This)->lpVtbl -> put_EncryptCheckpoints(This,NewVal) ) 

#define IDTSPackage100_get_SaveCheckpoints(This,RetVal)	\
    ( (This)->lpVtbl -> get_SaveCheckpoints(This,RetVal) ) 

#define IDTSPackage100_put_SaveCheckpoints(This,NewVal)	\
    ( (This)->lpVtbl -> put_SaveCheckpoints(This,NewVal) ) 

#define IDTSPackage100_get_CheckpointUsage(This,RetVal)	\
    ( (This)->lpVtbl -> get_CheckpointUsage(This,RetVal) ) 

#define IDTSPackage100_put_CheckpointUsage(This,NewVal)	\
    ( (This)->lpVtbl -> put_CheckpointUsage(This,NewVal) ) 

#define IDTSPackage100_ProcessConfiguration(This,bstrPath,vValue)	\
    ( (This)->lpVtbl -> ProcessConfiguration(This,bstrPath,vValue) ) 

#define IDTSPackage100_GetObjectFromPackagePath(This,bstrPath,ppProperty,ppObj)	\
    ( (This)->lpVtbl -> GetObjectFromPackagePath(This,bstrPath,ppProperty,ppObj) ) 

#define IDTSPackage100_get_Errors(This,RetVal)	\
    ( (This)->lpVtbl -> get_Errors(This,RetVal) ) 

#define IDTSPackage100_get_Warnings(This,RetVal)	\
    ( (This)->lpVtbl -> get_Warnings(This,RetVal) ) 

#define IDTSPackage100_get_ProtectionLevel(This,RetVal)	\
    ( (This)->lpVtbl -> get_ProtectionLevel(This,RetVal) ) 

#define IDTSPackage100_put_ProtectionLevel(This,NewVal)	\
    ( (This)->lpVtbl -> put_ProtectionLevel(This,NewVal) ) 

#define IDTSPackage100_put_PackagePassword(This,NewVal)	\
    ( (This)->lpVtbl -> put_PackagePassword(This,NewVal) ) 

#define IDTSPackage100_get_SQLFolder(This,pbstrFolder)	\
    ( (This)->lpVtbl -> get_SQLFolder(This,pbstrFolder) ) 

#define IDTSPackage100_put_SQLFolder(This,bstrFolder)	\
    ( (This)->lpVtbl -> put_SQLFolder(This,bstrFolder) ) 

#define IDTSPackage100_get_InteractiveMode(This,RetVal)	\
    ( (This)->lpVtbl -> get_InteractiveMode(This,RetVal) ) 

#define IDTSPackage100_put_InteractiveMode(This,NewVal)	\
    ( (This)->lpVtbl -> put_InteractiveMode(This,NewVal) ) 

#define IDTSPackage100_get_OfflineMode(This,RetVal)	\
    ( (This)->lpVtbl -> get_OfflineMode(This,RetVal) ) 

#define IDTSPackage100_put_OfflineMode(This,NewVal)	\
    ( (This)->lpVtbl -> put_OfflineMode(This,NewVal) ) 

#define IDTSPackage100_get_DesignEvents(This,RetVal)	\
    ( (This)->lpVtbl -> get_DesignEvents(This,RetVal) ) 

#define IDTSPackage100_put_DesignEvents(This,NewVal)	\
    ( (This)->lpVtbl -> put_DesignEvents(This,NewVal) ) 

#define IDTSPackage100_FindReferencedObjects(This,pObject,RetVal)	\
    ( (This)->lpVtbl -> FindReferencedObjects(This,pObject,RetVal) ) 

#define IDTSPackage100_get_PackageFormatVersion(This,plPackageFormatVersion)	\
    ( (This)->lpVtbl -> get_PackageFormatVersion(This,plPackageFormatVersion) ) 

#define IDTSPackage100_put_UpdatePackage(This,vbUpdatePackage)	\
    ( (This)->lpVtbl -> put_UpdatePackage(This,vbUpdatePackage) ) 

#define IDTSPackage100_get_UpdatePackage(This,pvbUpdatePackage)	\
    ( (This)->lpVtbl -> get_UpdatePackage(This,pvbUpdatePackage) ) 

#define IDTSPackage100_put_UpdateObjects(This,vbUpdateObjects)	\
    ( (This)->lpVtbl -> put_UpdateObjects(This,vbUpdateObjects) ) 

#define IDTSPackage100_get_UpdateObjects(This,pvbUpdateObjects)	\
    ( (This)->lpVtbl -> get_UpdateObjects(This,pvbUpdateObjects) ) 

#define IDTSPackage100_put_SuppressConfigurationWarnings(This,vbSuppressConfigWarns)	\
    ( (This)->lpVtbl -> put_SuppressConfigurationWarnings(This,vbSuppressConfigWarns) ) 

#define IDTSPackage100_get_SuppressConfigurationWarnings(This,pvbSuppressConfigWarns)	\
    ( (This)->lpVtbl -> get_SuppressConfigurationWarnings(This,pvbSuppressConfigWarns) ) 

#define IDTSPackage100_get_PackageUpgradeOptions(This,pPackageUpgradeOptions)	\
    ( (This)->lpVtbl -> get_PackageUpgradeOptions(This,pPackageUpgradeOptions) ) 

#define IDTSPackage100_put_PackageUpgradeOptions(This,packageUpgradeOptions)	\
    ( (This)->lpVtbl -> put_PackageUpgradeOptions(This,packageUpgradeOptions) ) 

#define IDTSPackage100_PermitUnencryptedSave(This,vbPermit)	\
    ( (This)->lpVtbl -> PermitUnencryptedSave(This,vbPermit) ) 

#define IDTSPackage100_get_DesignTimeProperties(This,pbstrDesignTimeProperties)	\
    ( (This)->lpVtbl -> get_DesignTimeProperties(This,pbstrDesignTimeProperties) ) 

#define IDTSPackage100_put_DesignTimeProperties(This,bstrDesignTimeProperties)	\
    ( (This)->lpVtbl -> put_DesignTimeProperties(This,bstrDesignTimeProperties) ) 

#define IDTSPackage100_get_PackageLocation(This,pbstrPackageLocation)	\
    ( (This)->lpVtbl -> get_PackageLocation(This,pbstrPackageLocation) ) 

#define IDTSPackage100_get_SafeRecursiveProjectPackageExecution(This,pvbEnable)	\
    ( (This)->lpVtbl -> get_SafeRecursiveProjectPackageExecution(This,pvbEnable) ) 

#define IDTSPackage100_put_SafeRecursiveProjectPackageExecution(This,vbEnable)	\
    ( (This)->lpVtbl -> put_SafeRecursiveProjectPackageExecution(This,vbEnable) ) 

#define IDTSPackage100_GetPreExecutionPackageXML(This,pvDestination)	\
    ( (This)->lpVtbl -> GetPreExecutionPackageXML(This,pvDestination) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackage100_INTERFACE_DEFINED__ */


#ifndef __IDTSProject100_INTERFACE_DEFINED__
#define __IDTSProject100_INTERFACE_DEFINED__

/* interface IDTSProject100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSProject100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F6402F35-49FA-40EF-B829-3CCF31BE1F3E")
    IDTSProject100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPackageByName( 
            /* [in] */ BSTR bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetConfiguredPackageByName( 
            /* [in] */ BSTR bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPackage( 
            /* [in] */ int iPackage,
            /* [out] */ BSTR *bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPackageNoLoad( 
            /* [in] */ int iPackage,
            /* [out] */ BSTR *bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPackageCount( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ContainsPackage( 
            /* [in] */ BSTR bstrPackageStreamName,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParameterVariableByName( 
            /* [in] */ BSTR bstrName,
            /* [retval][out] */ IDTSVariable100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParameterVariable( 
            /* [in] */ int index,
            /* [retval][out] */ IDTSVariable100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParameterCount( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParameter( 
            /* [in] */ int index,
            /* [retval][out] */ IDTSParameter100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetParameterVariableByID( 
            /* [in] */ BSTR bstrID,
            /* [retval][out] */ IDTSVariable100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetConnections( 
            /* [retval][out] */ IDTSConnections100 **pRetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE EnsureConnectionsAreLoaded( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineMode( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_OfflineMode( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProtectionLevel( 
            /* [retval][out] */ DTSProtectionLevel *RetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE MatchPassword( 
            /* [in] */ BSTR bstrPackagePassword,
            /* [retval][out] */ VARIANT_BOOL *pvbMatch) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ProtectionLevelRequireConsistency( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetVariables( 
            /* [retval][out] */ IDTSVariables100 **ppVariables) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProject100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProject100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProject100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProject100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPackageByName )( 
            IDTSProject100 * This,
            /* [in] */ BSTR bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetConfiguredPackageByName )( 
            IDTSProject100 * This,
            /* [in] */ BSTR bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPackage )( 
            IDTSProject100 * This,
            /* [in] */ int iPackage,
            /* [out] */ BSTR *bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPackageNoLoad )( 
            IDTSProject100 * This,
            /* [in] */ int iPackage,
            /* [out] */ BSTR *bstrPackageStreamName,
            /* [retval][out] */ IDTSPackage100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPackageCount )( 
            IDTSProject100 * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ContainsPackage )( 
            IDTSProject100 * This,
            /* [in] */ BSTR bstrPackageStreamName,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParameterVariableByName )( 
            IDTSProject100 * This,
            /* [in] */ BSTR bstrName,
            /* [retval][out] */ IDTSVariable100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParameterVariable )( 
            IDTSProject100 * This,
            /* [in] */ int index,
            /* [retval][out] */ IDTSVariable100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParameterCount )( 
            IDTSProject100 * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParameter )( 
            IDTSProject100 * This,
            /* [in] */ int index,
            /* [retval][out] */ IDTSParameter100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetParameterVariableByID )( 
            IDTSProject100 * This,
            /* [in] */ BSTR bstrID,
            /* [retval][out] */ IDTSVariable100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetConnections )( 
            IDTSProject100 * This,
            /* [retval][out] */ IDTSConnections100 **pRetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *EnsureConnectionsAreLoaded )( 
            IDTSProject100 * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineMode )( 
            IDTSProject100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineMode )( 
            IDTSProject100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProtectionLevel )( 
            IDTSProject100 * This,
            /* [retval][out] */ DTSProtectionLevel *RetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *MatchPassword )( 
            IDTSProject100 * This,
            /* [in] */ BSTR bstrPackagePassword,
            /* [retval][out] */ VARIANT_BOOL *pvbMatch);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionLevelRequireConsistency )( 
            IDTSProject100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetVariables )( 
            IDTSProject100 * This,
            /* [retval][out] */ IDTSVariables100 **ppVariables);
        
        END_INTERFACE
    } IDTSProject100Vtbl;

    interface IDTSProject100
    {
        CONST_VTBL struct IDTSProject100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProject100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProject100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProject100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProject100_GetPackageByName(This,bstrPackageStreamName,pRetVal)	\
    ( (This)->lpVtbl -> GetPackageByName(This,bstrPackageStreamName,pRetVal) ) 

#define IDTSProject100_GetConfiguredPackageByName(This,bstrPackageStreamName,pRetVal)	\
    ( (This)->lpVtbl -> GetConfiguredPackageByName(This,bstrPackageStreamName,pRetVal) ) 

#define IDTSProject100_GetPackage(This,iPackage,bstrPackageStreamName,pRetVal)	\
    ( (This)->lpVtbl -> GetPackage(This,iPackage,bstrPackageStreamName,pRetVal) ) 

#define IDTSProject100_GetPackageNoLoad(This,iPackage,bstrPackageStreamName,pRetVal)	\
    ( (This)->lpVtbl -> GetPackageNoLoad(This,iPackage,bstrPackageStreamName,pRetVal) ) 

#define IDTSProject100_GetPackageCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetPackageCount(This,pRetVal) ) 

#define IDTSProject100_ContainsPackage(This,bstrPackageStreamName,pRetVal)	\
    ( (This)->lpVtbl -> ContainsPackage(This,bstrPackageStreamName,pRetVal) ) 

#define IDTSProject100_GetParameterVariableByName(This,bstrName,pRetVal)	\
    ( (This)->lpVtbl -> GetParameterVariableByName(This,bstrName,pRetVal) ) 

#define IDTSProject100_GetParameterVariable(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetParameterVariable(This,index,pRetVal) ) 

#define IDTSProject100_GetParameterCount(This,pRetVal)	\
    ( (This)->lpVtbl -> GetParameterCount(This,pRetVal) ) 

#define IDTSProject100_GetParameter(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetParameter(This,index,pRetVal) ) 

#define IDTSProject100_GetParameterVariableByID(This,bstrID,pRetVal)	\
    ( (This)->lpVtbl -> GetParameterVariableByID(This,bstrID,pRetVal) ) 

#define IDTSProject100_GetConnections(This,pRetVal)	\
    ( (This)->lpVtbl -> GetConnections(This,pRetVal) ) 

#define IDTSProject100_EnsureConnectionsAreLoaded(This)	\
    ( (This)->lpVtbl -> EnsureConnectionsAreLoaded(This) ) 

#define IDTSProject100_get_OfflineMode(This,RetVal)	\
    ( (This)->lpVtbl -> get_OfflineMode(This,RetVal) ) 

#define IDTSProject100_put_OfflineMode(This,NewVal)	\
    ( (This)->lpVtbl -> put_OfflineMode(This,NewVal) ) 

#define IDTSProject100_GetProtectionLevel(This,RetVal)	\
    ( (This)->lpVtbl -> GetProtectionLevel(This,RetVal) ) 

#define IDTSProject100_MatchPassword(This,bstrPackagePassword,pvbMatch)	\
    ( (This)->lpVtbl -> MatchPassword(This,bstrPackagePassword,pvbMatch) ) 

#define IDTSProject100_get_ProtectionLevelRequireConsistency(This,RetVal)	\
    ( (This)->lpVtbl -> get_ProtectionLevelRequireConsistency(This,RetVal) ) 

#define IDTSProject100_GetVariables(This,ppVariables)	\
    ( (This)->lpVtbl -> GetVariables(This,ppVariables) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProject100_INTERFACE_DEFINED__ */


#ifndef __IDTSProjectPackage100_INTERFACE_DEFINED__
#define __IDTSProjectPackage100_INTERFACE_DEFINED__

/* interface IDTSProjectPackage100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSProjectPackage100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04FF29CA-D6F5-422E-A8D1-A27A6563666E")
    IDTSProjectPackage100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetProject( 
            /* [in] */ IDTSProject100 *pProject,
            /* [in] */ BSTR bstrPackageLocation) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetProject( 
            /* [retval][out] */ IDTSProject100 **ppProject) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE PasswordMatch( 
            /* [in] */ BSTR bstrPackagePassword,
            /* [retval][out] */ VARIANT_BOOL *pvbMatch) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProjectPackage100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProjectPackage100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProjectPackage100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProjectPackage100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetProject )( 
            IDTSProjectPackage100 * This,
            /* [in] */ IDTSProject100 *pProject,
            /* [in] */ BSTR bstrPackageLocation);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetProject )( 
            IDTSProjectPackage100 * This,
            /* [retval][out] */ IDTSProject100 **ppProject);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *PasswordMatch )( 
            IDTSProjectPackage100 * This,
            /* [in] */ BSTR bstrPackagePassword,
            /* [retval][out] */ VARIANT_BOOL *pvbMatch);
        
        END_INTERFACE
    } IDTSProjectPackage100Vtbl;

    interface IDTSProjectPackage100
    {
        CONST_VTBL struct IDTSProjectPackage100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProjectPackage100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProjectPackage100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProjectPackage100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProjectPackage100_SetProject(This,pProject,bstrPackageLocation)	\
    ( (This)->lpVtbl -> SetProject(This,pProject,bstrPackageLocation) ) 

#define IDTSProjectPackage100_GetProject(This,ppProject)	\
    ( (This)->lpVtbl -> GetProject(This,ppProject) ) 

#define IDTSProjectPackage100_PasswordMatch(This,bstrPackagePassword,pvbMatch)	\
    ( (This)->lpVtbl -> PasswordMatch(This,bstrPackagePassword,pvbMatch) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProjectPackage100_INTERFACE_DEFINED__ */


#ifndef __ITaskSupportProject100_INTERFACE_DEFINED__
#define __ITaskSupportProject100_INTERFACE_DEFINED__

/* interface ITaskSupportProject100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_ITaskSupportProject100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B758FD33-72A2-45F6-A8F2-A87FCF77DDAE")
    ITaskSupportProject100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetProject( 
            /* [in] */ IDTSProject100 *pProject) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITaskSupportProject100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITaskSupportProject100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITaskSupportProject100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITaskSupportProject100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetProject )( 
            ITaskSupportProject100 * This,
            /* [in] */ IDTSProject100 *pProject);
        
        END_INTERFACE
    } ITaskSupportProject100Vtbl;

    interface ITaskSupportProject100
    {
        CONST_VTBL struct ITaskSupportProject100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITaskSupportProject100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITaskSupportProject100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITaskSupportProject100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITaskSupportProject100_SetProject(This,pProject)	\
    ( (This)->lpVtbl -> SetProject(This,pProject) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITaskSupportProject100_INTERFACE_DEFINED__ */


#ifndef __IDTSSupportParentExecutionPath100_INTERFACE_DEFINED__
#define __IDTSSupportParentExecutionPath100_INTERFACE_DEFINED__

/* interface IDTSSupportParentExecutionPath100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSSupportParentExecutionPath100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE62932C-46BA-415D-83F1-21A4827797B6")
    IDTSSupportParentExecutionPath100 : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ParentExecutionPath( 
            /* [retval][out] */ BSTR *pbstrPath) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ParentExecutionPath( 
            /* [in] */ BSTR bstrPath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSupportParentExecutionPath100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSupportParentExecutionPath100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSupportParentExecutionPath100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSupportParentExecutionPath100 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParentExecutionPath )( 
            IDTSSupportParentExecutionPath100 * This,
            /* [retval][out] */ BSTR *pbstrPath);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ParentExecutionPath )( 
            IDTSSupportParentExecutionPath100 * This,
            /* [in] */ BSTR bstrPath);
        
        END_INTERFACE
    } IDTSSupportParentExecutionPath100Vtbl;

    interface IDTSSupportParentExecutionPath100
    {
        CONST_VTBL struct IDTSSupportParentExecutionPath100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSupportParentExecutionPath100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSupportParentExecutionPath100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSupportParentExecutionPath100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSupportParentExecutionPath100_get_ParentExecutionPath(This,pbstrPath)	\
    ( (This)->lpVtbl -> get_ParentExecutionPath(This,pbstrPath) ) 

#define IDTSSupportParentExecutionPath100_put_ParentExecutionPath(This,bstrPath)	\
    ( (This)->lpVtbl -> put_ParentExecutionPath(This,bstrPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSupportParentExecutionPath100_INTERFACE_DEFINED__ */


#ifndef __IDTSSupportOffline100_INTERFACE_DEFINED__
#define __IDTSSupportOffline100_INTERFACE_DEFINED__

/* interface IDTSSupportOffline100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSSupportOffline100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1D9AA0A4-EDD5-41F8-AFE0-3BE89A56876F")
    IDTSSupportOffline100 : public IUnknown
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_OfflineMode( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_OfflineMode( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSupportOffline100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSupportOffline100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSupportOffline100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSupportOffline100 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineMode )( 
            IDTSSupportOffline100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineMode )( 
            IDTSSupportOffline100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        END_INTERFACE
    } IDTSSupportOffline100Vtbl;

    interface IDTSSupportOffline100
    {
        CONST_VTBL struct IDTSSupportOffline100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSupportOffline100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSupportOffline100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSupportOffline100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSupportOffline100_get_OfflineMode(This,RetVal)	\
    ( (This)->lpVtbl -> get_OfflineMode(This,RetVal) ) 

#define IDTSSupportOffline100_put_OfflineMode(This,NewVal)	\
    ( (This)->lpVtbl -> put_OfflineMode(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSupportOffline100_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ProjectConnectionsCreator;

#ifdef __cplusplus

class DECLSPEC_UUID("292A8C2B-174E-4C1E-A8CA-5AC7A0F45F26")
ProjectConnectionsCreator;
#endif

EXTERN_C const CLSID CLSID_ProjectConnectionsCreatorNeutral;

#ifdef __cplusplus

class DECLSPEC_UUID("295FF969-9AAD-4857-BCDD-93900F6656CB")
ProjectConnectionsCreatorNeutral;
#endif

#ifndef __IDTSProjectConnectionsCreator100_INTERFACE_DEFINED__
#define __IDTSProjectConnectionsCreator100_INTERFACE_DEFINED__

/* interface IDTSProjectConnectionsCreator100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSProjectConnectionsCreator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B409F42F-B285-4A7D-8901-877042CFB83F")
    IDTSProjectConnectionsCreator100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateConnections( 
            /* [in] */ IDTSProject100 *pProject,
            /* [retval][out] */ IDTSConnections100 **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProjectConnectionsCreator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProjectConnectionsCreator100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProjectConnectionsCreator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProjectConnectionsCreator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSProjectConnectionsCreator100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSProjectConnectionsCreator100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSProjectConnectionsCreator100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSProjectConnectionsCreator100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateConnections )( 
            IDTSProjectConnectionsCreator100 * This,
            /* [in] */ IDTSProject100 *pProject,
            /* [retval][out] */ IDTSConnections100 **pRetVal);
        
        END_INTERFACE
    } IDTSProjectConnectionsCreator100Vtbl;

    interface IDTSProjectConnectionsCreator100
    {
        CONST_VTBL struct IDTSProjectConnectionsCreator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProjectConnectionsCreator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProjectConnectionsCreator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProjectConnectionsCreator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProjectConnectionsCreator100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSProjectConnectionsCreator100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSProjectConnectionsCreator100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSProjectConnectionsCreator100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSProjectConnectionsCreator100_CreateConnections(This,pProject,pRetVal)	\
    ( (This)->lpVtbl -> CreateConnections(This,pProject,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProjectConnectionsCreator100_INTERFACE_DEFINED__ */


#ifndef __IDTSServerExecution100_INTERFACE_DEFINED__
#define __IDTSServerExecution100_INTERFACE_DEFINED__

/* interface IDTSServerExecution100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSServerExecution100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CC2E4F1B-9A41-4B2F-9D4B-A54D2423D634")
    IDTSServerExecution100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetParameterValue( 
            DTSServerParameterType parameterType,
            /* [in] */ BSTR bstrParameterName,
            /* [in] */ BSTR bstrParameterValue) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetPropertyOverrideValue( 
            /* [in] */ BSTR bstrPropertyPath,
            /* [in] */ BSTR bstrPropertyValue,
            /* [in] */ VARIANT_BOOL bValueIsSensitive) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetCallerInfo( 
            /* [in] */ BSTR bstrCallerInfo) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Start( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionId( 
            /* [retval][out] */ LONG64 *executionID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionStatus( 
            /* [retval][out] */ int *executionStatus) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Synchronized( 
            /* [retval][out] */ VARIANT_BOOL *synchronized) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Dispose( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSServerExecution100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSServerExecution100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSServerExecution100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSServerExecution100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetParameterValue )( 
            IDTSServerExecution100 * This,
            DTSServerParameterType parameterType,
            /* [in] */ BSTR bstrParameterName,
            /* [in] */ BSTR bstrParameterValue);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetPropertyOverrideValue )( 
            IDTSServerExecution100 * This,
            /* [in] */ BSTR bstrPropertyPath,
            /* [in] */ BSTR bstrPropertyValue,
            /* [in] */ VARIANT_BOOL bValueIsSensitive);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetCallerInfo )( 
            IDTSServerExecution100 * This,
            /* [in] */ BSTR bstrCallerInfo);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IDTSServerExecution100 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionId )( 
            IDTSServerExecution100 * This,
            /* [retval][out] */ LONG64 *executionID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionStatus )( 
            IDTSServerExecution100 * This,
            /* [retval][out] */ int *executionStatus);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Synchronized )( 
            IDTSServerExecution100 * This,
            /* [retval][out] */ VARIANT_BOOL *synchronized);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Dispose )( 
            IDTSServerExecution100 * This);
        
        END_INTERFACE
    } IDTSServerExecution100Vtbl;

    interface IDTSServerExecution100
    {
        CONST_VTBL struct IDTSServerExecution100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSServerExecution100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSServerExecution100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSServerExecution100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSServerExecution100_SetParameterValue(This,parameterType,bstrParameterName,bstrParameterValue)	\
    ( (This)->lpVtbl -> SetParameterValue(This,parameterType,bstrParameterName,bstrParameterValue) ) 

#define IDTSServerExecution100_SetPropertyOverrideValue(This,bstrPropertyPath,bstrPropertyValue,bValueIsSensitive)	\
    ( (This)->lpVtbl -> SetPropertyOverrideValue(This,bstrPropertyPath,bstrPropertyValue,bValueIsSensitive) ) 

#define IDTSServerExecution100_SetCallerInfo(This,bstrCallerInfo)	\
    ( (This)->lpVtbl -> SetCallerInfo(This,bstrCallerInfo) ) 

#define IDTSServerExecution100_Start(This)	\
    ( (This)->lpVtbl -> Start(This) ) 

#define IDTSServerExecution100_get_ExecutionId(This,executionID)	\
    ( (This)->lpVtbl -> get_ExecutionId(This,executionID) ) 

#define IDTSServerExecution100_get_ExecutionStatus(This,executionStatus)	\
    ( (This)->lpVtbl -> get_ExecutionStatus(This,executionStatus) ) 

#define IDTSServerExecution100_get_Synchronized(This,synchronized)	\
    ( (This)->lpVtbl -> get_Synchronized(This,synchronized) ) 

#define IDTSServerExecution100_Dispose(This)	\
    ( (This)->lpVtbl -> Dispose(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSServerExecution100_INTERFACE_DEFINED__ */


#ifndef __IDTSProjectAccessor100_INTERFACE_DEFINED__
#define __IDTSProjectAccessor100_INTERFACE_DEFINED__

/* interface IDTSProjectAccessor100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSProjectAccessor100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D84C8ACA-D904-4911-9533-D4D9D2825AB5")
    IDTSProjectAccessor100 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OpenProject( 
            /* [in] */ BSTR bstrProjectFileName,
            /* [in] */ BSTR bstrProjectPassword,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSProject100 **ppProject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseProject( 
            IDTSProject100 *pProject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateSsisServerExecution( 
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrReferenceId,
            /* [in] */ VARIANT_BOOL bUse32BitRuntime,
            /* [retval][out] */ IDTSServerExecution100 **ppServerExecution) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProjectAccessor100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProjectAccessor100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProjectAccessor100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProjectAccessor100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *OpenProject )( 
            IDTSProjectAccessor100 * This,
            /* [in] */ BSTR bstrProjectFileName,
            /* [in] */ BSTR bstrProjectPassword,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSProject100 **ppProject);
        
        HRESULT ( STDMETHODCALLTYPE *CloseProject )( 
            IDTSProjectAccessor100 * This,
            IDTSProject100 *pProject);
        
        HRESULT ( STDMETHODCALLTYPE *CreateSsisServerExecution )( 
            IDTSProjectAccessor100 * This,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrReferenceId,
            /* [in] */ VARIANT_BOOL bUse32BitRuntime,
            /* [retval][out] */ IDTSServerExecution100 **ppServerExecution);
        
        END_INTERFACE
    } IDTSProjectAccessor100Vtbl;

    interface IDTSProjectAccessor100
    {
        CONST_VTBL struct IDTSProjectAccessor100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProjectAccessor100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProjectAccessor100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProjectAccessor100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProjectAccessor100_OpenProject(This,bstrProjectFileName,bstrProjectPassword,pEvents,ppProject)	\
    ( (This)->lpVtbl -> OpenProject(This,bstrProjectFileName,bstrProjectPassword,pEvents,ppProject) ) 

#define IDTSProjectAccessor100_CloseProject(This,pProject)	\
    ( (This)->lpVtbl -> CloseProject(This,pProject) ) 

#define IDTSProjectAccessor100_CreateSsisServerExecution(This,bstrServerName,bstrPackagePath,bstrReferenceId,bUse32BitRuntime,ppServerExecution)	\
    ( (This)->lpVtbl -> CreateSsisServerExecution(This,bstrServerName,bstrPackagePath,bstrReferenceId,bUse32BitRuntime,ppServerExecution) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProjectAccessor100_INTERFACE_DEFINED__ */


#ifndef __IDTSPerfRecorder100_INTERFACE_DEFINED__
#define __IDTSPerfRecorder100_INTERFACE_DEFINED__

/* interface IDTSPerfRecorder100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSPerfRecorder100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C7D7D62-0B13-4542-A484-B0C820563C18")
    IDTSPerfRecorder100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UpdateCounter32( 
            /* [in] */ ULONG counterID,
            /* [in] */ long value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UpdateCounter64( 
            /* [in] */ ULONG counterID,
            /* [in] */ LONGLONG value) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetCounterValues( 
            /* [out] */ SAFEARRAY * *ppsaCounterNames,
            /* [out] */ SAFEARRAY * *ppsaCounterValues) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPerfRecorder100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPerfRecorder100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPerfRecorder100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPerfRecorder100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateCounter32 )( 
            IDTSPerfRecorder100 * This,
            /* [in] */ ULONG counterID,
            /* [in] */ long value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateCounter64 )( 
            IDTSPerfRecorder100 * This,
            /* [in] */ ULONG counterID,
            /* [in] */ LONGLONG value);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetCounterValues )( 
            IDTSPerfRecorder100 * This,
            /* [out] */ SAFEARRAY * *ppsaCounterNames,
            /* [out] */ SAFEARRAY * *ppsaCounterValues);
        
        END_INTERFACE
    } IDTSPerfRecorder100Vtbl;

    interface IDTSPerfRecorder100
    {
        CONST_VTBL struct IDTSPerfRecorder100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPerfRecorder100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPerfRecorder100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPerfRecorder100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPerfRecorder100_UpdateCounter32(This,counterID,value)	\
    ( (This)->lpVtbl -> UpdateCounter32(This,counterID,value) ) 

#define IDTSPerfRecorder100_UpdateCounter64(This,counterID,value)	\
    ( (This)->lpVtbl -> UpdateCounter64(This,counterID,value) ) 

#define IDTSPerfRecorder100_GetCounterValues(This,ppsaCounterNames,ppsaCounterValues)	\
    ( (This)->lpVtbl -> GetCounterValues(This,ppsaCounterNames,ppsaCounterValues) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPerfRecorder100_INTERFACE_DEFINED__ */


#ifndef __IDTSSupportPerfRecorder100_INTERFACE_DEFINED__
#define __IDTSSupportPerfRecorder100_INTERFACE_DEFINED__

/* interface IDTSSupportPerfRecorder100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSSupportPerfRecorder100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7BF245AE-1B65-4782-A3F7-FDF2E9C3C468")
    IDTSSupportPerfRecorder100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetPerfRecorder( 
            /* [in] */ IDTSPerfRecorder100 *pPerfRecorder) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetPerfRecorder( 
            /* [retval][out] */ IDTSPerfRecorder100 **ppPerfRecorder) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSupportPerfRecorder100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSupportPerfRecorder100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSupportPerfRecorder100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSupportPerfRecorder100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetPerfRecorder )( 
            IDTSSupportPerfRecorder100 * This,
            /* [in] */ IDTSPerfRecorder100 *pPerfRecorder);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetPerfRecorder )( 
            IDTSSupportPerfRecorder100 * This,
            /* [retval][out] */ IDTSPerfRecorder100 **ppPerfRecorder);
        
        END_INTERFACE
    } IDTSSupportPerfRecorder100Vtbl;

    interface IDTSSupportPerfRecorder100
    {
        CONST_VTBL struct IDTSSupportPerfRecorder100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSupportPerfRecorder100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSupportPerfRecorder100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSupportPerfRecorder100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSupportPerfRecorder100_SetPerfRecorder(This,pPerfRecorder)	\
    ( (This)->lpVtbl -> SetPerfRecorder(This,pPerfRecorder) ) 

#define IDTSSupportPerfRecorder100_GetPerfRecorder(This,ppPerfRecorder)	\
    ( (This)->lpVtbl -> GetPerfRecorder(This,ppPerfRecorder) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSupportPerfRecorder100_INTERFACE_DEFINED__ */


#ifndef __IDTSDataTapConfiguration100_INTERFACE_DEFINED__
#define __IDTSDataTapConfiguration100_INTERFACE_DEFINED__

/* interface IDTSDataTapConfiguration100 */
/* [unique][helpstring][oleautomation][uuid][object] */ 


EXTERN_C const IID IID_IDTSDataTapConfiguration100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4C61609F-719B-4E06-A3EC-DCEC8E3558AA")
    IDTSDataTapConfiguration100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddTapPoint( 
            /* [in] */ BSTR mainPipeIdentification,
            /* [in] */ BSTR pathIdentification,
            /* [in] */ long maxRowCount,
            /* [in] */ BSTR fileName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE UpdateExecutingPackagesCount( 
            /* [in] */ VARIANT_BOOL isStart,
            /* [in] */ IDTSInfoEvents100 *pEvents) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RequestTapPointsByMainPipeID( 
            /* [in] */ BSTR mainPipeIdentification,
            /* [out] */ SAFEARRAY * *ppsaPathIdentification,
            /* [out] */ SAFEARRAY * *ppsaMaxRowCount,
            /* [out] */ SAFEARRAY * *ppsafileName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDataTapConfiguration100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDataTapConfiguration100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDataTapConfiguration100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDataTapConfiguration100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddTapPoint )( 
            IDTSDataTapConfiguration100 * This,
            /* [in] */ BSTR mainPipeIdentification,
            /* [in] */ BSTR pathIdentification,
            /* [in] */ long maxRowCount,
            /* [in] */ BSTR fileName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *UpdateExecutingPackagesCount )( 
            IDTSDataTapConfiguration100 * This,
            /* [in] */ VARIANT_BOOL isStart,
            /* [in] */ IDTSInfoEvents100 *pEvents);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RequestTapPointsByMainPipeID )( 
            IDTSDataTapConfiguration100 * This,
            /* [in] */ BSTR mainPipeIdentification,
            /* [out] */ SAFEARRAY * *ppsaPathIdentification,
            /* [out] */ SAFEARRAY * *ppsaMaxRowCount,
            /* [out] */ SAFEARRAY * *ppsafileName);
        
        END_INTERFACE
    } IDTSDataTapConfiguration100Vtbl;

    interface IDTSDataTapConfiguration100
    {
        CONST_VTBL struct IDTSDataTapConfiguration100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDataTapConfiguration100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDataTapConfiguration100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDataTapConfiguration100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDataTapConfiguration100_AddTapPoint(This,mainPipeIdentification,pathIdentification,maxRowCount,fileName)	\
    ( (This)->lpVtbl -> AddTapPoint(This,mainPipeIdentification,pathIdentification,maxRowCount,fileName) ) 

#define IDTSDataTapConfiguration100_UpdateExecutingPackagesCount(This,isStart,pEvents)	\
    ( (This)->lpVtbl -> UpdateExecutingPackagesCount(This,isStart,pEvents) ) 

#define IDTSDataTapConfiguration100_RequestTapPointsByMainPipeID(This,mainPipeIdentification,ppsaPathIdentification,ppsaMaxRowCount,ppsafileName)	\
    ( (This)->lpVtbl -> RequestTapPointsByMainPipeID(This,mainPipeIdentification,ppsaPathIdentification,ppsaMaxRowCount,ppsafileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDataTapConfiguration100_INTERFACE_DEFINED__ */


#ifndef __IDTSSupportDataTapConfiguration100_INTERFACE_DEFINED__
#define __IDTSSupportDataTapConfiguration100_INTERFACE_DEFINED__

/* interface IDTSSupportDataTapConfiguration100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSSupportDataTapConfiguration100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F486ACEE-EF2A-4CC8-87A7-54B09471BC4D")
    IDTSSupportDataTapConfiguration100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetTapConfiguration( 
            /* [in] */ IDTSDataTapConfiguration100 *pTapConfiguration) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetTapConfiguration( 
            /* [retval][out] */ IDTSDataTapConfiguration100 **ppTapConfiguration) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSupportDataTapConfiguration100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSupportDataTapConfiguration100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSupportDataTapConfiguration100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSupportDataTapConfiguration100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetTapConfiguration )( 
            IDTSSupportDataTapConfiguration100 * This,
            /* [in] */ IDTSDataTapConfiguration100 *pTapConfiguration);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetTapConfiguration )( 
            IDTSSupportDataTapConfiguration100 * This,
            /* [retval][out] */ IDTSDataTapConfiguration100 **ppTapConfiguration);
        
        END_INTERFACE
    } IDTSSupportDataTapConfiguration100Vtbl;

    interface IDTSSupportDataTapConfiguration100
    {
        CONST_VTBL struct IDTSSupportDataTapConfiguration100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSupportDataTapConfiguration100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSupportDataTapConfiguration100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSupportDataTapConfiguration100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSupportDataTapConfiguration100_SetTapConfiguration(This,pTapConfiguration)	\
    ( (This)->lpVtbl -> SetTapConfiguration(This,pTapConfiguration) ) 

#define IDTSSupportDataTapConfiguration100_GetTapConfiguration(This,ppTapConfiguration)	\
    ( (This)->lpVtbl -> GetTapConfiguration(This,ppTapConfiguration) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSupportDataTapConfiguration100_INTERFACE_DEFINED__ */


#ifndef __IDTSSupportVerboseLogging100_INTERFACE_DEFINED__
#define __IDTSSupportVerboseLogging100_INTERFACE_DEFINED__

/* interface IDTSSupportVerboseLogging100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSSupportVerboseLogging100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("484B8692-A389-419E-AC49-99C4552C9AA6")
    IDTSSupportVerboseLogging100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetVerboseLoggingMode( 
            /* [in] */ VARIANT_BOOL vbVerboseLogging) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetVerboseLoggingMode( 
            /* [retval][out] */ VARIANT_BOOL *pvbVerboseLogging) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSupportVerboseLogging100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSupportVerboseLogging100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSupportVerboseLogging100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSupportVerboseLogging100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetVerboseLoggingMode )( 
            IDTSSupportVerboseLogging100 * This,
            /* [in] */ VARIANT_BOOL vbVerboseLogging);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetVerboseLoggingMode )( 
            IDTSSupportVerboseLogging100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbVerboseLogging);
        
        END_INTERFACE
    } IDTSSupportVerboseLogging100Vtbl;

    interface IDTSSupportVerboseLogging100
    {
        CONST_VTBL struct IDTSSupportVerboseLogging100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSupportVerboseLogging100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSupportVerboseLogging100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSupportVerboseLogging100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSupportVerboseLogging100_SetVerboseLoggingMode(This,vbVerboseLogging)	\
    ( (This)->lpVtbl -> SetVerboseLoggingMode(This,vbVerboseLogging) ) 

#define IDTSSupportVerboseLogging100_GetVerboseLoggingMode(This,pvbVerboseLogging)	\
    ( (This)->lpVtbl -> GetVerboseLoggingMode(This,pvbVerboseLogging) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSupportVerboseLogging100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackageSigning100_INTERFACE_DEFINED__
#define __IDTSPackageSigning100_INTERFACE_DEFINED__

/* interface IDTSPackageSigning100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSPackageSigning100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AE30F5A4-7C8F-4AB0-B99F-7BEF56BD7989")
    IDTSPackageSigning100 : public IUnknown
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CertificateObject( 
            /* [retval][out] */ IUnknown **ppCertObj) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_CertificateObject( 
            /* [in] */ IUnknown *pCertObj) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CertificateContext( 
            /* [retval][out] */ LONG64 *phCertContext) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_CertificateContext( 
            /* [in] */ LONG64 hCertContext) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CheckSignature( 
            /* [retval][out] */ DTSSignatureStatus *RetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LoadUserCertificateByName( 
            /* [in] */ BSTR SubjectName) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE LoadUserCertificateByHash( 
            /* [in] */ SAFEARRAY * *ppsaCertHash) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_CheckSignatureOnLoad( 
            /* [retval][out] */ VARIANT_BOOL *pvbCheckSigOnLoad) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_CheckSignatureOnLoad( 
            /* [in] */ VARIANT_BOOL vbCheckSigOnLoad) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackageSigning100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackageSigning100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackageSigning100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackageSigning100 * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CertificateObject )( 
            IDTSPackageSigning100 * This,
            /* [retval][out] */ IUnknown **ppCertObj);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CertificateObject )( 
            IDTSPackageSigning100 * This,
            /* [in] */ IUnknown *pCertObj);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CertificateContext )( 
            IDTSPackageSigning100 * This,
            /* [retval][out] */ LONG64 *phCertContext);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CertificateContext )( 
            IDTSPackageSigning100 * This,
            /* [in] */ LONG64 hCertContext);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CheckSignature )( 
            IDTSPackageSigning100 * This,
            /* [retval][out] */ DTSSignatureStatus *RetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LoadUserCertificateByName )( 
            IDTSPackageSigning100 * This,
            /* [in] */ BSTR SubjectName);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *LoadUserCertificateByHash )( 
            IDTSPackageSigning100 * This,
            /* [in] */ SAFEARRAY * *ppsaCertHash);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CheckSignatureOnLoad )( 
            IDTSPackageSigning100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbCheckSigOnLoad);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CheckSignatureOnLoad )( 
            IDTSPackageSigning100 * This,
            /* [in] */ VARIANT_BOOL vbCheckSigOnLoad);
        
        END_INTERFACE
    } IDTSPackageSigning100Vtbl;

    interface IDTSPackageSigning100
    {
        CONST_VTBL struct IDTSPackageSigning100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackageSigning100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackageSigning100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackageSigning100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackageSigning100_get_CertificateObject(This,ppCertObj)	\
    ( (This)->lpVtbl -> get_CertificateObject(This,ppCertObj) ) 

#define IDTSPackageSigning100_put_CertificateObject(This,pCertObj)	\
    ( (This)->lpVtbl -> put_CertificateObject(This,pCertObj) ) 

#define IDTSPackageSigning100_get_CertificateContext(This,phCertContext)	\
    ( (This)->lpVtbl -> get_CertificateContext(This,phCertContext) ) 

#define IDTSPackageSigning100_put_CertificateContext(This,hCertContext)	\
    ( (This)->lpVtbl -> put_CertificateContext(This,hCertContext) ) 

#define IDTSPackageSigning100_CheckSignature(This,RetVal)	\
    ( (This)->lpVtbl -> CheckSignature(This,RetVal) ) 

#define IDTSPackageSigning100_LoadUserCertificateByName(This,SubjectName)	\
    ( (This)->lpVtbl -> LoadUserCertificateByName(This,SubjectName) ) 

#define IDTSPackageSigning100_LoadUserCertificateByHash(This,ppsaCertHash)	\
    ( (This)->lpVtbl -> LoadUserCertificateByHash(This,ppsaCertHash) ) 

#define IDTSPackageSigning100_get_CheckSignatureOnLoad(This,pvbCheckSigOnLoad)	\
    ( (This)->lpVtbl -> get_CheckSignatureOnLoad(This,pvbCheckSigOnLoad) ) 

#define IDTSPackageSigning100_put_CheckSignatureOnLoad(This,vbCheckSigOnLoad)	\
    ( (This)->lpVtbl -> put_CheckSignatureOnLoad(This,vbCheckSigOnLoad) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackageSigning100_INTERFACE_DEFINED__ */


#ifndef __IDTSName100_INTERFACE_DEFINED__
#define __IDTSName100_INTERFACE_DEFINED__

/* interface IDTSName100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSName100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("581CDCFB-7E38-42BD-80BB-AA5DF8B7804E")
    IDTSName100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ BSTR *pbstrID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstrName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Name( 
            /* [in] */ BSTR bstrName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CreationName( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pbstrDescription) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bstrDescription) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSName100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSName100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSName100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSName100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSName100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSName100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSName100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSName100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IDTSName100 * This,
            /* [retval][out] */ BSTR *pbstrID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IDTSName100 * This,
            /* [retval][out] */ BSTR *pbstrName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Name )( 
            IDTSName100 * This,
            /* [in] */ BSTR bstrName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreationName )( 
            IDTSName100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IDTSName100 * This,
            /* [retval][out] */ BSTR *pbstrDescription);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IDTSName100 * This,
            /* [in] */ BSTR bstrDescription);
        
        END_INTERFACE
    } IDTSName100Vtbl;

    interface IDTSName100
    {
        CONST_VTBL struct IDTSName100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSName100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSName100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSName100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSName100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSName100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSName100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSName100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSName100_get_ID(This,pbstrID)	\
    ( (This)->lpVtbl -> get_ID(This,pbstrID) ) 

#define IDTSName100_get_Name(This,pbstrName)	\
    ( (This)->lpVtbl -> get_Name(This,pbstrName) ) 

#define IDTSName100_put_Name(This,bstrName)	\
    ( (This)->lpVtbl -> put_Name(This,bstrName) ) 

#define IDTSName100_get_CreationName(This,RetVal)	\
    ( (This)->lpVtbl -> get_CreationName(This,RetVal) ) 

#define IDTSName100_get_Description(This,pbstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDescription) ) 

#define IDTSName100_put_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDescription) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSName100_INTERFACE_DEFINED__ */


#ifndef __IDTSExpression100_INTERFACE_DEFINED__
#define __IDTSExpression100_INTERFACE_DEFINED__

/* interface IDTSExpression100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExpression100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E82BB26E-DDDD-469F-B42E-E5F79C966569")
    IDTSExpression100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Expression( 
            /* [retval][out] */ BSTR *pbstrExpression) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Expression( 
            /* [in] */ BSTR bstrExpression) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExpression100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExpression100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExpression100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExpression100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExpression100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExpression100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExpression100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExpression100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Expression )( 
            IDTSExpression100 * This,
            /* [retval][out] */ BSTR *pbstrExpression);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Expression )( 
            IDTSExpression100 * This,
            /* [in] */ BSTR bstrExpression);
        
        END_INTERFACE
    } IDTSExpression100Vtbl;

    interface IDTSExpression100
    {
        CONST_VTBL struct IDTSExpression100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExpression100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExpression100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExpression100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExpression100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExpression100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExpression100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExpression100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExpression100_get_Expression(This,pbstrExpression)	\
    ( (This)->lpVtbl -> get_Expression(This,pbstrExpression) ) 

#define IDTSExpression100_put_Expression(This,bstrExpression)	\
    ( (This)->lpVtbl -> put_Expression(This,bstrExpression) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExpression100_INTERFACE_DEFINED__ */


#ifndef __IDTSPrecedenceConstraint100_INTERFACE_DEFINED__
#define __IDTSPrecedenceConstraint100_INTERFACE_DEFINED__

/* interface IDTSPrecedenceConstraint100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPrecedenceConstraint100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A5675765-3A9F-48DC-86B1-97D266D90BB5")
    IDTSPrecedenceConstraint100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ DTSExecResult *plExecResult) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ DTSExecResult ExecResult) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PrecedenceExecutable( 
            /* [retval][out] */ IDTSExecutable100 **ppExec) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConstrainedExecutable( 
            /* [retval][out] */ IDTSExecutable100 **ppExec) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LogicalAnd( 
            /* [retval][out] */ VARIANT_BOOL *pIsAnd) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_LogicalAnd( 
            /* [in] */ VARIANT_BOOL isAnd) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EvaluatesTrue( 
            /* [retval][out] */ VARIANT_BOOL *pVar) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EvalOp( 
            /* [in] */ DTSPrecedenceEvalOp EvalOp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EvalOp( 
            /* [retval][out] */ DTSPrecedenceEvalOp *pEvalOp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDTSContainer100 **ppContainer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPrecedenceConstraint100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPrecedenceConstraint100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPrecedenceConstraint100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPrecedenceConstraint100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ DTSExecResult *plExecResult);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ DTSExecResult ExecResult);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PrecedenceExecutable )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ IDTSExecutable100 **ppExec);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConstrainedExecutable )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ IDTSExecutable100 **ppExec);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogicalAnd )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsAnd);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_LogicalAnd )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ VARIANT_BOOL isAnd);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EvaluatesTrue )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ VARIANT_BOOL *pVar);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EvalOp )( 
            IDTSPrecedenceConstraint100 * This,
            /* [in] */ DTSPrecedenceEvalOp EvalOp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EvalOp )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ DTSPrecedenceEvalOp *pEvalOp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IDTSPrecedenceConstraint100 * This,
            /* [retval][out] */ IDTSContainer100 **ppContainer);
        
        END_INTERFACE
    } IDTSPrecedenceConstraint100Vtbl;

    interface IDTSPrecedenceConstraint100
    {
        CONST_VTBL struct IDTSPrecedenceConstraint100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPrecedenceConstraint100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPrecedenceConstraint100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPrecedenceConstraint100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPrecedenceConstraint100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPrecedenceConstraint100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPrecedenceConstraint100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPrecedenceConstraint100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPrecedenceConstraint100_get_Value(This,plExecResult)	\
    ( (This)->lpVtbl -> get_Value(This,plExecResult) ) 

#define IDTSPrecedenceConstraint100_put_Value(This,ExecResult)	\
    ( (This)->lpVtbl -> put_Value(This,ExecResult) ) 

#define IDTSPrecedenceConstraint100_get_PrecedenceExecutable(This,ppExec)	\
    ( (This)->lpVtbl -> get_PrecedenceExecutable(This,ppExec) ) 

#define IDTSPrecedenceConstraint100_get_ConstrainedExecutable(This,ppExec)	\
    ( (This)->lpVtbl -> get_ConstrainedExecutable(This,ppExec) ) 

#define IDTSPrecedenceConstraint100_get_LogicalAnd(This,pIsAnd)	\
    ( (This)->lpVtbl -> get_LogicalAnd(This,pIsAnd) ) 

#define IDTSPrecedenceConstraint100_put_LogicalAnd(This,isAnd)	\
    ( (This)->lpVtbl -> put_LogicalAnd(This,isAnd) ) 

#define IDTSPrecedenceConstraint100_get_EvaluatesTrue(This,pVar)	\
    ( (This)->lpVtbl -> get_EvaluatesTrue(This,pVar) ) 

#define IDTSPrecedenceConstraint100_put_EvalOp(This,EvalOp)	\
    ( (This)->lpVtbl -> put_EvalOp(This,EvalOp) ) 

#define IDTSPrecedenceConstraint100_get_EvalOp(This,pEvalOp)	\
    ( (This)->lpVtbl -> get_EvalOp(This,pEvalOp) ) 

#define IDTSPrecedenceConstraint100_get_Parent(This,ppContainer)	\
    ( (This)->lpVtbl -> get_Parent(This,ppContainer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPrecedenceConstraint100_INTERFACE_DEFINED__ */


#ifndef __IDTSParameter100_INTERFACE_DEFINED__
#define __IDTSParameter100_INTERFACE_DEFINED__

/* interface IDTSParameter100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSParameter100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("c85de659-35c9-41c8-b8b5-817b96123529")
    IDTSParameter100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvValue) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT vValue) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
            /* [retval][out] */ int *nType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DataType( 
            /* [in] */ int nType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IncludeInDebugDump( 
            /* [retval][out] */ VARIANT_BOOL *pvbInclude) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IncludeInDebugDump( 
            /* [in] */ VARIANT_BOOL vbInclude) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Required( 
            /* [retval][out] */ VARIANT_BOOL *pvRequired) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Required( 
            /* [in] */ VARIANT_BOOL vRequired) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Sensitive( 
            /* [retval][out] */ VARIANT_BOOL *pvSensitive) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Sensitive( 
            /* [in] */ VARIANT_BOOL vSensitive) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSParameter100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSParameter100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSParameter100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSParameter100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSParameter100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSParameter100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSParameter100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSParameter100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IDTSParameter100 * This,
            /* [retval][out] */ VARIANT *pvValue);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IDTSParameter100 * This,
            /* [in] */ VARIANT vValue);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            IDTSParameter100 * This,
            /* [retval][out] */ int *nType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataType )( 
            IDTSParameter100 * This,
            /* [in] */ int nType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IncludeInDebugDump )( 
            IDTSParameter100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbInclude);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IncludeInDebugDump )( 
            IDTSParameter100 * This,
            /* [in] */ VARIANT_BOOL vbInclude);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Required )( 
            IDTSParameter100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvRequired);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Required )( 
            IDTSParameter100 * This,
            /* [in] */ VARIANT_BOOL vRequired);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Sensitive )( 
            IDTSParameter100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvSensitive);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Sensitive )( 
            IDTSParameter100 * This,
            /* [in] */ VARIANT_BOOL vSensitive);
        
        END_INTERFACE
    } IDTSParameter100Vtbl;

    interface IDTSParameter100
    {
        CONST_VTBL struct IDTSParameter100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSParameter100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSParameter100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSParameter100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSParameter100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSParameter100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSParameter100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSParameter100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSParameter100_get_Value(This,pvValue)	\
    ( (This)->lpVtbl -> get_Value(This,pvValue) ) 

#define IDTSParameter100_put_Value(This,vValue)	\
    ( (This)->lpVtbl -> put_Value(This,vValue) ) 

#define IDTSParameter100_get_DataType(This,nType)	\
    ( (This)->lpVtbl -> get_DataType(This,nType) ) 

#define IDTSParameter100_put_DataType(This,nType)	\
    ( (This)->lpVtbl -> put_DataType(This,nType) ) 

#define IDTSParameter100_get_IncludeInDebugDump(This,pvbInclude)	\
    ( (This)->lpVtbl -> get_IncludeInDebugDump(This,pvbInclude) ) 

#define IDTSParameter100_put_IncludeInDebugDump(This,vbInclude)	\
    ( (This)->lpVtbl -> put_IncludeInDebugDump(This,vbInclude) ) 

#define IDTSParameter100_get_Required(This,pvRequired)	\
    ( (This)->lpVtbl -> get_Required(This,pvRequired) ) 

#define IDTSParameter100_put_Required(This,vRequired)	\
    ( (This)->lpVtbl -> put_Required(This,vRequired) ) 

#define IDTSParameter100_get_Sensitive(This,pvSensitive)	\
    ( (This)->lpVtbl -> get_Sensitive(This,pvSensitive) ) 

#define IDTSParameter100_put_Sensitive(This,vSensitive)	\
    ( (This)->lpVtbl -> put_Sensitive(This,vSensitive) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSParameter100_INTERFACE_DEFINED__ */


#ifndef __IDTSParameters100_INTERFACE_DEFINED__
#define __IDTSParameters100_INTERFACE_DEFINED__

/* interface IDTSParameters100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSParameters100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2e5f5307-2d14-4af5-acc8-61461a013822")
    IDTSParameters100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSParameter100 **ppDTSParameter) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR bstrName,
            /* [in] */ USHORT usDataType,
            /* [retval][out] */ IDTSParameter100 **ppDTSParameter) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSParameter100 *pDTSParameter) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSParameters100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSParameters100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSParameters100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSParameters100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSParameters100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSParameters100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSParameters100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSParameters100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSParameters100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSParameter100 **ppDTSParameter);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSParameters100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSParameters100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSParameters100 * This,
            /* [in] */ BSTR bstrName,
            /* [in] */ USHORT usDataType,
            /* [retval][out] */ IDTSParameter100 **ppDTSParameter);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSParameters100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSParameters100 * This,
            /* [in] */ IDTSParameter100 *pDTSParameter);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IDTSParameters100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        END_INTERFACE
    } IDTSParameters100Vtbl;

    interface IDTSParameters100
    {
        CONST_VTBL struct IDTSParameters100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSParameters100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSParameters100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSParameters100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSParameters100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSParameters100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSParameters100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSParameters100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSParameters100_get_Item(This,Index,ppDTSParameter)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSParameter) ) 

#define IDTSParameters100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSParameters100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSParameters100_Add(This,bstrName,usDataType,ppDTSParameter)	\
    ( (This)->lpVtbl -> Add(This,bstrName,usDataType,ppDTSParameter) ) 

#define IDTSParameters100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSParameters100_Join(This,pDTSParameter)	\
    ( (This)->lpVtbl -> Join(This,pDTSParameter) ) 

#define IDTSParameters100_Contains(This,Index,RetVal)	\
    ( (This)->lpVtbl -> Contains(This,Index,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSParameters100_INTERFACE_DEFINED__ */


#ifndef __IDTSForEachItemsProvider100_INTERFACE_DEFINED__
#define __IDTSForEachItemsProvider100_INTERFACE_DEFINED__

/* interface IDTSForEachItemsProvider100 */
/* [unique][helpstring][nonextensible][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSForEachItemsProvider100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5AAE7FEE-2208-481C-A3D6-86B0B6A36677")
    IDTSForEachItemsProvider100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ForEachItems( 
            /* [retval][out] */ IDTSForEachItems100 **pDepInfos) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSForEachItemsProvider100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSForEachItemsProvider100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSForEachItemsProvider100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSForEachItemsProvider100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSForEachItemsProvider100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSForEachItemsProvider100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSForEachItemsProvider100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSForEachItemsProvider100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForEachItems )( 
            IDTSForEachItemsProvider100 * This,
            /* [retval][out] */ IDTSForEachItems100 **pDepInfos);
        
        END_INTERFACE
    } IDTSForEachItemsProvider100Vtbl;

    interface IDTSForEachItemsProvider100
    {
        CONST_VTBL struct IDTSForEachItemsProvider100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSForEachItemsProvider100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSForEachItemsProvider100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSForEachItemsProvider100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSForEachItemsProvider100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSForEachItemsProvider100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSForEachItemsProvider100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSForEachItemsProvider100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSForEachItemsProvider100_get_ForEachItems(This,pDepInfos)	\
    ( (This)->lpVtbl -> get_ForEachItems(This,pDepInfos) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSForEachItemsProvider100_INTERFACE_DEFINED__ */


#ifndef __IDTSInfoEvents100_INTERFACE_DEFINED__
#define __IDTSInfoEvents100_INTERFACE_DEFINED__

/* interface IDTSInfoEvents100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSInfoEvents100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33F54EBF-0DB0-41B2-A998-8F412FB72A01")
    IDTSInfoEvents100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireWarning( 
            /* [in] */ long WarningCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireInformation( 
            /* [in] */ long InformationCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireError( 
            /* [in] */ long ErrorCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [out] */ VARIANT_BOOL *pbCancel) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSInfoEvents100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSInfoEvents100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSInfoEvents100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSInfoEvents100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSInfoEvents100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSInfoEvents100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSInfoEvents100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSInfoEvents100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireWarning )( 
            IDTSInfoEvents100 * This,
            /* [in] */ long WarningCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireInformation )( 
            IDTSInfoEvents100 * This,
            /* [in] */ long InformationCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireError )( 
            IDTSInfoEvents100 * This,
            /* [in] */ long ErrorCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [out] */ VARIANT_BOOL *pbCancel);
        
        END_INTERFACE
    } IDTSInfoEvents100Vtbl;

    interface IDTSInfoEvents100
    {
        CONST_VTBL struct IDTSInfoEvents100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSInfoEvents100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSInfoEvents100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSInfoEvents100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSInfoEvents100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSInfoEvents100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSInfoEvents100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSInfoEvents100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSInfoEvents100_FireWarning(This,WarningCode,SubComponent,Description,HelpFile,HelpContext)	\
    ( (This)->lpVtbl -> FireWarning(This,WarningCode,SubComponent,Description,HelpFile,HelpContext) ) 

#define IDTSInfoEvents100_FireInformation(This,InformationCode,SubComponent,Description,HelpFile,HelpContext,pbFireAgain)	\
    ( (This)->lpVtbl -> FireInformation(This,InformationCode,SubComponent,Description,HelpFile,HelpContext,pbFireAgain) ) 

#define IDTSInfoEvents100_FireError(This,ErrorCode,SubComponent,Description,HelpFile,HelpContext,pbCancel)	\
    ( (This)->lpVtbl -> FireError(This,ErrorCode,SubComponent,Description,HelpFile,HelpContext,pbCancel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSInfoEvents100_INTERFACE_DEFINED__ */


#ifndef __IDTSComponentEvents100_INTERFACE_DEFINED__
#define __IDTSComponentEvents100_INTERFACE_DEFINED__

/* interface IDTSComponentEvents100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSComponentEvents100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E8499350-9113-4457-ACC2-AECA0BD83F90")
    IDTSComponentEvents100 : public IDTSInfoEvents100
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireQueryCancel( 
            /* [out] */ VARIANT_BOOL *pbCancel) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireBreakpointHit( 
            /* [in] */ IDTSBreakpointTarget100 *pBreakpointTarget) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireProgress( 
            /* [in] */ BSTR ProgressDescription,
            /* [in] */ long PercentComplete,
            /* [in] */ long ProgressCountLow,
            /* [in] */ long ProgressCountHigh,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FireCustomEvent( 
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR EventText,
            /* [in] */ SAFEARRAY * *ppsaArguments,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSComponentEvents100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSComponentEvents100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSComponentEvents100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSComponentEvents100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSComponentEvents100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSComponentEvents100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSComponentEvents100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSComponentEvents100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireWarning )( 
            IDTSComponentEvents100 * This,
            /* [in] */ long WarningCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireInformation )( 
            IDTSComponentEvents100 * This,
            /* [in] */ long InformationCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireError )( 
            IDTSComponentEvents100 * This,
            /* [in] */ long ErrorCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [out] */ VARIANT_BOOL *pbCancel);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireQueryCancel )( 
            IDTSComponentEvents100 * This,
            /* [out] */ VARIANT_BOOL *pbCancel);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireBreakpointHit )( 
            IDTSComponentEvents100 * This,
            /* [in] */ IDTSBreakpointTarget100 *pBreakpointTarget);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireProgress )( 
            IDTSComponentEvents100 * This,
            /* [in] */ BSTR ProgressDescription,
            /* [in] */ long PercentComplete,
            /* [in] */ long ProgressCountLow,
            /* [in] */ long ProgressCountHigh,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FireCustomEvent )( 
            IDTSComponentEvents100 * This,
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR EventText,
            /* [in] */ SAFEARRAY * *ppsaArguments,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        END_INTERFACE
    } IDTSComponentEvents100Vtbl;

    interface IDTSComponentEvents100
    {
        CONST_VTBL struct IDTSComponentEvents100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSComponentEvents100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSComponentEvents100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSComponentEvents100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSComponentEvents100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSComponentEvents100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSComponentEvents100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSComponentEvents100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSComponentEvents100_FireWarning(This,WarningCode,SubComponent,Description,HelpFile,HelpContext)	\
    ( (This)->lpVtbl -> FireWarning(This,WarningCode,SubComponent,Description,HelpFile,HelpContext) ) 

#define IDTSComponentEvents100_FireInformation(This,InformationCode,SubComponent,Description,HelpFile,HelpContext,pbFireAgain)	\
    ( (This)->lpVtbl -> FireInformation(This,InformationCode,SubComponent,Description,HelpFile,HelpContext,pbFireAgain) ) 

#define IDTSComponentEvents100_FireError(This,ErrorCode,SubComponent,Description,HelpFile,HelpContext,pbCancel)	\
    ( (This)->lpVtbl -> FireError(This,ErrorCode,SubComponent,Description,HelpFile,HelpContext,pbCancel) ) 


#define IDTSComponentEvents100_FireQueryCancel(This,pbCancel)	\
    ( (This)->lpVtbl -> FireQueryCancel(This,pbCancel) ) 

#define IDTSComponentEvents100_FireBreakpointHit(This,pBreakpointTarget)	\
    ( (This)->lpVtbl -> FireBreakpointHit(This,pBreakpointTarget) ) 

#define IDTSComponentEvents100_FireProgress(This,ProgressDescription,PercentComplete,ProgressCountLow,ProgressCountHigh,SubComponent,pbFireAgain)	\
    ( (This)->lpVtbl -> FireProgress(This,ProgressDescription,PercentComplete,ProgressCountLow,ProgressCountHigh,SubComponent,pbFireAgain) ) 

#define IDTSComponentEvents100_FireCustomEvent(This,EventName,EventText,ppsaArguments,SubComponent,pbFireAgain)	\
    ( (This)->lpVtbl -> FireCustomEvent(This,EventName,EventText,ppsaArguments,SubComponent,pbFireAgain) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSComponentEvents100_INTERFACE_DEFINED__ */


#ifndef __IDTSEvents100_INTERFACE_DEFINED__
#define __IDTSEvents100_INTERFACE_DEFINED__

/* interface IDTSEvents100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEvents100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("003B6BD7-A6F6-44BB-8463-1D16D6738A49")
    IDTSEvents100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPreExecute( 
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPostExecute( 
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPreValidate( 
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnPostValidate( 
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnWarning( 
            /* [in] */ IDTSRuntimeObject100 *pSource,
            /* [in] */ long WarningCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [in] */ BSTR IDOfInterfaceWithError) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnInformation( 
            /* [in] */ IDTSRuntimeObject100 *pSource,
            /* [in] */ long InformationCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [in] */ BSTR IDOfInterfaceWithError,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnError( 
            /* [in] */ IDTSRuntimeObject100 *pSource,
            /* [in] */ long ErrorCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [in] */ BSTR IDOfInterfaceWithError,
            /* [out] */ VARIANT_BOOL *pbCancel) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnTaskFailed( 
            /* [in] */ IDTSTaskHost100 *pTaskHost) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnProgress( 
            /* [in] */ IDTSTaskHost100 *pTaskHost,
            /* [in] */ BSTR ProgressDescription,
            /* [in] */ long PercentComplete,
            /* [in] */ long ProgressCountLow,
            /* [in] */ long ProgressCountHigh,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnQueryCancel( 
            /* [out] */ VARIANT_BOOL *pbCancel) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnBreakpointHit( 
            /* [in] */ IDTSBreakpointSite100 *pBreakpointSite,
            /* [in] */ IDTSBreakpointTarget100 *pBreakpointTarget) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnExecutionStatusChanged( 
            /* [in] */ IDTSExecutable100 *pExec,
            /* [in] */ DTSExecStat newStatus,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnVariableValueChanged( 
            /* [in] */ IDTSContainer100 *pContainer,
            /* [in] */ IDTSVariable100 *pVariable,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OnCustomEvent( 
            /* [in] */ IDTSTaskHost100 *pTaskHost,
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR EventText,
            /* [in] */ SAFEARRAY * *ppsaArguments,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEvents100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEvents100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEvents100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEvents100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEvents100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEvents100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEvents100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEvents100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPreExecute )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPostExecute )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPreValidate )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnPostValidate )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSExecutable100 *pExec,
            VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnWarning )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSRuntimeObject100 *pSource,
            /* [in] */ long WarningCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [in] */ BSTR IDOfInterfaceWithError);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnInformation )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSRuntimeObject100 *pSource,
            /* [in] */ long InformationCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [in] */ BSTR IDOfInterfaceWithError,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnError )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSRuntimeObject100 *pSource,
            /* [in] */ long ErrorCode,
            /* [in] */ BSTR SubComponent,
            /* [in] */ BSTR Description,
            /* [in] */ BSTR HelpFile,
            /* [in] */ long HelpContext,
            /* [in] */ BSTR IDOfInterfaceWithError,
            /* [out] */ VARIANT_BOOL *pbCancel);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnTaskFailed )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSTaskHost100 *pTaskHost);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnProgress )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSTaskHost100 *pTaskHost,
            /* [in] */ BSTR ProgressDescription,
            /* [in] */ long PercentComplete,
            /* [in] */ long ProgressCountLow,
            /* [in] */ long ProgressCountHigh,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnQueryCancel )( 
            IDTSEvents100 * This,
            /* [out] */ VARIANT_BOOL *pbCancel);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnBreakpointHit )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSBreakpointSite100 *pBreakpointSite,
            /* [in] */ IDTSBreakpointTarget100 *pBreakpointTarget);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnExecutionStatusChanged )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSExecutable100 *pExec,
            /* [in] */ DTSExecStat newStatus,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnVariableValueChanged )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSContainer100 *pContainer,
            /* [in] */ IDTSVariable100 *pVariable,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OnCustomEvent )( 
            IDTSEvents100 * This,
            /* [in] */ IDTSTaskHost100 *pTaskHost,
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR EventText,
            /* [in] */ SAFEARRAY * *ppsaArguments,
            /* [in] */ BSTR SubComponent,
            /* [out][in] */ VARIANT_BOOL *pbFireAgain);
        
        END_INTERFACE
    } IDTSEvents100Vtbl;

    interface IDTSEvents100
    {
        CONST_VTBL struct IDTSEvents100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEvents100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEvents100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEvents100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEvents100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEvents100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEvents100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEvents100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSEvents100_OnPreExecute(This,pExec,pbFireAgain)	\
    ( (This)->lpVtbl -> OnPreExecute(This,pExec,pbFireAgain) ) 

#define IDTSEvents100_OnPostExecute(This,pExec,pbFireAgain)	\
    ( (This)->lpVtbl -> OnPostExecute(This,pExec,pbFireAgain) ) 

#define IDTSEvents100_OnPreValidate(This,pExec,pbFireAgain)	\
    ( (This)->lpVtbl -> OnPreValidate(This,pExec,pbFireAgain) ) 

#define IDTSEvents100_OnPostValidate(This,pExec,pbFireAgain)	\
    ( (This)->lpVtbl -> OnPostValidate(This,pExec,pbFireAgain) ) 

#define IDTSEvents100_OnWarning(This,pSource,WarningCode,SubComponent,Description,HelpFile,HelpContext,IDOfInterfaceWithError)	\
    ( (This)->lpVtbl -> OnWarning(This,pSource,WarningCode,SubComponent,Description,HelpFile,HelpContext,IDOfInterfaceWithError) ) 

#define IDTSEvents100_OnInformation(This,pSource,InformationCode,SubComponent,Description,HelpFile,HelpContext,IDOfInterfaceWithError,pbFireAgain)	\
    ( (This)->lpVtbl -> OnInformation(This,pSource,InformationCode,SubComponent,Description,HelpFile,HelpContext,IDOfInterfaceWithError,pbFireAgain) ) 

#define IDTSEvents100_OnError(This,pSource,ErrorCode,SubComponent,Description,HelpFile,HelpContext,IDOfInterfaceWithError,pbCancel)	\
    ( (This)->lpVtbl -> OnError(This,pSource,ErrorCode,SubComponent,Description,HelpFile,HelpContext,IDOfInterfaceWithError,pbCancel) ) 

#define IDTSEvents100_OnTaskFailed(This,pTaskHost)	\
    ( (This)->lpVtbl -> OnTaskFailed(This,pTaskHost) ) 

#define IDTSEvents100_OnProgress(This,pTaskHost,ProgressDescription,PercentComplete,ProgressCountLow,ProgressCountHigh,SubComponent,pbFireAgain)	\
    ( (This)->lpVtbl -> OnProgress(This,pTaskHost,ProgressDescription,PercentComplete,ProgressCountLow,ProgressCountHigh,SubComponent,pbFireAgain) ) 

#define IDTSEvents100_OnQueryCancel(This,pbCancel)	\
    ( (This)->lpVtbl -> OnQueryCancel(This,pbCancel) ) 

#define IDTSEvents100_OnBreakpointHit(This,pBreakpointSite,pBreakpointTarget)	\
    ( (This)->lpVtbl -> OnBreakpointHit(This,pBreakpointSite,pBreakpointTarget) ) 

#define IDTSEvents100_OnExecutionStatusChanged(This,pExec,newStatus,pbFireAgain)	\
    ( (This)->lpVtbl -> OnExecutionStatusChanged(This,pExec,newStatus,pbFireAgain) ) 

#define IDTSEvents100_OnVariableValueChanged(This,pContainer,pVariable,pbFireAgain)	\
    ( (This)->lpVtbl -> OnVariableValueChanged(This,pContainer,pVariable,pbFireAgain) ) 

#define IDTSEvents100_OnCustomEvent(This,pTaskHost,EventName,EventText,ppsaArguments,SubComponent,pbFireAgain)	\
    ( (This)->lpVtbl -> OnCustomEvent(This,pTaskHost,EventName,EventText,ppsaArguments,SubComponent,pbFireAgain) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEvents100_INTERFACE_DEFINED__ */


#ifndef __IDTSLoggingOptions100_INTERFACE_DEFINED__
#define __IDTSLoggingOptions100_INTERFACE_DEFINED__

/* interface IDTSLoggingOptions100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLoggingOptions100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7BC13E26-7F43-44B4-90E2-3CC211020296")
    IDTSLoggingOptions100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SelectedLogProviders( 
            /* [retval][out] */ IDTSSelectedLogProviders100 **ppLogProviders) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EventFilterKind( 
            /* [retval][out] */ DTSEventFilterKind *pFilterKind) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventFilterKind( 
            /* [in] */ DTSEventFilterKind FilterKind) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EventFilter( 
            /* [retval][out] */ SAFEARRAY * *ppsaEventNames) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventFilter( 
            /* [in] */ SAFEARRAY * *ppsaEventNames) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetColumnFilter( 
            /* [in] */ BSTR EventName,
            /* [in] */ DTS_EVENT_COLUMN_FILTER ColumnFilter) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnFilter( 
            /* [in] */ BSTR EventName,
            /* [out] */ DTS_EVENT_COLUMN_FILTER *ColumnFilter) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetColumnFilteredEvents( 
            /* [retval][out] */ SAFEARRAY * *ppsaEventNames) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLoggingOptions100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLoggingOptions100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLoggingOptions100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLoggingOptions100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SelectedLogProviders )( 
            IDTSLoggingOptions100 * This,
            /* [retval][out] */ IDTSSelectedLogProviders100 **ppLogProviders);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventFilterKind )( 
            IDTSLoggingOptions100 * This,
            /* [retval][out] */ DTSEventFilterKind *pFilterKind);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventFilterKind )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ DTSEventFilterKind FilterKind);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventFilter )( 
            IDTSLoggingOptions100 * This,
            /* [retval][out] */ SAFEARRAY * *ppsaEventNames);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EventFilter )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ SAFEARRAY * *ppsaEventNames);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetColumnFilter )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ BSTR EventName,
            /* [in] */ DTS_EVENT_COLUMN_FILTER ColumnFilter);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnFilter )( 
            IDTSLoggingOptions100 * This,
            /* [in] */ BSTR EventName,
            /* [out] */ DTS_EVENT_COLUMN_FILTER *ColumnFilter);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetColumnFilteredEvents )( 
            IDTSLoggingOptions100 * This,
            /* [retval][out] */ SAFEARRAY * *ppsaEventNames);
        
        END_INTERFACE
    } IDTSLoggingOptions100Vtbl;

    interface IDTSLoggingOptions100
    {
        CONST_VTBL struct IDTSLoggingOptions100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLoggingOptions100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLoggingOptions100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLoggingOptions100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLoggingOptions100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLoggingOptions100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLoggingOptions100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLoggingOptions100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLoggingOptions100_get_SelectedLogProviders(This,ppLogProviders)	\
    ( (This)->lpVtbl -> get_SelectedLogProviders(This,ppLogProviders) ) 

#define IDTSLoggingOptions100_get_EventFilterKind(This,pFilterKind)	\
    ( (This)->lpVtbl -> get_EventFilterKind(This,pFilterKind) ) 

#define IDTSLoggingOptions100_put_EventFilterKind(This,FilterKind)	\
    ( (This)->lpVtbl -> put_EventFilterKind(This,FilterKind) ) 

#define IDTSLoggingOptions100_get_EventFilter(This,ppsaEventNames)	\
    ( (This)->lpVtbl -> get_EventFilter(This,ppsaEventNames) ) 

#define IDTSLoggingOptions100_put_EventFilter(This,ppsaEventNames)	\
    ( (This)->lpVtbl -> put_EventFilter(This,ppsaEventNames) ) 

#define IDTSLoggingOptions100_SetColumnFilter(This,EventName,ColumnFilter)	\
    ( (This)->lpVtbl -> SetColumnFilter(This,EventName,ColumnFilter) ) 

#define IDTSLoggingOptions100_GetColumnFilter(This,EventName,ColumnFilter)	\
    ( (This)->lpVtbl -> GetColumnFilter(This,EventName,ColumnFilter) ) 

#define IDTSLoggingOptions100_GetColumnFilteredEvents(This,ppsaEventNames)	\
    ( (This)->lpVtbl -> GetColumnFilteredEvents(This,ppsaEventNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLoggingOptions100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogging100_INTERFACE_DEFINED__
#define __IDTSLogging100_INTERFACE_DEFINED__

/* interface IDTSLogging100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogging100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49D97AC1-1DDC-47F3-9500-B647F4F9ADCE")
    IDTSLogging100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Log( 
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR Computer,
            /* [in] */ BSTR Operator,
            /* [in] */ BSTR SourceName,
            /* [in] */ BSTR SourceID,
            /* [in] */ BSTR ExecutionID,
            /* [in] */ BSTR MessageText,
            /* [in] */ DATE StartTime,
            /* [in] */ DATE EndTime,
            /* [in] */ long DataCode,
            /* [in] */ SAFEARRAY * *DataBytes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *pbEnabled) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetFilterStatus( 
            /* [in] */ SAFEARRAY * *EventNames,
            /* [retval][out] */ SAFEARRAY * *ppsaStatus) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogging100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogging100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogging100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogging100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogging100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogging100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogging100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogging100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Log )( 
            IDTSLogging100 * This,
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR Computer,
            /* [in] */ BSTR Operator,
            /* [in] */ BSTR SourceName,
            /* [in] */ BSTR SourceID,
            /* [in] */ BSTR ExecutionID,
            /* [in] */ BSTR MessageText,
            /* [in] */ DATE StartTime,
            /* [in] */ DATE EndTime,
            /* [in] */ long DataCode,
            /* [in] */ SAFEARRAY * *DataBytes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IDTSLogging100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbEnabled);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetFilterStatus )( 
            IDTSLogging100 * This,
            /* [in] */ SAFEARRAY * *EventNames,
            /* [retval][out] */ SAFEARRAY * *ppsaStatus);
        
        END_INTERFACE
    } IDTSLogging100Vtbl;

    interface IDTSLogging100
    {
        CONST_VTBL struct IDTSLogging100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogging100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogging100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogging100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogging100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogging100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogging100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogging100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogging100_Log(This,EventName,Computer,Operator,SourceName,SourceID,ExecutionID,MessageText,StartTime,EndTime,DataCode,DataBytes)	\
    ( (This)->lpVtbl -> Log(This,EventName,Computer,Operator,SourceName,SourceID,ExecutionID,MessageText,StartTime,EndTime,DataCode,DataBytes) ) 

#define IDTSLogging100_get_Enabled(This,pbEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pbEnabled) ) 

#define IDTSLogging100_GetFilterStatus(This,EventNames,ppsaStatus)	\
    ( (This)->lpVtbl -> GetFilterStatus(This,EventNames,ppsaStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogging100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogProvider100_INTERFACE_DEFINED__
#define __IDTSLogProvider100_INTERFACE_DEFINED__

/* interface IDTSLogProvider100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogProvider100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE3A3F56-3A9B-4FD6-865E-54EF9D04790D")
    IDTSLogProvider100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ConfigString( 
            /* [retval][out] */ BSTR *pbstrConfigString) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ConfigString( 
            /* [in] */ BSTR bstrConfigString) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OpenLog( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloseLog( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Validate( 
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [retval][out] */ DTSExecResult *pValidateResult) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogProvider100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogProvider100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogProvider100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogProvider100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogProvider100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogProvider100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogProvider100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogProvider100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigString )( 
            IDTSLogProvider100 * This,
            /* [retval][out] */ BSTR *pbstrConfigString);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigString )( 
            IDTSLogProvider100 * This,
            /* [in] */ BSTR bstrConfigString);
        
        HRESULT ( STDMETHODCALLTYPE *OpenLog )( 
            IDTSLogProvider100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *CloseLog )( 
            IDTSLogProvider100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *Validate )( 
            IDTSLogProvider100 * This,
            /* [in] */ IDTSInfoEvents100 *pEvents,
            /* [retval][out] */ DTSExecResult *pValidateResult);
        
        END_INTERFACE
    } IDTSLogProvider100Vtbl;

    interface IDTSLogProvider100
    {
        CONST_VTBL struct IDTSLogProvider100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogProvider100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogProvider100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogProvider100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogProvider100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogProvider100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogProvider100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogProvider100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogProvider100_get_ConfigString(This,pbstrConfigString)	\
    ( (This)->lpVtbl -> get_ConfigString(This,pbstrConfigString) ) 

#define IDTSLogProvider100_put_ConfigString(This,bstrConfigString)	\
    ( (This)->lpVtbl -> put_ConfigString(This,bstrConfigString) ) 

#define IDTSLogProvider100_OpenLog(This)	\
    ( (This)->lpVtbl -> OpenLog(This) ) 

#define IDTSLogProvider100_CloseLog(This)	\
    ( (This)->lpVtbl -> CloseLog(This) ) 

#define IDTSLogProvider100_Validate(This,pEvents,pValidateResult)	\
    ( (This)->lpVtbl -> Validate(This,pEvents,pValidateResult) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogProvider100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogProviders100_INTERFACE_DEFINED__
#define __IDTSLogProviders100_INTERFACE_DEFINED__

/* interface IDTSLogProviders100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogProviders100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9610855F-A4B7-493B-86EA-CAF473E33237")
    IDTSLogProviders100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogProvider100 **ppLogProvider) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR LogProviderClsidOrProgId,
            /* [retval][out] */ IDTSLogProvider100 **ppLogProvider) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Join( 
            /* [in] */ IDTSLogProvider100 *pLogProvider) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogProviders100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogProviders100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogProviders100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogProviders100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogProviders100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogProviders100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogProviders100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogProviders100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSLogProviders100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogProvider100 **ppLogProvider);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSLogProviders100 * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSLogProviders100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSLogProviders100 * This,
            /* [in] */ BSTR LogProviderClsidOrProgId,
            /* [retval][out] */ IDTSLogProvider100 **ppLogProvider);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSLogProviders100 * This,
            /* [in] */ VARIANT Index);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Join )( 
            IDTSLogProviders100 * This,
            /* [in] */ IDTSLogProvider100 *pLogProvider);
        
        END_INTERFACE
    } IDTSLogProviders100Vtbl;

    interface IDTSLogProviders100
    {
        CONST_VTBL struct IDTSLogProviders100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogProviders100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogProviders100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogProviders100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogProviders100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogProviders100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogProviders100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogProviders100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogProviders100_get_Item(This,Index,ppLogProvider)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppLogProvider) ) 

#define IDTSLogProviders100_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IDTSLogProviders100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSLogProviders100_Add(This,LogProviderClsidOrProgId,ppLogProvider)	\
    ( (This)->lpVtbl -> Add(This,LogProviderClsidOrProgId,ppLogProvider) ) 

#define IDTSLogProviders100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#define IDTSLogProviders100_Join(This,pLogProvider)	\
    ( (This)->lpVtbl -> Join(This,pLogProvider) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogProviders100_INTERFACE_DEFINED__ */


#ifndef __IDTSSelectedLogProviders100_INTERFACE_DEFINED__
#define __IDTSSelectedLogProviders100_INTERFACE_DEFINED__

/* interface IDTSSelectedLogProviders100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSSelectedLogProviders100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E557A9B-E978-414F-B27F-3E96EE33DB4E")
    IDTSSelectedLogProviders100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogProvider100 **ppLogProvider) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ IDTSLogProvider100 *pLogProvider) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSelectedLogProviders100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSelectedLogProviders100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSelectedLogProviders100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSSelectedLogProviders100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogProvider100 **ppLogProvider);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSSelectedLogProviders100 * This,
            /* [retval][out] */ long *plCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSSelectedLogProviders100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ IDTSLogProvider100 *pLogProvider);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSSelectedLogProviders100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSSelectedLogProviders100Vtbl;

    interface IDTSSelectedLogProviders100
    {
        CONST_VTBL struct IDTSSelectedLogProviders100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSelectedLogProviders100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSelectedLogProviders100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSelectedLogProviders100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSelectedLogProviders100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSSelectedLogProviders100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSSelectedLogProviders100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSSelectedLogProviders100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSSelectedLogProviders100_get_Item(This,Index,ppLogProvider)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppLogProvider) ) 

#define IDTSSelectedLogProviders100_get_Count(This,plCount)	\
    ( (This)->lpVtbl -> get_Count(This,plCount) ) 

#define IDTSSelectedLogProviders100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSSelectedLogProviders100_Add(This,pLogProvider)	\
    ( (This)->lpVtbl -> Add(This,pLogProvider) ) 

#define IDTSSelectedLogProviders100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSelectedLogProviders100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogProviderInfo100_INTERFACE_DEFINED__
#define __IDTSLogProviderInfo100_INTERFACE_DEFINED__

/* interface IDTSLogProviderInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogProviderInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5293FFDA-3C8F-4BF6-9B9F-E5BC4674117B")
    IDTSLogProviderInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileNameVersionString( 
            /* [retval][out] */ BSTR *pbstrVersionString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UITypeName( 
            /* [retval][out] */ BSTR *pbstrTypeName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconFile( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconResource( 
            /* [retval][out] */ BSTR *pbstrIconResource) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LogProviderType( 
            /* [retval][out] */ BSTR *pbstrLogProvType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_LogProviderContact( 
            /* [retval][out] */ BSTR *pbstrLogProvContact) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogProviderInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogProviderInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogProviderInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogProviderInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogProviderInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogProviderInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogProviderInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogProviderInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileNameVersionString )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrVersionString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UITypeName )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconFile )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconResource )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrIconResource);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogProviderType )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrLogProvType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogProviderContact )( 
            IDTSLogProviderInfo100 * This,
            /* [retval][out] */ BSTR *pbstrLogProvContact);
        
        END_INTERFACE
    } IDTSLogProviderInfo100Vtbl;

    interface IDTSLogProviderInfo100
    {
        CONST_VTBL struct IDTSLogProviderInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogProviderInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogProviderInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogProviderInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogProviderInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogProviderInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogProviderInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogProviderInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogProviderInfo100_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IDTSLogProviderInfo100_get_FileNameVersionString(This,pbstrVersionString)	\
    ( (This)->lpVtbl -> get_FileNameVersionString(This,pbstrVersionString) ) 

#define IDTSLogProviderInfo100_get_UITypeName(This,pbstrTypeName)	\
    ( (This)->lpVtbl -> get_UITypeName(This,pbstrTypeName) ) 

#define IDTSLogProviderInfo100_get_IconFile(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_IconFile(This,pbstrFileName) ) 

#define IDTSLogProviderInfo100_get_IconResource(This,pbstrIconResource)	\
    ( (This)->lpVtbl -> get_IconResource(This,pbstrIconResource) ) 

#define IDTSLogProviderInfo100_get_LogProviderType(This,pbstrLogProvType)	\
    ( (This)->lpVtbl -> get_LogProviderType(This,pbstrLogProvType) ) 

#define IDTSLogProviderInfo100_get_LogProviderContact(This,pbstrLogProvContact)	\
    ( (This)->lpVtbl -> get_LogProviderContact(This,pbstrLogProvContact) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogProviderInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogProviderInfos100_INTERFACE_DEFINED__
#define __IDTSLogProviderInfos100_INTERFACE_DEFINED__

/* interface IDTSLogProviderInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogProviderInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("91813EE8-3B79-472D-84DD-5973D6CEBFCB")
    IDTSLogProviderInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogProviderInfo100 **ppDTSLogProviderInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogProviderInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogProviderInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogProviderInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogProviderInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogProviderInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogProviderInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogProviderInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogProviderInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSLogProviderInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogProviderInfo100 **ppDTSLogProviderInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSLogProviderInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSLogProviderInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSLogProviderInfos100Vtbl;

    interface IDTSLogProviderInfos100
    {
        CONST_VTBL struct IDTSLogProviderInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogProviderInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogProviderInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogProviderInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogProviderInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogProviderInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogProviderInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogProviderInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogProviderInfos100_get_Item(This,Index,ppDTSLogProviderInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSLogProviderInfo) ) 

#define IDTSLogProviderInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSLogProviderInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogProviderInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSEventsProvider100_INTERFACE_DEFINED__
#define __IDTSEventsProvider100_INTERFACE_DEFINED__

/* interface IDTSEventsProvider100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEventsProvider100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64BDE5A5-4039-4E88-B95E-54B371574872")
    IDTSEventsProvider100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EventHandlers( 
            /* [retval][out] */ IDTSEventHandlers100 **ppEventHandlers) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EventInfos( 
            /* [retval][out] */ IDTSEventInfos100 **ppEventInfos) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DisableEventHandlers( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DisableEventHandlers( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEventsProvider100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEventsProvider100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEventsProvider100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEventsProvider100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEventsProvider100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEventsProvider100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEventsProvider100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEventsProvider100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventHandlers )( 
            IDTSEventsProvider100 * This,
            /* [retval][out] */ IDTSEventHandlers100 **ppEventHandlers);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EventInfos )( 
            IDTSEventsProvider100 * This,
            /* [retval][out] */ IDTSEventInfos100 **ppEventInfos);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DisableEventHandlers )( 
            IDTSEventsProvider100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DisableEventHandlers )( 
            IDTSEventsProvider100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        END_INTERFACE
    } IDTSEventsProvider100Vtbl;

    interface IDTSEventsProvider100
    {
        CONST_VTBL struct IDTSEventsProvider100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEventsProvider100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEventsProvider100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEventsProvider100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEventsProvider100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEventsProvider100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEventsProvider100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEventsProvider100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSEventsProvider100_get_EventHandlers(This,ppEventHandlers)	\
    ( (This)->lpVtbl -> get_EventHandlers(This,ppEventHandlers) ) 

#define IDTSEventsProvider100_get_EventInfos(This,ppEventInfos)	\
    ( (This)->lpVtbl -> get_EventInfos(This,ppEventInfos) ) 

#define IDTSEventsProvider100_get_DisableEventHandlers(This,RetVal)	\
    ( (This)->lpVtbl -> get_DisableEventHandlers(This,RetVal) ) 

#define IDTSEventsProvider100_put_DisableEventHandlers(This,NewVal)	\
    ( (This)->lpVtbl -> put_DisableEventHandlers(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEventsProvider100_INTERFACE_DEFINED__ */


#ifndef __IDTSEventInfos100_INTERFACE_DEFINED__
#define __IDTSEventInfos100_INTERFACE_DEFINED__

/* interface IDTSEventInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEventInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7542C47-F5F7-4471-BB82-A5B8058E90CB")
    IDTSEventInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSEventInfo100 **ppDTSEventInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR Description,
            /* [in] */ VARIANT_BOOL AllowEventHandlers,
            /* [in] */ SAFEARRAY * *ParamNames,
            /* [in] */ SAFEARRAY * *ParamTypes,
            /* [in] */ SAFEARRAY * *ParamDescs) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEventInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEventInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEventInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEventInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEventInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEventInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEventInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEventInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSEventInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSEventInfo100 **ppDTSEventInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSEventInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSEventInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSEventInfos100 * This,
            /* [in] */ BSTR EventName,
            /* [in] */ BSTR Description,
            /* [in] */ VARIANT_BOOL AllowEventHandlers,
            /* [in] */ SAFEARRAY * *ParamNames,
            /* [in] */ SAFEARRAY * *ParamTypes,
            /* [in] */ SAFEARRAY * *ParamDescs);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSEventInfos100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSEventInfos100Vtbl;

    interface IDTSEventInfos100
    {
        CONST_VTBL struct IDTSEventInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEventInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEventInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEventInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEventInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEventInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEventInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEventInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSEventInfos100_get_Item(This,Index,ppDTSEventInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSEventInfo) ) 

#define IDTSEventInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSEventInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSEventInfos100_Add(This,EventName,Description,AllowEventHandlers,ParamNames,ParamTypes,ParamDescs)	\
    ( (This)->lpVtbl -> Add(This,EventName,Description,AllowEventHandlers,ParamNames,ParamTypes,ParamDescs) ) 

#define IDTSEventInfos100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEventInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSEventInfo100_INTERFACE_DEFINED__
#define __IDTSEventInfo100_INTERFACE_DEFINED__

/* interface IDTSEventInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEventInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89ACFBE0-8FE1-4191-ADB1-A49389FE9FC2")
    IDTSEventInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_AllowEventHandlers( 
            /* [retval][out] */ VARIANT_BOOL *pvbAllowEventHandlers) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParameterCount( 
            /* [retval][out] */ LONG *plCount) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParameterNames( 
            /* [retval][out] */ SAFEARRAY * *ppsaParamNames) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParameterTypes( 
            /* [retval][out] */ SAFEARRAY * *ppsaParamTypes) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ParameterDescriptions( 
            /* [retval][out] */ SAFEARRAY * *ppsaParamDescs) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEventInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEventInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEventInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEventInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEventInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEventInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEventInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEventInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_AllowEventHandlers )( 
            IDTSEventInfo100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbAllowEventHandlers);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterCount )( 
            IDTSEventInfo100 * This,
            /* [retval][out] */ LONG *plCount);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterNames )( 
            IDTSEventInfo100 * This,
            /* [retval][out] */ SAFEARRAY * *ppsaParamNames);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterTypes )( 
            IDTSEventInfo100 * This,
            /* [retval][out] */ SAFEARRAY * *ppsaParamTypes);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParameterDescriptions )( 
            IDTSEventInfo100 * This,
            /* [retval][out] */ SAFEARRAY * *ppsaParamDescs);
        
        END_INTERFACE
    } IDTSEventInfo100Vtbl;

    interface IDTSEventInfo100
    {
        CONST_VTBL struct IDTSEventInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEventInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEventInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEventInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEventInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEventInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEventInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEventInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSEventInfo100_get_AllowEventHandlers(This,pvbAllowEventHandlers)	\
    ( (This)->lpVtbl -> get_AllowEventHandlers(This,pvbAllowEventHandlers) ) 

#define IDTSEventInfo100_get_ParameterCount(This,plCount)	\
    ( (This)->lpVtbl -> get_ParameterCount(This,plCount) ) 

#define IDTSEventInfo100_get_ParameterNames(This,ppsaParamNames)	\
    ( (This)->lpVtbl -> get_ParameterNames(This,ppsaParamNames) ) 

#define IDTSEventInfo100_get_ParameterTypes(This,ppsaParamTypes)	\
    ( (This)->lpVtbl -> get_ParameterTypes(This,ppsaParamTypes) ) 

#define IDTSEventInfo100_get_ParameterDescriptions(This,ppsaParamDescs)	\
    ( (This)->lpVtbl -> get_ParameterDescriptions(This,ppsaParamDescs) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEventInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSDowngradableObject100_INTERFACE_DEFINED__
#define __IDTSDowngradableObject100_INTERFACE_DEFINED__

/* interface IDTSDowngradableObject100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSDowngradableObject100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C937D21A-4E3F-4384-AADC-73CC11A483EA")
    IDTSDowngradableObject100 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CanDowngradeTo( 
            /* [in] */ int versionTo,
            /* [retval][out] */ VARIANT_BOOL *pvbCanDowngrade) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DowngradeTo( 
            /* [in] */ int versionTo,
            /* [out][in] */ IDispatch **pDOMElement) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDowngradableObject100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDowngradableObject100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDowngradableObject100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDowngradableObject100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDowngradableObject100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDowngradableObject100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDowngradableObject100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDowngradableObject100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanDowngradeTo )( 
            IDTSDowngradableObject100 * This,
            /* [in] */ int versionTo,
            /* [retval][out] */ VARIANT_BOOL *pvbCanDowngrade);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DowngradeTo )( 
            IDTSDowngradableObject100 * This,
            /* [in] */ int versionTo,
            /* [out][in] */ IDispatch **pDOMElement);
        
        END_INTERFACE
    } IDTSDowngradableObject100Vtbl;

    interface IDTSDowngradableObject100
    {
        CONST_VTBL struct IDTSDowngradableObject100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDowngradableObject100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDowngradableObject100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDowngradableObject100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDowngradableObject100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDowngradableObject100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDowngradableObject100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDowngradableObject100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDowngradableObject100_CanDowngradeTo(This,versionTo,pvbCanDowngrade)	\
    ( (This)->lpVtbl -> CanDowngradeTo(This,versionTo,pvbCanDowngrade) ) 

#define IDTSDowngradableObject100_DowngradeTo(This,versionTo,pDOMElement)	\
    ( (This)->lpVtbl -> DowngradeTo(This,versionTo,pDOMElement) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDowngradableObject100_INTERFACE_DEFINED__ */


#ifndef __IDTSDowngradeSettings100_INTERFACE_DEFINED__
#define __IDTSDowngradeSettings100_INTERFACE_DEFINED__

/* interface IDTSDowngradeSettings100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSDowngradeSettings100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C73084A-99A4-4901-BCDB-13AE5BDC98A2")
    IDTSDowngradeSettings100 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_DowngradeMode( 
            /* [retval][out] */ VARIANT_BOOL *RetVa) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_DowngradeMode( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_DowngradeVersion( 
            /* [retval][out] */ int *pVersionTo) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_DowngradeVersion( 
            /* [in] */ int nVersionTo) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDowngradeSettings100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDowngradeSettings100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDowngradeSettings100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDowngradeSettings100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDowngradeSettings100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDowngradeSettings100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDowngradeSettings100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDowngradeSettings100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DowngradeMode )( 
            IDTSDowngradeSettings100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVa);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DowngradeMode )( 
            IDTSDowngradeSettings100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DowngradeVersion )( 
            IDTSDowngradeSettings100 * This,
            /* [retval][out] */ int *pVersionTo);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DowngradeVersion )( 
            IDTSDowngradeSettings100 * This,
            /* [in] */ int nVersionTo);
        
        END_INTERFACE
    } IDTSDowngradeSettings100Vtbl;

    interface IDTSDowngradeSettings100
    {
        CONST_VTBL struct IDTSDowngradeSettings100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDowngradeSettings100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDowngradeSettings100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDowngradeSettings100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDowngradeSettings100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDowngradeSettings100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDowngradeSettings100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDowngradeSettings100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDowngradeSettings100_get_DowngradeMode(This,RetVa)	\
    ( (This)->lpVtbl -> get_DowngradeMode(This,RetVa) ) 

#define IDTSDowngradeSettings100_put_DowngradeMode(This,NewVal)	\
    ( (This)->lpVtbl -> put_DowngradeMode(This,NewVal) ) 

#define IDTSDowngradeSettings100_get_DowngradeVersion(This,pVersionTo)	\
    ( (This)->lpVtbl -> get_DowngradeVersion(This,pVersionTo) ) 

#define IDTSDowngradeSettings100_put_DowngradeVersion(This,nVersionTo)	\
    ( (This)->lpVtbl -> put_DowngradeVersion(This,nVersionTo) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDowngradeSettings100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogEntryInfos100_INTERFACE_DEFINED__
#define __IDTSLogEntryInfos100_INTERFACE_DEFINED__

/* interface IDTSLogEntryInfos100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogEntryInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83F5DF18-E641-4039-B267-764EDA4B55AF")
    IDTSLogEntryInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogEntryInfo100 **ppDTSLogEntryInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ BSTR LogEntryName,
            /* [in] */ BSTR Description,
            /* [in] */ DTSLogEntryFrequency FrequencyHint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogEntryInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogEntryInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogEntryInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogEntryInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSLogEntryInfo100 **ppDTSLogEntryInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSLogEntryInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSLogEntryInfos100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ BSTR LogEntryName,
            /* [in] */ BSTR Description,
            /* [in] */ DTSLogEntryFrequency FrequencyHint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSLogEntryInfos100 * This,
            /* [in] */ VARIANT Index);
        
        END_INTERFACE
    } IDTSLogEntryInfos100Vtbl;

    interface IDTSLogEntryInfos100
    {
        CONST_VTBL struct IDTSLogEntryInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogEntryInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogEntryInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogEntryInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogEntryInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogEntryInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogEntryInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogEntryInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogEntryInfos100_get_Item(This,Index,ppDTSLogEntryInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppDTSLogEntryInfo) ) 

#define IDTSLogEntryInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSLogEntryInfos100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSLogEntryInfos100_Add(This,LogEntryName,Description,FrequencyHint)	\
    ( (This)->lpVtbl -> Add(This,LogEntryName,Description,FrequencyHint) ) 

#define IDTSLogEntryInfos100_Remove(This,Index)	\
    ( (This)->lpVtbl -> Remove(This,Index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogEntryInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSLogEntryInfo100_INTERFACE_DEFINED__
#define __IDTSLogEntryInfo100_INTERFACE_DEFINED__

/* interface IDTSLogEntryInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSLogEntryInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("03AB6838-0FF4-4DD9-B98B-C18ABFC69FDB")
    IDTSLogEntryInfo100 : public IDispatch
    {
    public:
        virtual /* [propget] */ HRESULT STDMETHODCALLTYPE get_FrequencyHint( 
            /* [retval][out] */ DTSLogEntryFrequency *RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSLogEntryInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSLogEntryInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSLogEntryInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSLogEntryInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSLogEntryInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSLogEntryInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSLogEntryInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSLogEntryInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_FrequencyHint )( 
            IDTSLogEntryInfo100 * This,
            /* [retval][out] */ DTSLogEntryFrequency *RetVal);
        
        END_INTERFACE
    } IDTSLogEntryInfo100Vtbl;

    interface IDTSLogEntryInfo100
    {
        CONST_VTBL struct IDTSLogEntryInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSLogEntryInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSLogEntryInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSLogEntryInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSLogEntryInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSLogEntryInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSLogEntryInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSLogEntryInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSLogEntryInfo100_get_FrequencyHint(This,RetVal)	\
    ( (This)->lpVtbl -> get_FrequencyHint(This,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSLogEntryInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSProperty100_INTERFACE_DEFINED__
#define __IDTSProperty100_INTERFACE_DEFINED__

/* interface IDTSProperty100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSProperty100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5B75EF84-D4C2-43F6-9867-5978E1B575CA")
    IDTSProperty100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetValue( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetValue( 
            /* [in] */ IUnknown *pObject,
            /* [in] */ VARIANT NewValue) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
            /* [retval][out] */ USHORT *plType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Get( 
            /* [retval][out] */ VARIANT_BOOL *pvbGet) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Set( 
            /* [retval][out] */ VARIANT_BOOL *pvbSet) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TypeConverter( 
            /* [retval][out] */ BSTR *pbstrTypeConverter) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UITypeEditor( 
            /* [retval][out] */ BSTR *pbstrUITypeEditor) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PropertyKind( 
            /* [retval][out] */ DTSPropertyKind *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionType( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetExport( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ VARIANT_BOOL *pvbExport) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetExport( 
            /* [in] */ IUnknown *pObject,
            /* [in] */ VARIANT_BOOL vbExport) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPackagePath( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ BSTR *pbstrPackagePath) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetExpression( 
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ BSTR *pbstrExpression) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetExpression( 
            /* [in] */ IUnknown *pObject,
            /* [in] */ BSTR bstrExpression) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSProperty100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSProperty100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSProperty100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSProperty100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSProperty100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSProperty100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSProperty100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSProperty100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IDTSProperty100 * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetValue )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetValue )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [in] */ VARIANT NewValue);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            IDTSProperty100 * This,
            /* [retval][out] */ USHORT *plType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Get )( 
            IDTSProperty100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbGet);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Set )( 
            IDTSProperty100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbSet);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TypeConverter )( 
            IDTSProperty100 * This,
            /* [retval][out] */ BSTR *pbstrTypeConverter);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UITypeEditor )( 
            IDTSProperty100 * This,
            /* [retval][out] */ BSTR *pbstrUITypeEditor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PropertyKind )( 
            IDTSProperty100 * This,
            /* [retval][out] */ DTSPropertyKind *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionType )( 
            IDTSProperty100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExport )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ VARIANT_BOOL *pvbExport);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetExport )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [in] */ VARIANT_BOOL vbExport);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPackagePath )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ BSTR *pbstrPackagePath);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExpression )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [retval][out] */ BSTR *pbstrExpression);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetExpression )( 
            IDTSProperty100 * This,
            /* [in] */ IUnknown *pObject,
            /* [in] */ BSTR bstrExpression);
        
        END_INTERFACE
    } IDTSProperty100Vtbl;

    interface IDTSProperty100
    {
        CONST_VTBL struct IDTSProperty100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSProperty100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSProperty100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSProperty100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSProperty100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSProperty100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSProperty100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSProperty100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSProperty100_get_Name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Name(This,pRetVal) ) 

#define IDTSProperty100_GetValue(This,pObject,pRetVal)	\
    ( (This)->lpVtbl -> GetValue(This,pObject,pRetVal) ) 

#define IDTSProperty100_SetValue(This,pObject,NewValue)	\
    ( (This)->lpVtbl -> SetValue(This,pObject,NewValue) ) 

#define IDTSProperty100_get_DataType(This,plType)	\
    ( (This)->lpVtbl -> get_DataType(This,plType) ) 

#define IDTSProperty100_get_Get(This,pvbGet)	\
    ( (This)->lpVtbl -> get_Get(This,pvbGet) ) 

#define IDTSProperty100_get_Set(This,pvbSet)	\
    ( (This)->lpVtbl -> get_Set(This,pvbSet) ) 

#define IDTSProperty100_get_TypeConverter(This,pbstrTypeConverter)	\
    ( (This)->lpVtbl -> get_TypeConverter(This,pbstrTypeConverter) ) 

#define IDTSProperty100_get_UITypeEditor(This,pbstrUITypeEditor)	\
    ( (This)->lpVtbl -> get_UITypeEditor(This,pbstrUITypeEditor) ) 

#define IDTSProperty100_get_PropertyKind(This,RetVal)	\
    ( (This)->lpVtbl -> get_PropertyKind(This,RetVal) ) 

#define IDTSProperty100_get_ConnectionType(This,RetVal)	\
    ( (This)->lpVtbl -> get_ConnectionType(This,RetVal) ) 

#define IDTSProperty100_GetExport(This,pObject,pvbExport)	\
    ( (This)->lpVtbl -> GetExport(This,pObject,pvbExport) ) 

#define IDTSProperty100_SetExport(This,pObject,vbExport)	\
    ( (This)->lpVtbl -> SetExport(This,pObject,vbExport) ) 

#define IDTSProperty100_GetPackagePath(This,pObject,pbstrPackagePath)	\
    ( (This)->lpVtbl -> GetPackagePath(This,pObject,pbstrPackagePath) ) 

#define IDTSProperty100_GetExpression(This,pObject,pbstrExpression)	\
    ( (This)->lpVtbl -> GetExpression(This,pObject,pbstrExpression) ) 

#define IDTSProperty100_SetExpression(This,pObject,bstrExpression)	\
    ( (This)->lpVtbl -> SetExpression(This,pObject,bstrExpression) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSProperty100_INTERFACE_DEFINED__ */


#ifndef __IDTSHasInternalProperties100_INTERFACE_DEFINED__
#define __IDTSHasInternalProperties100_INTERFACE_DEFINED__

/* interface IDTSHasInternalProperties100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSHasInternalProperties100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D30C598-A754-465C-9BAE-559EF450C06F")
    IDTSHasInternalProperties100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetInternalProperties( 
            /* [in] */ IDTSProperties100 *pProperties) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE GetInternalPropertiesVersion( 
            /* [retval][out] */ LONG *pVersion) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSHasInternalProperties100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSHasInternalProperties100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSHasInternalProperties100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSHasInternalProperties100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSHasInternalProperties100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSHasInternalProperties100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSHasInternalProperties100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSHasInternalProperties100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetInternalProperties )( 
            IDTSHasInternalProperties100 * This,
            /* [in] */ IDTSProperties100 *pProperties);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *GetInternalPropertiesVersion )( 
            IDTSHasInternalProperties100 * This,
            /* [retval][out] */ LONG *pVersion);
        
        END_INTERFACE
    } IDTSHasInternalProperties100Vtbl;

    interface IDTSHasInternalProperties100
    {
        CONST_VTBL struct IDTSHasInternalProperties100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSHasInternalProperties100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSHasInternalProperties100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSHasInternalProperties100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSHasInternalProperties100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSHasInternalProperties100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSHasInternalProperties100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSHasInternalProperties100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSHasInternalProperties100_GetInternalProperties(This,pProperties)	\
    ( (This)->lpVtbl -> GetInternalProperties(This,pProperties) ) 

#define IDTSHasInternalProperties100_GetInternalPropertiesVersion(This,pVersion)	\
    ( (This)->lpVtbl -> GetInternalPropertiesVersion(This,pVersion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSHasInternalProperties100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackagePath100_INTERFACE_DEFINED__
#define __IDTSPackagePath100_INTERFACE_DEFINED__

/* interface IDTSPackagePath100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPackagePath100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("52278128-017D-4EDB-B8F4-B7030EE85428")
    IDTSPackagePath100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPackagePath( 
            /* [retval][out] */ BSTR *pbstrPath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackagePath100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackagePath100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackagePath100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackagePath100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackagePath100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackagePath100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackagePath100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackagePath100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPackagePath )( 
            IDTSPackagePath100 * This,
            /* [retval][out] */ BSTR *pbstrPath);
        
        END_INTERFACE
    } IDTSPackagePath100Vtbl;

    interface IDTSPackagePath100
    {
        CONST_VTBL struct IDTSPackagePath100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackagePath100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackagePath100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackagePath100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackagePath100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackagePath100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackagePath100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackagePath100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackagePath100_GetPackagePath(This,pbstrPath)	\
    ( (This)->lpVtbl -> GetPackagePath(This,pbstrPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackagePath100_INTERFACE_DEFINED__ */


#ifndef __IDTSDynamicName100_INTERFACE_DEFINED__
#define __IDTSDynamicName100_INTERFACE_DEFINED__

/* interface IDTSDynamicName100 */
/* [unique][helpstring][uuid][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSDynamicName100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23E81597-9FA5-44C0-8AAA-02C84DD60777")
    IDTSDynamicName100 : public IUnknown
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDynamicName( 
            /* [retval][out] */ BSTR *pbstrPath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDynamicName100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDynamicName100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDynamicName100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDynamicName100 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDynamicName )( 
            IDTSDynamicName100 * This,
            /* [retval][out] */ BSTR *pbstrPath);
        
        END_INTERFACE
    } IDTSDynamicName100Vtbl;

    interface IDTSDynamicName100
    {
        CONST_VTBL struct IDTSDynamicName100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDynamicName100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDynamicName100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDynamicName100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDynamicName100_GetDynamicName(This,pbstrPath)	\
    ( (This)->lpVtbl -> GetDynamicName(This,pbstrPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDynamicName100_INTERFACE_DEFINED__ */


#ifndef __IDTSExecutionPath100_INTERFACE_DEFINED__
#define __IDTSExecutionPath100_INTERFACE_DEFINED__

/* interface IDTSExecutionPath100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExecutionPath100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1277791E-AC27-4B49-9EE4-528BC696A91C")
    IDTSExecutionPath100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetExecutionPath( 
            /* [retval][out] */ BSTR *pbstrPath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExecutionPath100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExecutionPath100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExecutionPath100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExecutionPath100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExecutionPath100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExecutionPath100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExecutionPath100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExecutionPath100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetExecutionPath )( 
            IDTSExecutionPath100 * This,
            /* [retval][out] */ BSTR *pbstrPath);
        
        END_INTERFACE
    } IDTSExecutionPath100Vtbl;

    interface IDTSExecutionPath100
    {
        CONST_VTBL struct IDTSExecutionPath100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExecutionPath100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExecutionPath100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExecutionPath100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExecutionPath100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExecutionPath100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExecutionPath100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExecutionPath100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExecutionPath100_GetExecutionPath(This,pbstrPath)	\
    ( (This)->lpVtbl -> GetExecutionPath(This,pbstrPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExecutionPath100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackageInfo100_INTERFACE_DEFINED__
#define __IDTSPackageInfo100_INTERFACE_DEFINED__

/* interface IDTSPackageInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPackageInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7BC2B93-A0AD-4E04-A643-8D6A03FF97FC")
    IDTSPackageInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageGuid( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Folder( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pbstr) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CreationDate( 
            /* [retval][out] */ DATE *pDate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageDataSize( 
            /* [retval][out] */ long *plDataSize) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionMajor( 
            /* [retval][out] */ long *plVerMajor) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionMinor( 
            /* [retval][out] */ long *plVerMinor) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionBuild( 
            /* [retval][out] */ long *plVerBuild) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionComments( 
            /* [retval][out] */ BSTR *plVerComments) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_VersionGUID( 
            /* [retval][out] */ BSTR *pbstrVerGUID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Flags( 
            /* [retval][out] */ DTSPackageInformationFlags *peFlags) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackageInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackageInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackageInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackageInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackageInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackageInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackageInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackageInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageGuid )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Folder )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ BSTR *pbstr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CreationDate )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ DATE *pDate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageDataSize )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ long *plDataSize);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionMajor )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ long *plVerMajor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionMinor )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ long *plVerMinor);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionBuild )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ long *plVerBuild);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionComments )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ BSTR *plVerComments);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_VersionGUID )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ BSTR *pbstrVerGUID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Flags )( 
            IDTSPackageInfo100 * This,
            /* [retval][out] */ DTSPackageInformationFlags *peFlags);
        
        END_INTERFACE
    } IDTSPackageInfo100Vtbl;

    interface IDTSPackageInfo100
    {
        CONST_VTBL struct IDTSPackageInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackageInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackageInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackageInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackageInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackageInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackageInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackageInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackageInfo100_get_PackageGuid(This,pbstr)	\
    ( (This)->lpVtbl -> get_PackageGuid(This,pbstr) ) 

#define IDTSPackageInfo100_get_Name(This,pbstr)	\
    ( (This)->lpVtbl -> get_Name(This,pbstr) ) 

#define IDTSPackageInfo100_get_Folder(This,pbstr)	\
    ( (This)->lpVtbl -> get_Folder(This,pbstr) ) 

#define IDTSPackageInfo100_get_Description(This,pbstr)	\
    ( (This)->lpVtbl -> get_Description(This,pbstr) ) 

#define IDTSPackageInfo100_get_CreationDate(This,pDate)	\
    ( (This)->lpVtbl -> get_CreationDate(This,pDate) ) 

#define IDTSPackageInfo100_get_PackageDataSize(This,plDataSize)	\
    ( (This)->lpVtbl -> get_PackageDataSize(This,plDataSize) ) 

#define IDTSPackageInfo100_get_VersionMajor(This,plVerMajor)	\
    ( (This)->lpVtbl -> get_VersionMajor(This,plVerMajor) ) 

#define IDTSPackageInfo100_get_VersionMinor(This,plVerMinor)	\
    ( (This)->lpVtbl -> get_VersionMinor(This,plVerMinor) ) 

#define IDTSPackageInfo100_get_VersionBuild(This,plVerBuild)	\
    ( (This)->lpVtbl -> get_VersionBuild(This,plVerBuild) ) 

#define IDTSPackageInfo100_get_VersionComments(This,plVerComments)	\
    ( (This)->lpVtbl -> get_VersionComments(This,plVerComments) ) 

#define IDTSPackageInfo100_get_VersionGUID(This,pbstrVerGUID)	\
    ( (This)->lpVtbl -> get_VersionGUID(This,pbstrVerGUID) ) 

#define IDTSPackageInfo100_get_Flags(This,peFlags)	\
    ( (This)->lpVtbl -> get_Flags(This,peFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackageInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSTaskInfo100_INTERFACE_DEFINED__
#define __IDTSTaskInfo100_INTERFACE_DEFINED__

/* interface IDTSTaskInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSTaskInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83A27B4C-4816-427B-94CC-397FFF770AF2")
    IDTSTaskInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileNameVersionString( 
            /* [retval][out] */ BSTR *pbstrVersionString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UITypeName( 
            /* [retval][out] */ BSTR *pbstrTypeName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconFile( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconResource( 
            /* [retval][out] */ BSTR *pbstrIconResource) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TaskType( 
            /* [retval][out] */ BSTR *pbstrTaskType) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_TaskContact( 
            /* [retval][out] */ BSTR *pbstrTaskContact) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HelpCollection( 
            /* [retval][out] */ BSTR *pbstrHelpCollection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HelpKeyword( 
            /* [retval][out] */ BSTR *pbstrHelpKeyword) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SamplesTag( 
            /* [retval][out] */ BSTR *pbstrSamplesTag) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSTaskInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSTaskInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSTaskInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSTaskInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSTaskInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSTaskInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSTaskInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSTaskInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileNameVersionString )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrVersionString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UITypeName )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconFile )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconResource )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrIconResource);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TaskType )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTaskType);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TaskContact )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTaskContact);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpCollection )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrHelpCollection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpKeyword )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrHelpKeyword);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SamplesTag )( 
            IDTSTaskInfo100 * This,
            /* [retval][out] */ BSTR *pbstrSamplesTag);
        
        END_INTERFACE
    } IDTSTaskInfo100Vtbl;

    interface IDTSTaskInfo100
    {
        CONST_VTBL struct IDTSTaskInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSTaskInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSTaskInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSTaskInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSTaskInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSTaskInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSTaskInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSTaskInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSTaskInfo100_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IDTSTaskInfo100_get_FileNameVersionString(This,pbstrVersionString)	\
    ( (This)->lpVtbl -> get_FileNameVersionString(This,pbstrVersionString) ) 

#define IDTSTaskInfo100_get_UITypeName(This,pbstrTypeName)	\
    ( (This)->lpVtbl -> get_UITypeName(This,pbstrTypeName) ) 

#define IDTSTaskInfo100_get_IconFile(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_IconFile(This,pbstrFileName) ) 

#define IDTSTaskInfo100_get_IconResource(This,pbstrIconResource)	\
    ( (This)->lpVtbl -> get_IconResource(This,pbstrIconResource) ) 

#define IDTSTaskInfo100_get_TaskType(This,pbstrTaskType)	\
    ( (This)->lpVtbl -> get_TaskType(This,pbstrTaskType) ) 

#define IDTSTaskInfo100_get_TaskContact(This,pbstrTaskContact)	\
    ( (This)->lpVtbl -> get_TaskContact(This,pbstrTaskContact) ) 

#define IDTSTaskInfo100_get_HelpCollection(This,pbstrHelpCollection)	\
    ( (This)->lpVtbl -> get_HelpCollection(This,pbstrHelpCollection) ) 

#define IDTSTaskInfo100_get_HelpKeyword(This,pbstrHelpKeyword)	\
    ( (This)->lpVtbl -> get_HelpKeyword(This,pbstrHelpKeyword) ) 

#define IDTSTaskInfo100_get_SamplesTag(This,pbstrSamplesTag)	\
    ( (This)->lpVtbl -> get_SamplesTag(This,pbstrSamplesTag) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSTaskInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSPipelineComponentInfo100_INTERFACE_DEFINED__
#define __IDTSPipelineComponentInfo100_INTERFACE_DEFINED__

/* interface IDTSPipelineComponentInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPipelineComponentInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F37E1BE0-B364-467A-BF20-B1553BC3EEB2")
    IDTSPipelineComponentInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentType( 
            /* [retval][out] */ DTSPipelineComponentType *ptype) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentContact( 
            /* [retval][out] */ BSTR *pbstrContact) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileName( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_FileNameVersionString( 
            /* [retval][out] */ BSTR *pbstrVersionString) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UITypeName( 
            /* [retval][out] */ BSTR *pbstrTypeName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ShapeProgID( 
            /* [retval][out] */ BSTR *pbstrProgID) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconFile( 
            /* [retval][out] */ BSTR *pbstrFileName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IconResource( 
            /* [retval][out] */ BSTR *pbstrIconResource) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_NoEditor( 
            /* [retval][out] */ VARIANT_BOOL *pvbNoEditor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HelpCollection( 
            /* [retval][out] */ BSTR *pbstrHelpCollection) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_HelpKeyword( 
            /* [retval][out] */ BSTR *pbstrHelpKeyword) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_SamplesTag( 
            /* [retval][out] */ BSTR *pbstrSamplesTag) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPipelineComponentInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPipelineComponentInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPipelineComponentInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPipelineComponentInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPipelineComponentInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPipelineComponentInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPipelineComponentInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPipelineComponentInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentType )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ DTSPipelineComponentType *ptype);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentContact )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrContact);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileName )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FileNameVersionString )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrVersionString);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UITypeName )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ShapeProgID )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrProgID);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconFile )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrFileName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IconResource )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrIconResource);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_NoEditor )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbNoEditor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpCollection )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrHelpCollection);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpKeyword )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrHelpKeyword);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SamplesTag )( 
            IDTSPipelineComponentInfo100 * This,
            /* [retval][out] */ BSTR *pbstrSamplesTag);
        
        END_INTERFACE
    } IDTSPipelineComponentInfo100Vtbl;

    interface IDTSPipelineComponentInfo100
    {
        CONST_VTBL struct IDTSPipelineComponentInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPipelineComponentInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPipelineComponentInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPipelineComponentInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPipelineComponentInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPipelineComponentInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPipelineComponentInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPipelineComponentInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPipelineComponentInfo100_get_ComponentType(This,ptype)	\
    ( (This)->lpVtbl -> get_ComponentType(This,ptype) ) 

#define IDTSPipelineComponentInfo100_get_ComponentContact(This,pbstrContact)	\
    ( (This)->lpVtbl -> get_ComponentContact(This,pbstrContact) ) 

#define IDTSPipelineComponentInfo100_get_FileName(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_FileName(This,pbstrFileName) ) 

#define IDTSPipelineComponentInfo100_get_FileNameVersionString(This,pbstrVersionString)	\
    ( (This)->lpVtbl -> get_FileNameVersionString(This,pbstrVersionString) ) 

#define IDTSPipelineComponentInfo100_get_UITypeName(This,pbstrTypeName)	\
    ( (This)->lpVtbl -> get_UITypeName(This,pbstrTypeName) ) 

#define IDTSPipelineComponentInfo100_get_ShapeProgID(This,pbstrProgID)	\
    ( (This)->lpVtbl -> get_ShapeProgID(This,pbstrProgID) ) 

#define IDTSPipelineComponentInfo100_get_IconFile(This,pbstrFileName)	\
    ( (This)->lpVtbl -> get_IconFile(This,pbstrFileName) ) 

#define IDTSPipelineComponentInfo100_get_IconResource(This,pbstrIconResource)	\
    ( (This)->lpVtbl -> get_IconResource(This,pbstrIconResource) ) 

#define IDTSPipelineComponentInfo100_get_NoEditor(This,pvbNoEditor)	\
    ( (This)->lpVtbl -> get_NoEditor(This,pvbNoEditor) ) 

#define IDTSPipelineComponentInfo100_get_HelpCollection(This,pbstrHelpCollection)	\
    ( (This)->lpVtbl -> get_HelpCollection(This,pbstrHelpCollection) ) 

#define IDTSPipelineComponentInfo100_get_HelpKeyword(This,pbstrHelpKeyword)	\
    ( (This)->lpVtbl -> get_HelpKeyword(This,pbstrHelpKeyword) ) 

#define IDTSPipelineComponentInfo100_get_SamplesTag(This,pbstrSamplesTag)	\
    ( (This)->lpVtbl -> get_SamplesTag(This,pbstrSamplesTag) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPipelineComponentInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSVariable100_INTERFACE_DEFINED__
#define __IDTSVariable100_INTERFACE_DEFINED__

/* interface IDTSVariable100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSVariable100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23F2017D-13C6-4804-B3C4-724A6FDC6E4D")
    IDTSVariable100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ReadOnly( 
            /* [retval][out] */ VARIANT_BOOL *pbReadOnly) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ReadOnly( 
            /* [in] */ VARIANT_BOOL bReadOnly) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Namespace( 
            /* [retval][out] */ BSTR *pbstrNamespace) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Namespace( 
            /* [in] */ BSTR bstrNamespace) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvValue) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT vValue) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
            /* [retval][out] */ int *nType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_QualifiedName( 
            /* [retval][out] */ BSTR *pQualifiedName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RaiseChangedEvent( 
            /* [retval][out] */ VARIANT_BOOL *pbRaiseEvent) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_RaiseChangedEvent( 
            /* [in] */ VARIANT_BOOL bRaiseEvent) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_EvaluateAsExpression( 
            /* [retval][out] */ VARIANT_BOOL *pbEvalAsExp) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_EvaluateAsExpression( 
            /* [in] */ VARIANT_BOOL bEvalAsExp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SystemVariable( 
            /* [retval][out] */ VARIANT_BOOL *pbSystemVariable) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IncludeInDebugDump( 
            /* [retval][out] */ VARIANT_BOOL *pbInclude) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IncludeInDebugDump( 
            /* [in] */ VARIANT_BOOL bInclude) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Parent( 
            /* [retval][out] */ IDTSContainer100 **ppContainer) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetValueWithContext( 
            /* [in] */ IDTSEvaluatorContext100 *pContext,
            /* [retval][out] */ VARIANT *pvValue) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSVariable100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSVariable100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSVariable100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSVariable100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSVariable100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSVariable100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSVariable100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSVariable100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReadOnly )( 
            IDTSVariable100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbReadOnly);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ReadOnly )( 
            IDTSVariable100 * This,
            /* [in] */ VARIANT_BOOL bReadOnly);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            IDTSVariable100 * This,
            /* [retval][out] */ BSTR *pbstrNamespace);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Namespace )( 
            IDTSVariable100 * This,
            /* [in] */ BSTR bstrNamespace);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IDTSVariable100 * This,
            /* [retval][out] */ VARIANT *pvValue);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IDTSVariable100 * This,
            /* [in] */ VARIANT vValue);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            IDTSVariable100 * This,
            /* [retval][out] */ int *nType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_QualifiedName )( 
            IDTSVariable100 * This,
            /* [retval][out] */ BSTR *pQualifiedName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RaiseChangedEvent )( 
            IDTSVariable100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbRaiseEvent);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RaiseChangedEvent )( 
            IDTSVariable100 * This,
            /* [in] */ VARIANT_BOOL bRaiseEvent);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EvaluateAsExpression )( 
            IDTSVariable100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbEvalAsExp);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EvaluateAsExpression )( 
            IDTSVariable100 * This,
            /* [in] */ VARIANT_BOOL bEvalAsExp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SystemVariable )( 
            IDTSVariable100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbSystemVariable);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IncludeInDebugDump )( 
            IDTSVariable100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbInclude);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IncludeInDebugDump )( 
            IDTSVariable100 * This,
            /* [in] */ VARIANT_BOOL bInclude);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parent )( 
            IDTSVariable100 * This,
            /* [retval][out] */ IDTSContainer100 **ppContainer);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetValueWithContext )( 
            IDTSVariable100 * This,
            /* [in] */ IDTSEvaluatorContext100 *pContext,
            /* [retval][out] */ VARIANT *pvValue);
        
        END_INTERFACE
    } IDTSVariable100Vtbl;

    interface IDTSVariable100
    {
        CONST_VTBL struct IDTSVariable100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSVariable100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSVariable100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSVariable100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSVariable100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSVariable100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSVariable100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSVariable100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSVariable100_get_ReadOnly(This,pbReadOnly)	\
    ( (This)->lpVtbl -> get_ReadOnly(This,pbReadOnly) ) 

#define IDTSVariable100_put_ReadOnly(This,bReadOnly)	\
    ( (This)->lpVtbl -> put_ReadOnly(This,bReadOnly) ) 

#define IDTSVariable100_get_Namespace(This,pbstrNamespace)	\
    ( (This)->lpVtbl -> get_Namespace(This,pbstrNamespace) ) 

#define IDTSVariable100_put_Namespace(This,bstrNamespace)	\
    ( (This)->lpVtbl -> put_Namespace(This,bstrNamespace) ) 

#define IDTSVariable100_get_Value(This,pvValue)	\
    ( (This)->lpVtbl -> get_Value(This,pvValue) ) 

#define IDTSVariable100_put_Value(This,vValue)	\
    ( (This)->lpVtbl -> put_Value(This,vValue) ) 

#define IDTSVariable100_get_DataType(This,nType)	\
    ( (This)->lpVtbl -> get_DataType(This,nType) ) 

#define IDTSVariable100_get_QualifiedName(This,pQualifiedName)	\
    ( (This)->lpVtbl -> get_QualifiedName(This,pQualifiedName) ) 

#define IDTSVariable100_get_RaiseChangedEvent(This,pbRaiseEvent)	\
    ( (This)->lpVtbl -> get_RaiseChangedEvent(This,pbRaiseEvent) ) 

#define IDTSVariable100_put_RaiseChangedEvent(This,bRaiseEvent)	\
    ( (This)->lpVtbl -> put_RaiseChangedEvent(This,bRaiseEvent) ) 

#define IDTSVariable100_get_EvaluateAsExpression(This,pbEvalAsExp)	\
    ( (This)->lpVtbl -> get_EvaluateAsExpression(This,pbEvalAsExp) ) 

#define IDTSVariable100_put_EvaluateAsExpression(This,bEvalAsExp)	\
    ( (This)->lpVtbl -> put_EvaluateAsExpression(This,bEvalAsExp) ) 

#define IDTSVariable100_get_SystemVariable(This,pbSystemVariable)	\
    ( (This)->lpVtbl -> get_SystemVariable(This,pbSystemVariable) ) 

#define IDTSVariable100_get_IncludeInDebugDump(This,pbInclude)	\
    ( (This)->lpVtbl -> get_IncludeInDebugDump(This,pbInclude) ) 

#define IDTSVariable100_put_IncludeInDebugDump(This,bInclude)	\
    ( (This)->lpVtbl -> put_IncludeInDebugDump(This,bInclude) ) 

#define IDTSVariable100_get_Parent(This,ppContainer)	\
    ( (This)->lpVtbl -> get_Parent(This,ppContainer) ) 

#define IDTSVariable100_GetValueWithContext(This,pContext,pvValue)	\
    ( (This)->lpVtbl -> GetValueWithContext(This,pContext,pvValue) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSVariable100_INTERFACE_DEFINED__ */


#ifndef __IDTSVariableLock100_INTERFACE_DEFINED__
#define __IDTSVariableLock100_INTERFACE_DEFINED__

/* interface IDTSVariableLock100 */
/* [unique][helpstring][uuid][restricted][hidden][oleautomation][object] */ 


EXTERN_C const IID IID_IDTSVariableLock100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C65E2CD5-2CFF-413B-90E0-3F3E9F7A134F")
    IDTSVariableLock100 : public IUnknown
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AcquireLock( 
            /* [in] */ VARIANT_BOOL vbExclusive) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE ReleaseLock( 
            /* [in] */ VARIANT_BOOL vbExclusive) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSVariableLock100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSVariableLock100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSVariableLock100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSVariableLock100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AcquireLock )( 
            IDTSVariableLock100 * This,
            /* [in] */ VARIANT_BOOL vbExclusive);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *ReleaseLock )( 
            IDTSVariableLock100 * This,
            /* [in] */ VARIANT_BOOL vbExclusive);
        
        END_INTERFACE
    } IDTSVariableLock100Vtbl;

    interface IDTSVariableLock100
    {
        CONST_VTBL struct IDTSVariableLock100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSVariableLock100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSVariableLock100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSVariableLock100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSVariableLock100_AcquireLock(This,vbExclusive)	\
    ( (This)->lpVtbl -> AcquireLock(This,vbExclusive) ) 

#define IDTSVariableLock100_ReleaseLock(This,vbExclusive)	\
    ( (This)->lpVtbl -> ReleaseLock(This,vbExclusive) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSVariableLock100_INTERFACE_DEFINED__ */


#ifndef __IDTSExtendedProperty100_INTERFACE_DEFINED__
#define __IDTSExtendedProperty100_INTERFACE_DEFINED__

/* interface IDTSExtendedProperty100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExtendedProperty100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1D2F50EB-17EB-4940-A248-A5091FE3C7A1")
    IDTSExtendedProperty100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value( 
            /* [retval][out] */ VARIANT *pvValue) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value( 
            /* [in] */ VARIANT vValue) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Namespace( 
            /* [retval][out] */ BSTR *pbstrNamespace) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Namespace( 
            /* [in] */ BSTR bstrNamespace) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_QualifiedName( 
            /* [retval][out] */ BSTR *pQualifiedName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
            /* [retval][out] */ int *nType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExtendedProperty100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExtendedProperty100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExtendedProperty100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExtendedProperty100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExtendedProperty100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExtendedProperty100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExtendedProperty100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExtendedProperty100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )( 
            IDTSExtendedProperty100 * This,
            /* [retval][out] */ VARIANT *pvValue);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Value )( 
            IDTSExtendedProperty100 * This,
            /* [in] */ VARIANT vValue);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Namespace )( 
            IDTSExtendedProperty100 * This,
            /* [retval][out] */ BSTR *pbstrNamespace);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Namespace )( 
            IDTSExtendedProperty100 * This,
            /* [in] */ BSTR bstrNamespace);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_QualifiedName )( 
            IDTSExtendedProperty100 * This,
            /* [retval][out] */ BSTR *pQualifiedName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            IDTSExtendedProperty100 * This,
            /* [retval][out] */ int *nType);
        
        END_INTERFACE
    } IDTSExtendedProperty100Vtbl;

    interface IDTSExtendedProperty100
    {
        CONST_VTBL struct IDTSExtendedProperty100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExtendedProperty100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExtendedProperty100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExtendedProperty100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExtendedProperty100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExtendedProperty100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExtendedProperty100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExtendedProperty100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExtendedProperty100_get_Value(This,pvValue)	\
    ( (This)->lpVtbl -> get_Value(This,pvValue) ) 

#define IDTSExtendedProperty100_put_Value(This,vValue)	\
    ( (This)->lpVtbl -> put_Value(This,vValue) ) 

#define IDTSExtendedProperty100_get_Namespace(This,pbstrNamespace)	\
    ( (This)->lpVtbl -> get_Namespace(This,pbstrNamespace) ) 

#define IDTSExtendedProperty100_put_Namespace(This,bstrNamespace)	\
    ( (This)->lpVtbl -> put_Namespace(This,bstrNamespace) ) 

#define IDTSExtendedProperty100_get_QualifiedName(This,pQualifiedName)	\
    ( (This)->lpVtbl -> get_QualifiedName(This,pQualifiedName) ) 

#define IDTSExtendedProperty100_get_DataType(This,nType)	\
    ( (This)->lpVtbl -> get_DataType(This,nType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExtendedProperty100_INTERFACE_DEFINED__ */


#ifndef __IDTSError100_INTERFACE_DEFINED__
#define __IDTSError100_INTERFACE_DEFINED__

/* interface IDTSError100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSError100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("52E939F5-B27C-424A-9235-A3F93D0BD309")
    IDTSError100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ErrorCode( 
            /* [retval][out] */ long *plErrCode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ErrorCode( 
            /* [in] */ long lErrCode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ BSTR *pbstrSource) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
            /* [in] */ BSTR bstrSource) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TimeStamp( 
            /* [retval][out] */ VARIANT *pvTimeStamp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pbstrDesc) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bstrDesc) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR *pbstrHelpFile) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR bstrHelpFile) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpContext( 
            /* [retval][out] */ long *plHelpContext) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HelpContext( 
            /* [in] */ long lHelpContext) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IDOfInterfaceWithError( 
            /* [retval][out] */ BSTR *pbstrIID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IDOfInterfaceWithError( 
            /* [in] */ BSTR bstrIID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceID( 
            /* [retval][out] */ BSTR *pbstrSourceID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceID( 
            /* [in] */ BSTR bstrSourceID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubComponent( 
            /* [retval][out] */ BSTR *pbstrSubComponent) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubComponent( 
            /* [in] */ BSTR bstrSubComponent) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSError100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSError100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSError100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSError100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSError100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSError100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSError100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSError100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ErrorCode )( 
            IDTSError100 * This,
            /* [retval][out] */ long *plErrCode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ErrorCode )( 
            IDTSError100 * This,
            /* [in] */ long lErrCode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            IDTSError100 * This,
            /* [retval][out] */ BSTR *pbstrSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            IDTSError100 * This,
            /* [in] */ BSTR bstrSource);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeStamp )( 
            IDTSError100 * This,
            /* [retval][out] */ VARIANT *pvTimeStamp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IDTSError100 * This,
            /* [retval][out] */ BSTR *pbstrDesc);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IDTSError100 * This,
            /* [in] */ BSTR bstrDesc);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            IDTSError100 * This,
            /* [retval][out] */ BSTR *pbstrHelpFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            IDTSError100 * This,
            /* [in] */ BSTR bstrHelpFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContext )( 
            IDTSError100 * This,
            /* [retval][out] */ long *plHelpContext);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContext )( 
            IDTSError100 * This,
            /* [in] */ long lHelpContext);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IDOfInterfaceWithError )( 
            IDTSError100 * This,
            /* [retval][out] */ BSTR *pbstrIID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IDOfInterfaceWithError )( 
            IDTSError100 * This,
            /* [in] */ BSTR bstrIID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceID )( 
            IDTSError100 * This,
            /* [retval][out] */ BSTR *pbstrSourceID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceID )( 
            IDTSError100 * This,
            /* [in] */ BSTR bstrSourceID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubComponent )( 
            IDTSError100 * This,
            /* [retval][out] */ BSTR *pbstrSubComponent);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SubComponent )( 
            IDTSError100 * This,
            /* [in] */ BSTR bstrSubComponent);
        
        END_INTERFACE
    } IDTSError100Vtbl;

    interface IDTSError100
    {
        CONST_VTBL struct IDTSError100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSError100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSError100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSError100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSError100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSError100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSError100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSError100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSError100_get_ErrorCode(This,plErrCode)	\
    ( (This)->lpVtbl -> get_ErrorCode(This,plErrCode) ) 

#define IDTSError100_put_ErrorCode(This,lErrCode)	\
    ( (This)->lpVtbl -> put_ErrorCode(This,lErrCode) ) 

#define IDTSError100_get_Source(This,pbstrSource)	\
    ( (This)->lpVtbl -> get_Source(This,pbstrSource) ) 

#define IDTSError100_put_Source(This,bstrSource)	\
    ( (This)->lpVtbl -> put_Source(This,bstrSource) ) 

#define IDTSError100_get_TimeStamp(This,pvTimeStamp)	\
    ( (This)->lpVtbl -> get_TimeStamp(This,pvTimeStamp) ) 

#define IDTSError100_get_Description(This,pbstrDesc)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDesc) ) 

#define IDTSError100_put_Description(This,bstrDesc)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDesc) ) 

#define IDTSError100_get_HelpFile(This,pbstrHelpFile)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrHelpFile) ) 

#define IDTSError100_put_HelpFile(This,bstrHelpFile)	\
    ( (This)->lpVtbl -> put_HelpFile(This,bstrHelpFile) ) 

#define IDTSError100_get_HelpContext(This,plHelpContext)	\
    ( (This)->lpVtbl -> get_HelpContext(This,plHelpContext) ) 

#define IDTSError100_put_HelpContext(This,lHelpContext)	\
    ( (This)->lpVtbl -> put_HelpContext(This,lHelpContext) ) 

#define IDTSError100_get_IDOfInterfaceWithError(This,pbstrIID)	\
    ( (This)->lpVtbl -> get_IDOfInterfaceWithError(This,pbstrIID) ) 

#define IDTSError100_put_IDOfInterfaceWithError(This,bstrIID)	\
    ( (This)->lpVtbl -> put_IDOfInterfaceWithError(This,bstrIID) ) 

#define IDTSError100_get_SourceID(This,pbstrSourceID)	\
    ( (This)->lpVtbl -> get_SourceID(This,pbstrSourceID) ) 

#define IDTSError100_put_SourceID(This,bstrSourceID)	\
    ( (This)->lpVtbl -> put_SourceID(This,bstrSourceID) ) 

#define IDTSError100_get_SubComponent(This,pbstrSubComponent)	\
    ( (This)->lpVtbl -> get_SubComponent(This,pbstrSubComponent) ) 

#define IDTSError100_put_SubComponent(This,bstrSubComponent)	\
    ( (This)->lpVtbl -> put_SubComponent(This,bstrSubComponent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSError100_INTERFACE_DEFINED__ */


#ifndef __IDTSWarning100_INTERFACE_DEFINED__
#define __IDTSWarning100_INTERFACE_DEFINED__

/* interface IDTSWarning100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSWarning100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C9D763C3-3207-441B-8A11-D66BDBD4B4B8")
    IDTSWarning100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_WarningCode( 
            /* [retval][out] */ long *plErrCode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_WarningCode( 
            /* [in] */ long lErrCode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ BSTR *pbstrSource) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Source( 
            /* [in] */ BSTR bstrSource) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TimeStamp( 
            /* [retval][out] */ VARIANT *pvTimeStamp) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pbstrDesc) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Description( 
            /* [in] */ BSTR bstrDesc) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpFile( 
            /* [retval][out] */ BSTR *pbstrHelpFile) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HelpFile( 
            /* [in] */ BSTR bstrHelpFile) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HelpContext( 
            /* [retval][out] */ long *plHelpContext) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HelpContext( 
            /* [in] */ long lHelpContext) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IDOfInterfaceWithWarning( 
            /* [retval][out] */ BSTR *pbstrIID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IDOfInterfaceWithWarning( 
            /* [in] */ BSTR bstrIID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SourceID( 
            /* [retval][out] */ BSTR *pbstrSourceID) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SourceID( 
            /* [in] */ BSTR bstrSourceID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SubComponent( 
            /* [retval][out] */ BSTR *pbstrSubComponent) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SubComponent( 
            /* [in] */ BSTR bstrSubComponent) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSWarning100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSWarning100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSWarning100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSWarning100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSWarning100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSWarning100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSWarning100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSWarning100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_WarningCode )( 
            IDTSWarning100 * This,
            /* [retval][out] */ long *plErrCode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_WarningCode )( 
            IDTSWarning100 * This,
            /* [in] */ long lErrCode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            IDTSWarning100 * This,
            /* [retval][out] */ BSTR *pbstrSource);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            IDTSWarning100 * This,
            /* [in] */ BSTR bstrSource);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeStamp )( 
            IDTSWarning100 * This,
            /* [retval][out] */ VARIANT *pvTimeStamp);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IDTSWarning100 * This,
            /* [retval][out] */ BSTR *pbstrDesc);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Description )( 
            IDTSWarning100 * This,
            /* [in] */ BSTR bstrDesc);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpFile )( 
            IDTSWarning100 * This,
            /* [retval][out] */ BSTR *pbstrHelpFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HelpFile )( 
            IDTSWarning100 * This,
            /* [in] */ BSTR bstrHelpFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HelpContext )( 
            IDTSWarning100 * This,
            /* [retval][out] */ long *plHelpContext);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HelpContext )( 
            IDTSWarning100 * This,
            /* [in] */ long lHelpContext);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IDOfInterfaceWithWarning )( 
            IDTSWarning100 * This,
            /* [retval][out] */ BSTR *pbstrIID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IDOfInterfaceWithWarning )( 
            IDTSWarning100 * This,
            /* [in] */ BSTR bstrIID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SourceID )( 
            IDTSWarning100 * This,
            /* [retval][out] */ BSTR *pbstrSourceID);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SourceID )( 
            IDTSWarning100 * This,
            /* [in] */ BSTR bstrSourceID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SubComponent )( 
            IDTSWarning100 * This,
            /* [retval][out] */ BSTR *pbstrSubComponent);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SubComponent )( 
            IDTSWarning100 * This,
            /* [in] */ BSTR bstrSubComponent);
        
        END_INTERFACE
    } IDTSWarning100Vtbl;

    interface IDTSWarning100
    {
        CONST_VTBL struct IDTSWarning100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSWarning100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSWarning100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSWarning100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSWarning100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSWarning100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSWarning100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSWarning100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSWarning100_get_WarningCode(This,plErrCode)	\
    ( (This)->lpVtbl -> get_WarningCode(This,plErrCode) ) 

#define IDTSWarning100_put_WarningCode(This,lErrCode)	\
    ( (This)->lpVtbl -> put_WarningCode(This,lErrCode) ) 

#define IDTSWarning100_get_Source(This,pbstrSource)	\
    ( (This)->lpVtbl -> get_Source(This,pbstrSource) ) 

#define IDTSWarning100_put_Source(This,bstrSource)	\
    ( (This)->lpVtbl -> put_Source(This,bstrSource) ) 

#define IDTSWarning100_get_TimeStamp(This,pvTimeStamp)	\
    ( (This)->lpVtbl -> get_TimeStamp(This,pvTimeStamp) ) 

#define IDTSWarning100_get_Description(This,pbstrDesc)	\
    ( (This)->lpVtbl -> get_Description(This,pbstrDesc) ) 

#define IDTSWarning100_put_Description(This,bstrDesc)	\
    ( (This)->lpVtbl -> put_Description(This,bstrDesc) ) 

#define IDTSWarning100_get_HelpFile(This,pbstrHelpFile)	\
    ( (This)->lpVtbl -> get_HelpFile(This,pbstrHelpFile) ) 

#define IDTSWarning100_put_HelpFile(This,bstrHelpFile)	\
    ( (This)->lpVtbl -> put_HelpFile(This,bstrHelpFile) ) 

#define IDTSWarning100_get_HelpContext(This,plHelpContext)	\
    ( (This)->lpVtbl -> get_HelpContext(This,plHelpContext) ) 

#define IDTSWarning100_put_HelpContext(This,lHelpContext)	\
    ( (This)->lpVtbl -> put_HelpContext(This,lHelpContext) ) 

#define IDTSWarning100_get_IDOfInterfaceWithWarning(This,pbstrIID)	\
    ( (This)->lpVtbl -> get_IDOfInterfaceWithWarning(This,pbstrIID) ) 

#define IDTSWarning100_put_IDOfInterfaceWithWarning(This,bstrIID)	\
    ( (This)->lpVtbl -> put_IDOfInterfaceWithWarning(This,bstrIID) ) 

#define IDTSWarning100_get_SourceID(This,pbstrSourceID)	\
    ( (This)->lpVtbl -> get_SourceID(This,pbstrSourceID) ) 

#define IDTSWarning100_put_SourceID(This,bstrSourceID)	\
    ( (This)->lpVtbl -> put_SourceID(This,bstrSourceID) ) 

#define IDTSWarning100_get_SubComponent(This,pbstrSubComponent)	\
    ( (This)->lpVtbl -> get_SubComponent(This,pbstrSubComponent) ) 

#define IDTSWarning100_put_SubComponent(This,bstrSubComponent)	\
    ( (This)->lpVtbl -> put_SubComponent(This,bstrSubComponent) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSWarning100_INTERFACE_DEFINED__ */


#ifndef __IDTSConfiguration100_INTERFACE_DEFINED__
#define __IDTSConfiguration100_INTERFACE_DEFINED__

/* interface IDTSConfiguration100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConfiguration100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("682658CA-782A-4E11-A56F-1E6214336E34")
    IDTSConfiguration100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConfigurationType( 
            /* [retval][out] */ DTSConfigurationType *pctType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ConfigurationType( 
            /* [in] */ DTSConfigurationType ctType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConfigurationString( 
            /* [retval][out] */ BSTR *pbstrConfig) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ConfigurationString( 
            /* [in] */ BSTR bstrConfig) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackagePath( 
            /* [retval][out] */ BSTR *pbstrPackagePath) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackagePath( 
            /* [in] */ BSTR bstrPackagePath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConfiguration100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConfiguration100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConfiguration100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConfiguration100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConfiguration100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConfiguration100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConfiguration100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConfiguration100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationType )( 
            IDTSConfiguration100 * This,
            /* [retval][out] */ DTSConfigurationType *pctType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigurationType )( 
            IDTSConfiguration100 * This,
            /* [in] */ DTSConfigurationType ctType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConfigurationString )( 
            IDTSConfiguration100 * This,
            /* [retval][out] */ BSTR *pbstrConfig);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ConfigurationString )( 
            IDTSConfiguration100 * This,
            /* [in] */ BSTR bstrConfig);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackagePath )( 
            IDTSConfiguration100 * This,
            /* [retval][out] */ BSTR *pbstrPackagePath);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackagePath )( 
            IDTSConfiguration100 * This,
            /* [in] */ BSTR bstrPackagePath);
        
        END_INTERFACE
    } IDTSConfiguration100Vtbl;

    interface IDTSConfiguration100
    {
        CONST_VTBL struct IDTSConfiguration100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConfiguration100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConfiguration100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConfiguration100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConfiguration100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConfiguration100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConfiguration100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConfiguration100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConfiguration100_get_ConfigurationType(This,pctType)	\
    ( (This)->lpVtbl -> get_ConfigurationType(This,pctType) ) 

#define IDTSConfiguration100_put_ConfigurationType(This,ctType)	\
    ( (This)->lpVtbl -> put_ConfigurationType(This,ctType) ) 

#define IDTSConfiguration100_get_ConfigurationString(This,pbstrConfig)	\
    ( (This)->lpVtbl -> get_ConfigurationString(This,pbstrConfig) ) 

#define IDTSConfiguration100_put_ConfigurationString(This,bstrConfig)	\
    ( (This)->lpVtbl -> put_ConfigurationString(This,bstrConfig) ) 

#define IDTSConfiguration100_get_PackagePath(This,pbstrPackagePath)	\
    ( (This)->lpVtbl -> get_PackagePath(This,pbstrPackagePath) ) 

#define IDTSConfiguration100_put_PackagePath(This,bstrPackagePath)	\
    ( (This)->lpVtbl -> put_PackagePath(This,bstrPackagePath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConfiguration100_INTERFACE_DEFINED__ */


#ifndef __IDTSDBProviderInfo100_INTERFACE_DEFINED__
#define __IDTSDBProviderInfo100_INTERFACE_DEFINED__

/* interface IDTSDBProviderInfo100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSDBProviderInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("475BA0D9-E453-4CFE-9941-D273359F95F6")
    IDTSDBProviderInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name( 
            /* [retval][out] */ BSTR *bstrName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ParseName( 
            /* [retval][out] */ BSTR *bstrParseName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *bstrDescription) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderType( 
            /* [retval][out] */ DTSProviderType *pType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProviderSubType( 
            /* [retval][out] */ DTSProviderSubType *pType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseFullTableName( 
            /* [retval][out] */ VARIANT_BOOL *pUseFullTableName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SupportsNullColumns( 
            /* [retval][out] */ VARIANT_BOOL *pSupportsNullColumns) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDBProviderInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDBProviderInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDBProviderInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDBProviderInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDBProviderInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDBProviderInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDBProviderInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDBProviderInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Name )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ BSTR *bstrName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ParseName )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ BSTR *bstrParseName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ BSTR *bstrDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderType )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ DTSProviderType *pType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProviderSubType )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ DTSProviderSubType *pType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFullTableName )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseFullTableName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SupportsNullColumns )( 
            IDTSDBProviderInfo100 * This,
            /* [retval][out] */ VARIANT_BOOL *pSupportsNullColumns);
        
        END_INTERFACE
    } IDTSDBProviderInfo100Vtbl;

    interface IDTSDBProviderInfo100
    {
        CONST_VTBL struct IDTSDBProviderInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDBProviderInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDBProviderInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDBProviderInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDBProviderInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDBProviderInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDBProviderInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDBProviderInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDBProviderInfo100_get_Name(This,bstrName)	\
    ( (This)->lpVtbl -> get_Name(This,bstrName) ) 

#define IDTSDBProviderInfo100_get_ParseName(This,bstrParseName)	\
    ( (This)->lpVtbl -> get_ParseName(This,bstrParseName) ) 

#define IDTSDBProviderInfo100_get_Description(This,bstrDescription)	\
    ( (This)->lpVtbl -> get_Description(This,bstrDescription) ) 

#define IDTSDBProviderInfo100_get_ProviderType(This,pType)	\
    ( (This)->lpVtbl -> get_ProviderType(This,pType) ) 

#define IDTSDBProviderInfo100_get_ProviderSubType(This,pType)	\
    ( (This)->lpVtbl -> get_ProviderSubType(This,pType) ) 

#define IDTSDBProviderInfo100_get_UseFullTableName(This,pUseFullTableName)	\
    ( (This)->lpVtbl -> get_UseFullTableName(This,pUseFullTableName) ) 

#define IDTSDBProviderInfo100_get_SupportsNullColumns(This,pSupportsNullColumns)	\
    ( (This)->lpVtbl -> get_SupportsNullColumns(This,pSupportsNullColumns) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDBProviderInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSDataTypeInfo100_INTERFACE_DEFINED__
#define __IDTSDataTypeInfo100_INTERFACE_DEFINED__

/* interface IDTSDataTypeInfo100 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSDataTypeInfo100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("197B60F7-4A04-4647-8652-3A3ACD7440CF")
    IDTSDataTypeInfo100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TypeName( 
            /* [retval][out] */ BSTR *pbstrTypeName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TypeEnumName( 
            /* [retval][out] */ BSTR *pbstrTypeEnumName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDataTypeInfo100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDataTypeInfo100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDataTypeInfo100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDataTypeInfo100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDataTypeInfo100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDataTypeInfo100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDataTypeInfo100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDataTypeInfo100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TypeName )( 
            IDTSDataTypeInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TypeEnumName )( 
            IDTSDataTypeInfo100 * This,
            /* [retval][out] */ BSTR *pbstrTypeEnumName);
        
        END_INTERFACE
    } IDTSDataTypeInfo100Vtbl;

    interface IDTSDataTypeInfo100
    {
        CONST_VTBL struct IDTSDataTypeInfo100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDataTypeInfo100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDataTypeInfo100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDataTypeInfo100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDataTypeInfo100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDataTypeInfo100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDataTypeInfo100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDataTypeInfo100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDataTypeInfo100_get_TypeName(This,pbstrTypeName)	\
    ( (This)->lpVtbl -> get_TypeName(This,pbstrTypeName) ) 

#define IDTSDataTypeInfo100_get_TypeEnumName(This,pbstrTypeEnumName)	\
    ( (This)->lpVtbl -> get_TypeEnumName(This,pbstrTypeEnumName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDataTypeInfo100_INTERFACE_DEFINED__ */


#ifndef __IDTSDataTypeInfos100_INTERFACE_DEFINED__
#define __IDTSDataTypeInfos100_INTERFACE_DEFINED__

/* interface IDTSDataTypeInfos100 */
/* [unique][helpstring][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSDataTypeInfos100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6460158E-CD48-4657-BF2D-D2124457B135")
    IDTSDataTypeInfos100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSDataTypeInfo100 **pIDTSDataTypeInfo) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDataTypeInfos100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDataTypeInfos100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDataTypeInfos100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDataTypeInfos100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDataTypeInfos100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDataTypeInfos100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDataTypeInfos100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDataTypeInfos100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSDataTypeInfos100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSDataTypeInfo100 **pIDTSDataTypeInfo);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSDataTypeInfos100 * This,
            /* [retval][out] */ long *plRetVal);
        
        END_INTERFACE
    } IDTSDataTypeInfos100Vtbl;

    interface IDTSDataTypeInfos100
    {
        CONST_VTBL struct IDTSDataTypeInfos100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDataTypeInfos100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDataTypeInfos100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDataTypeInfos100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDataTypeInfos100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDataTypeInfos100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDataTypeInfos100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDataTypeInfos100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDataTypeInfos100_get_Item(This,Index,pIDTSDataTypeInfo)	\
    ( (This)->lpVtbl -> get_Item(This,Index,pIDTSDataTypeInfo) ) 

#define IDTSDataTypeInfos100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDataTypeInfos100_INTERFACE_DEFINED__ */


#ifndef __IDTSApplication100_INTERFACE_DEFINED__
#define __IDTSApplication100_INTERFACE_DEFINED__

/* interface IDTSApplication100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSApplication100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C0262265-5F9D-4821-9277-573210B5AF29")
    IDTSApplication100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ForEachEnumeratorInfos( 
            /* [retval][out] */ IDTSForEachEnumeratorInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TaskInfos( 
            /* [retval][out] */ IDTSTaskInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_LogProviderInfos( 
            /* [retval][out] */ IDTSLogProviderInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ConnectionInfos( 
            /* [retval][out] */ IDTSConnectionInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DBProviderInfos( 
            /* [retval][out] */ IDTSDBProviderInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPackageInfos( 
            /* [in] */ BSTR bstrPackageFolder,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ IDTSPackageInfos100 **ppRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PipelineComponentInfos( 
            /* [retval][out] */ IDTSPipelineComponentInfos100 **RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ComponentStorePath( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadPackage( 
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL loadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToXML( 
            /* [in] */ BSTR FileName,
            /* [in] */ IDTSPersist100 *pPersistObj,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFromSQLServer( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToSQLServer( 
            /* [in] */ IDTSPackage100 *Package,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ BSTR ServerName,
            /* [in] */ BSTR ServerUserName,
            /* [in] */ BSTR ServerPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToSQLServerAs( 
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadFromSQLServer( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [in] */ VARIANT_BOOL bLoadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExistsOnSQLServer( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ VARIANT_BOOL *pbExists) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CheckSignatureOnLoad( 
            /* [retval][out] */ VARIANT_BOOL *pvbCheckSigOnLoad) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CheckSignatureOnLoad( 
            /* [in] */ VARIANT_BOOL vbCheckSigOnLoad) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateFolderOnSQLServer( 
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrNewFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RenameFolderOnSQLServer( 
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrOldName,
            /* [in] */ BSTR bstrNewName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFolderFromSQLServer( 
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FolderExistsOnSQLServer( 
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ VARIANT_BOOL *pbExists) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SavePackage( 
            /* [in] */ BSTR bstrFileName,
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FolderFromPath( 
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ GUID *pguidFolder) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataTypeInfos( 
            /* [retval][out] */ IDTSDataTypeInfos100 **pIDTSDataTypeInfos) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DataTypeInfoFromDataType( 
            /* [in] */ enum DataType dt,
            /* [retval][out] */ IDTSDataTypeInfo100 **pIDTSDataTypeInfo) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetRunningPackages( 
            /* [in] */ BSTR bstrMachineName,
            /* [retval][out] */ IDTSRunningPackages100 **pRunningPackages) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UpdateObjects( 
            /* [retval][out] */ VARIANT_BOOL *pvbUpdateTasks) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UpdateObjects( 
            /* [in] */ VARIANT_BOOL pvbUpdateTasks) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UpdatePackage( 
            /* [retval][out] */ VARIANT_BOOL *pvbUpdatePackage) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UpdatePackage( 
            /* [in] */ VARIANT_BOOL pvbUpdatePackage) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetServerInfo( 
            /* [in] */ BSTR bstrMachineName,
            /* [out] */ BSTR *serverVersion) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackagePassword( 
            /* [in] */ BSTR NewVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateFolderOnDtsServer( 
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrNewFolderName,
            /* [in] */ BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RenameFolderOnDtsServer( 
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrOldName,
            /* [in] */ BSTR bstrNewName,
            /* [in] */ BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFolderFromDtsServer( 
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE FolderExistsOnDtsServer( 
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ VARIANT_BOOL *pbExists) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToDtsServer( 
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveFromDtsServer( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadFromDtsServer( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ VARIANT_BOOL bLoadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExistsOnDtsServer( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ VARIANT_BOOL *pbExists) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDtsServerPackageInfos( 
            /* [in] */ BSTR bstrPackageFolder,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ IDTSPackageInfos100 **ppRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetDtsServerRoles( 
            /* [in] */ BSTR bstrFolderPath,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ SAFEARRAY * *ppRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPackageInfos2( 
            /* [in] */ BSTR bstrPackageFolder,
            /* [in] */ VARIANT vConnectionObject,
            /* [retval][out] */ IDTSPackageInfos100 **ppRetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadFromSQLServer2( 
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ VARIANT vConnectionObject,
            /* [in] */ VARIANT_BOOL bLoadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetPackageRoles( 
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrReaderRole,
            /* [in] */ BSTR bstrWriterRole) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPackageRoles( 
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [out] */ BSTR *pbstrReaderRole,
            /* [out] */ BSTR *pbstrWriterRole) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetServerVersionEx( 
            /* [in] */ BSTR bstrServerName,
            /* [out] */ DWORD *pdwEditionID,
            /* [out] */ enum DTSProductLevel *peSsisEditionID,
            /* [out] */ BSTR *pbstrProductVersion,
            /* [out] */ BSTR *pbstrProductLevel) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageUpgradeOptions( 
            /* [retval][out] */ DTS_PACKAGE_UPGRADE_OPTIONS *pPackageUpgradeOptions) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_PackageUpgradeOptions( 
            /* [in] */ DTS_PACKAGE_UPGRADE_OPTIONS packageUpgradeOptions) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenProject( 
            /* [in] */ BSTR bstrProjectFileName,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSProject100 **ppProject) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CloseProject( 
            /* [in] */ IDTSProject100 *pProject) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProjectPassword( 
            /* [in] */ BSTR bstrProjectPassword) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateSsisServerExecution( 
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrReferenceId,
            /* [in] */ VARIANT_BOOL bUse32BitRuntime,
            /* [retval][out] */ IDTSServerExecution100 **ppServerExecution) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSApplication100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSApplication100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSApplication100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSApplication100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSApplication100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSApplication100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSApplication100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSApplication100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ForEachEnumeratorInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSForEachEnumeratorInfos100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TaskInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSTaskInfos100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_LogProviderInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSLogProviderInfos100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ConnectionInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSConnectionInfos100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DBProviderInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSDBProviderInfos100 **RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPackageInfos )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackageFolder,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ IDTSPackageInfos100 **ppRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PipelineComponentInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSPipelineComponentInfos100 **RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ComponentStorePath )( 
            IDTSApplication100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadPackage )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ VARIANT_BOOL loadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToXML )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR FileName,
            /* [in] */ IDTSPersist100 *pPersistObj,
            /* [in] */ IDTSEvents100 *pEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFromSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ IDTSPackage100 *Package,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ BSTR ServerName,
            /* [in] */ BSTR ServerUserName,
            /* [in] */ BSTR ServerPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToSQLServerAs )( 
            IDTSApplication100 * This,
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadFromSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [in] */ VARIANT_BOOL bLoadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExistsOnSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ VARIANT_BOOL *pbExists);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CheckSignatureOnLoad )( 
            IDTSApplication100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbCheckSigOnLoad);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CheckSignatureOnLoad )( 
            IDTSApplication100 * This,
            /* [in] */ VARIANT_BOOL vbCheckSigOnLoad);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateFolderOnSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrNewFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RenameFolderOnSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrOldName,
            /* [in] */ BSTR bstrNewName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFolderFromSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FolderExistsOnSQLServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ VARIANT_BOOL *pbExists);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SavePackage )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFileName,
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSEvents100 *pEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FolderFromPath )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrServerUserName,
            /* [in] */ BSTR bstrServerPassword,
            /* [retval][out] */ GUID *pguidFolder);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataTypeInfos )( 
            IDTSApplication100 * This,
            /* [retval][out] */ IDTSDataTypeInfos100 **pIDTSDataTypeInfos);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DataTypeInfoFromDataType )( 
            IDTSApplication100 * This,
            /* [in] */ enum DataType dt,
            /* [retval][out] */ IDTSDataTypeInfo100 **pIDTSDataTypeInfo);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetRunningPackages )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrMachineName,
            /* [retval][out] */ IDTSRunningPackages100 **pRunningPackages);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpdateObjects )( 
            IDTSApplication100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUpdateTasks);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpdateObjects )( 
            IDTSApplication100 * This,
            /* [in] */ VARIANT_BOOL pvbUpdateTasks);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UpdatePackage )( 
            IDTSApplication100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUpdatePackage);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UpdatePackage )( 
            IDTSApplication100 * This,
            /* [in] */ VARIANT_BOOL pvbUpdatePackage);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetServerInfo )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrMachineName,
            /* [out] */ BSTR *serverVersion);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackagePassword )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR NewVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateFolderOnDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrNewFolderName,
            /* [in] */ BSTR bstrServerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RenameFolderOnDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrParent,
            /* [in] */ BSTR bstrOldName,
            /* [in] */ BSTR bstrNewName,
            /* [in] */ BSTR bstrServerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFolderFromDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *FolderExistsOnDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFolderName,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ VARIANT_BOOL *pbExists);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ IDTSPackage100 *pPackage,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveFromDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadFromDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ VARIANT_BOOL bLoadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ExistsOnDtsServer )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ VARIANT_BOOL *pbExists);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDtsServerPackageInfos )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackageFolder,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ IDTSPackageInfos100 **ppRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetDtsServerRoles )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrFolderPath,
            /* [in] */ BSTR bstrServerName,
            /* [retval][out] */ SAFEARRAY * *ppRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPackageInfos2 )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackageFolder,
            /* [in] */ VARIANT vConnectionObject,
            /* [retval][out] */ IDTSPackageInfos100 **ppRetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadFromSQLServer2 )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ VARIANT vConnectionObject,
            /* [in] */ VARIANT_BOOL bLoadNeutral,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSPackage100 **ppPackage);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetPackageRoles )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrReaderRole,
            /* [in] */ BSTR bstrWriterRole);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetPackageRoles )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [out] */ BSTR *pbstrReaderRole,
            /* [out] */ BSTR *pbstrWriterRole);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetServerVersionEx )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrServerName,
            /* [out] */ DWORD *pdwEditionID,
            /* [out] */ enum DTSProductLevel *peSsisEditionID,
            /* [out] */ BSTR *pbstrProductVersion,
            /* [out] */ BSTR *pbstrProductLevel);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageUpgradeOptions )( 
            IDTSApplication100 * This,
            /* [retval][out] */ DTS_PACKAGE_UPGRADE_OPTIONS *pPackageUpgradeOptions);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_PackageUpgradeOptions )( 
            IDTSApplication100 * This,
            /* [in] */ DTS_PACKAGE_UPGRADE_OPTIONS packageUpgradeOptions);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenProject )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrProjectFileName,
            /* [in] */ IDTSEvents100 *pEvents,
            /* [retval][out] */ IDTSProject100 **ppProject);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CloseProject )( 
            IDTSApplication100 * This,
            /* [in] */ IDTSProject100 *pProject);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProjectPassword )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrProjectPassword);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateSsisServerExecution )( 
            IDTSApplication100 * This,
            /* [in] */ BSTR bstrServerName,
            /* [in] */ BSTR bstrPackagePath,
            /* [in] */ BSTR bstrReferenceId,
            /* [in] */ VARIANT_BOOL bUse32BitRuntime,
            /* [retval][out] */ IDTSServerExecution100 **ppServerExecution);
        
        END_INTERFACE
    } IDTSApplication100Vtbl;

    interface IDTSApplication100
    {
        CONST_VTBL struct IDTSApplication100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSApplication100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSApplication100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSApplication100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSApplication100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSApplication100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSApplication100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSApplication100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSApplication100_get_ForEachEnumeratorInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_ForEachEnumeratorInfos(This,RetVal) ) 

#define IDTSApplication100_get_TaskInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_TaskInfos(This,RetVal) ) 

#define IDTSApplication100_get_LogProviderInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_LogProviderInfos(This,RetVal) ) 

#define IDTSApplication100_get_ConnectionInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_ConnectionInfos(This,RetVal) ) 

#define IDTSApplication100_get_DBProviderInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_DBProviderInfos(This,RetVal) ) 

#define IDTSApplication100_GetPackageInfos(This,bstrPackageFolder,bstrServerName,bstrServerUserName,bstrServerPassword,ppRetVal)	\
    ( (This)->lpVtbl -> GetPackageInfos(This,bstrPackageFolder,bstrServerName,bstrServerUserName,bstrServerPassword,ppRetVal) ) 

#define IDTSApplication100_get_PipelineComponentInfos(This,RetVal)	\
    ( (This)->lpVtbl -> get_PipelineComponentInfos(This,RetVal) ) 

#define IDTSApplication100_get_ComponentStorePath(This,RetVal)	\
    ( (This)->lpVtbl -> get_ComponentStorePath(This,RetVal) ) 

#define IDTSApplication100_LoadPackage(This,FileName,loadNeutral,pEvents,ppPackage)	\
    ( (This)->lpVtbl -> LoadPackage(This,FileName,loadNeutral,pEvents,ppPackage) ) 

#define IDTSApplication100_SaveToXML(This,FileName,pPersistObj,pEvents)	\
    ( (This)->lpVtbl -> SaveToXML(This,FileName,pPersistObj,pEvents) ) 

#define IDTSApplication100_RemoveFromSQLServer(This,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword)	\
    ( (This)->lpVtbl -> RemoveFromSQLServer(This,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword) ) 

#define IDTSApplication100_SaveToSQLServer(This,Package,pEvents,ServerName,ServerUserName,ServerPassword)	\
    ( (This)->lpVtbl -> SaveToSQLServer(This,Package,pEvents,ServerName,ServerUserName,ServerPassword) ) 

#define IDTSApplication100_SaveToSQLServerAs(This,pPackage,pEvents,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword)	\
    ( (This)->lpVtbl -> SaveToSQLServerAs(This,pPackage,pEvents,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword) ) 

#define IDTSApplication100_LoadFromSQLServer(This,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword,bLoadNeutral,pEvents,ppPackage)	\
    ( (This)->lpVtbl -> LoadFromSQLServer(This,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword,bLoadNeutral,pEvents,ppPackage) ) 

#define IDTSApplication100_ExistsOnSQLServer(This,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword,pbExists)	\
    ( (This)->lpVtbl -> ExistsOnSQLServer(This,bstrPackagePath,bstrServerName,bstrServerUserName,bstrServerPassword,pbExists) ) 

#define IDTSApplication100_get_CheckSignatureOnLoad(This,pvbCheckSigOnLoad)	\
    ( (This)->lpVtbl -> get_CheckSignatureOnLoad(This,pvbCheckSigOnLoad) ) 

#define IDTSApplication100_put_CheckSignatureOnLoad(This,vbCheckSigOnLoad)	\
    ( (This)->lpVtbl -> put_CheckSignatureOnLoad(This,vbCheckSigOnLoad) ) 

#define IDTSApplication100_CreateFolderOnSQLServer(This,bstrParent,bstrNewFolderName,bstrServerName,bstrServerUserName,bstrServerPassword)	\
    ( (This)->lpVtbl -> CreateFolderOnSQLServer(This,bstrParent,bstrNewFolderName,bstrServerName,bstrServerUserName,bstrServerPassword) ) 

#define IDTSApplication100_RenameFolderOnSQLServer(This,bstrParent,bstrOldName,bstrNewName,bstrServerName,bstrServerUserName,bstrServerPassword)	\
    ( (This)->lpVtbl -> RenameFolderOnSQLServer(This,bstrParent,bstrOldName,bstrNewName,bstrServerName,bstrServerUserName,bstrServerPassword) ) 

#define IDTSApplication100_RemoveFolderFromSQLServer(This,bstrFolderName,bstrServerName,bstrServerUserName,bstrServerPassword)	\
    ( (This)->lpVtbl -> RemoveFolderFromSQLServer(This,bstrFolderName,bstrServerName,bstrServerUserName,bstrServerPassword) ) 

#define IDTSApplication100_FolderExistsOnSQLServer(This,bstrFolderName,bstrServerName,bstrServerUserName,bstrServerPassword,pbExists)	\
    ( (This)->lpVtbl -> FolderExistsOnSQLServer(This,bstrFolderName,bstrServerName,bstrServerUserName,bstrServerPassword,pbExists) ) 

#define IDTSApplication100_SavePackage(This,bstrFileName,pPackage,pEvents)	\
    ( (This)->lpVtbl -> SavePackage(This,bstrFileName,pPackage,pEvents) ) 

#define IDTSApplication100_FolderFromPath(This,bstrFolderName,bstrServerName,bstrServerUserName,bstrServerPassword,pguidFolder)	\
    ( (This)->lpVtbl -> FolderFromPath(This,bstrFolderName,bstrServerName,bstrServerUserName,bstrServerPassword,pguidFolder) ) 

#define IDTSApplication100_get_DataTypeInfos(This,pIDTSDataTypeInfos)	\
    ( (This)->lpVtbl -> get_DataTypeInfos(This,pIDTSDataTypeInfos) ) 

#define IDTSApplication100_DataTypeInfoFromDataType(This,dt,pIDTSDataTypeInfo)	\
    ( (This)->lpVtbl -> DataTypeInfoFromDataType(This,dt,pIDTSDataTypeInfo) ) 

#define IDTSApplication100_GetRunningPackages(This,bstrMachineName,pRunningPackages)	\
    ( (This)->lpVtbl -> GetRunningPackages(This,bstrMachineName,pRunningPackages) ) 

#define IDTSApplication100_get_UpdateObjects(This,pvbUpdateTasks)	\
    ( (This)->lpVtbl -> get_UpdateObjects(This,pvbUpdateTasks) ) 

#define IDTSApplication100_put_UpdateObjects(This,pvbUpdateTasks)	\
    ( (This)->lpVtbl -> put_UpdateObjects(This,pvbUpdateTasks) ) 

#define IDTSApplication100_get_UpdatePackage(This,pvbUpdatePackage)	\
    ( (This)->lpVtbl -> get_UpdatePackage(This,pvbUpdatePackage) ) 

#define IDTSApplication100_put_UpdatePackage(This,pvbUpdatePackage)	\
    ( (This)->lpVtbl -> put_UpdatePackage(This,pvbUpdatePackage) ) 

#define IDTSApplication100_GetServerInfo(This,bstrMachineName,serverVersion)	\
    ( (This)->lpVtbl -> GetServerInfo(This,bstrMachineName,serverVersion) ) 

#define IDTSApplication100_put_PackagePassword(This,NewVal)	\
    ( (This)->lpVtbl -> put_PackagePassword(This,NewVal) ) 

#define IDTSApplication100_CreateFolderOnDtsServer(This,bstrParent,bstrNewFolderName,bstrServerName)	\
    ( (This)->lpVtbl -> CreateFolderOnDtsServer(This,bstrParent,bstrNewFolderName,bstrServerName) ) 

#define IDTSApplication100_RenameFolderOnDtsServer(This,bstrParent,bstrOldName,bstrNewName,bstrServerName)	\
    ( (This)->lpVtbl -> RenameFolderOnDtsServer(This,bstrParent,bstrOldName,bstrNewName,bstrServerName) ) 

#define IDTSApplication100_RemoveFolderFromDtsServer(This,bstrFolderName,bstrServerName)	\
    ( (This)->lpVtbl -> RemoveFolderFromDtsServer(This,bstrFolderName,bstrServerName) ) 

#define IDTSApplication100_FolderExistsOnDtsServer(This,bstrFolderName,bstrServerName,pbExists)	\
    ( (This)->lpVtbl -> FolderExistsOnDtsServer(This,bstrFolderName,bstrServerName,pbExists) ) 

#define IDTSApplication100_SaveToDtsServer(This,pPackage,pEvents,bstrPackagePath,bstrServerName)	\
    ( (This)->lpVtbl -> SaveToDtsServer(This,pPackage,pEvents,bstrPackagePath,bstrServerName) ) 

#define IDTSApplication100_RemoveFromDtsServer(This,bstrPackagePath,bstrServerName)	\
    ( (This)->lpVtbl -> RemoveFromDtsServer(This,bstrPackagePath,bstrServerName) ) 

#define IDTSApplication100_LoadFromDtsServer(This,bstrPackagePath,bstrServerName,bLoadNeutral,pEvents,ppPackage)	\
    ( (This)->lpVtbl -> LoadFromDtsServer(This,bstrPackagePath,bstrServerName,bLoadNeutral,pEvents,ppPackage) ) 

#define IDTSApplication100_ExistsOnDtsServer(This,bstrPackagePath,bstrServerName,pbExists)	\
    ( (This)->lpVtbl -> ExistsOnDtsServer(This,bstrPackagePath,bstrServerName,pbExists) ) 

#define IDTSApplication100_GetDtsServerPackageInfos(This,bstrPackageFolder,bstrServerName,ppRetVal)	\
    ( (This)->lpVtbl -> GetDtsServerPackageInfos(This,bstrPackageFolder,bstrServerName,ppRetVal) ) 

#define IDTSApplication100_GetDtsServerRoles(This,bstrFolderPath,bstrServerName,ppRetVal)	\
    ( (This)->lpVtbl -> GetDtsServerRoles(This,bstrFolderPath,bstrServerName,ppRetVal) ) 

#define IDTSApplication100_GetPackageInfos2(This,bstrPackageFolder,vConnectionObject,ppRetVal)	\
    ( (This)->lpVtbl -> GetPackageInfos2(This,bstrPackageFolder,vConnectionObject,ppRetVal) ) 

#define IDTSApplication100_LoadFromSQLServer2(This,bstrPackagePath,vConnectionObject,bLoadNeutral,pEvents,ppPackage)	\
    ( (This)->lpVtbl -> LoadFromSQLServer2(This,bstrPackagePath,vConnectionObject,bLoadNeutral,pEvents,ppPackage) ) 

#define IDTSApplication100_SetPackageRoles(This,bstrServerName,bstrPackagePath,bstrReaderRole,bstrWriterRole)	\
    ( (This)->lpVtbl -> SetPackageRoles(This,bstrServerName,bstrPackagePath,bstrReaderRole,bstrWriterRole) ) 

#define IDTSApplication100_GetPackageRoles(This,bstrServerName,bstrPackagePath,pbstrReaderRole,pbstrWriterRole)	\
    ( (This)->lpVtbl -> GetPackageRoles(This,bstrServerName,bstrPackagePath,pbstrReaderRole,pbstrWriterRole) ) 

#define IDTSApplication100_GetServerVersionEx(This,bstrServerName,pdwEditionID,peSsisEditionID,pbstrProductVersion,pbstrProductLevel)	\
    ( (This)->lpVtbl -> GetServerVersionEx(This,bstrServerName,pdwEditionID,peSsisEditionID,pbstrProductVersion,pbstrProductLevel) ) 

#define IDTSApplication100_get_PackageUpgradeOptions(This,pPackageUpgradeOptions)	\
    ( (This)->lpVtbl -> get_PackageUpgradeOptions(This,pPackageUpgradeOptions) ) 

#define IDTSApplication100_put_PackageUpgradeOptions(This,packageUpgradeOptions)	\
    ( (This)->lpVtbl -> put_PackageUpgradeOptions(This,packageUpgradeOptions) ) 

#define IDTSApplication100_OpenProject(This,bstrProjectFileName,pEvents,ppProject)	\
    ( (This)->lpVtbl -> OpenProject(This,bstrProjectFileName,pEvents,ppProject) ) 

#define IDTSApplication100_CloseProject(This,pProject)	\
    ( (This)->lpVtbl -> CloseProject(This,pProject) ) 

#define IDTSApplication100_put_ProjectPassword(This,bstrProjectPassword)	\
    ( (This)->lpVtbl -> put_ProjectPassword(This,bstrProjectPassword) ) 

#define IDTSApplication100_CreateSsisServerExecution(This,bstrServerName,bstrPackagePath,bstrReferenceId,bUse32BitRuntime,ppServerExecution)	\
    ( (This)->lpVtbl -> CreateSsisServerExecution(This,bstrServerName,bstrPackagePath,bstrReferenceId,bUse32BitRuntime,ppServerExecution) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSApplication100_INTERFACE_DEFINED__ */


#ifndef __IDTSBreakpointManager100_INTERFACE_DEFINED__
#define __IDTSBreakpointManager100_INTERFACE_DEFINED__

/* interface IDTSBreakpointManager100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSBreakpointManager100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A76BBADE-B647-481A-AC8E-C454CF8EA7D6")
    IDTSBreakpointManager100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateBreakpointTarget( 
            /* [in] */ int breakpointID,
            /* [in] */ BSTR description,
            /* [retval][out] */ IDTSBreakpointTarget100 **ppBreakpoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveBreakpointTarget( 
            /* [in] */ int breakpointID) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsBreakpointTargetEnabled( 
            /* [in] */ int breakpointID,
            /* [retval][out] */ VARIANT_BOOL *pIsEnabled) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetBreakpointTarget( 
            /* [in] */ int breakpointID,
            /* [retval][out] */ IDTSBreakpointTarget100 **ppBreakpoint) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClearBreakpointTargets( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSBreakpointManager100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSBreakpointManager100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSBreakpointManager100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSBreakpointManager100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateBreakpointTarget )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ int breakpointID,
            /* [in] */ BSTR description,
            /* [retval][out] */ IDTSBreakpointTarget100 **ppBreakpoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *RemoveBreakpointTarget )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ int breakpointID);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *IsBreakpointTargetEnabled )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ int breakpointID,
            /* [retval][out] */ VARIANT_BOOL *pIsEnabled);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetBreakpointTarget )( 
            IDTSBreakpointManager100 * This,
            /* [in] */ int breakpointID,
            /* [retval][out] */ IDTSBreakpointTarget100 **ppBreakpoint);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClearBreakpointTargets )( 
            IDTSBreakpointManager100 * This);
        
        END_INTERFACE
    } IDTSBreakpointManager100Vtbl;

    interface IDTSBreakpointManager100
    {
        CONST_VTBL struct IDTSBreakpointManager100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSBreakpointManager100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSBreakpointManager100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSBreakpointManager100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSBreakpointManager100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSBreakpointManager100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSBreakpointManager100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSBreakpointManager100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSBreakpointManager100_CreateBreakpointTarget(This,breakpointID,description,ppBreakpoint)	\
    ( (This)->lpVtbl -> CreateBreakpointTarget(This,breakpointID,description,ppBreakpoint) ) 

#define IDTSBreakpointManager100_RemoveBreakpointTarget(This,breakpointID)	\
    ( (This)->lpVtbl -> RemoveBreakpointTarget(This,breakpointID) ) 

#define IDTSBreakpointManager100_IsBreakpointTargetEnabled(This,breakpointID,pIsEnabled)	\
    ( (This)->lpVtbl -> IsBreakpointTargetEnabled(This,breakpointID,pIsEnabled) ) 

#define IDTSBreakpointManager100_GetBreakpointTarget(This,breakpointID,ppBreakpoint)	\
    ( (This)->lpVtbl -> GetBreakpointTarget(This,breakpointID,ppBreakpoint) ) 

#define IDTSBreakpointManager100_ClearBreakpointTargets(This)	\
    ( (This)->lpVtbl -> ClearBreakpointTargets(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSBreakpointManager100_INTERFACE_DEFINED__ */


#ifndef __IDTSSuspend100_INTERFACE_DEFINED__
#define __IDTSSuspend100_INTERFACE_DEFINED__

/* interface IDTSSuspend100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSSuspend100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2BAF82F9-01BC-4566-9B27-2C79B9006729")
    IDTSSuspend100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SuspendExecution( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResumeExecution( void) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_SuspendRequired( 
            /* [retval][out] */ VARIANT_BOOL *pSuspendRequired) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_SuspendRequired( 
            /* [in] */ VARIANT_BOOL suspendRequired) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSSuspend100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSSuspend100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSSuspend100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSSuspend100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSSuspend100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSSuspend100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSSuspend100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSSuspend100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SuspendExecution )( 
            IDTSSuspend100 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResumeExecution )( 
            IDTSSuspend100 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuspendRequired )( 
            IDTSSuspend100 * This,
            /* [retval][out] */ VARIANT_BOOL *pSuspendRequired);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuspendRequired )( 
            IDTSSuspend100 * This,
            /* [in] */ VARIANT_BOOL suspendRequired);
        
        END_INTERFACE
    } IDTSSuspend100Vtbl;

    interface IDTSSuspend100
    {
        CONST_VTBL struct IDTSSuspend100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSSuspend100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSSuspend100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSSuspend100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSSuspend100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSSuspend100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSSuspend100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSSuspend100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSSuspend100_SuspendExecution(This)	\
    ( (This)->lpVtbl -> SuspendExecution(This) ) 

#define IDTSSuspend100_ResumeExecution(This)	\
    ( (This)->lpVtbl -> ResumeExecution(This) ) 

#define IDTSSuspend100_get_SuspendRequired(This,pSuspendRequired)	\
    ( (This)->lpVtbl -> get_SuspendRequired(This,pSuspendRequired) ) 

#define IDTSSuspend100_put_SuspendRequired(This,suspendRequired)	\
    ( (This)->lpVtbl -> put_SuspendRequired(This,suspendRequired) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSSuspend100_INTERFACE_DEFINED__ */


#ifndef __IDTSBreakpointSite100_INTERFACE_DEFINED__
#define __IDTSBreakpointSite100_INTERFACE_DEFINED__

/* interface IDTSBreakpointSite100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSBreakpointSite100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("974C4A9A-C2B0-4390-AE6C-B8BD64BF795B")
    IDTSBreakpointSite100 : public IDTSSuspend100
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AcceptBreakpointManager( 
            /* [in] */ IDTSBreakpointManager100 *pBreakpointManager) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DebugMode( 
            /* [retval][out] */ VARIANT_BOOL *pIsInDebugMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DebugMode( 
            /* [in] */ VARIANT_BOOL isInDebugMode) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSBreakpointSite100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSBreakpointSite100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSBreakpointSite100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSBreakpointSite100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SuspendExecution )( 
            IDTSBreakpointSite100 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResumeExecution )( 
            IDTSBreakpointSite100 * This);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_SuspendRequired )( 
            IDTSBreakpointSite100 * This,
            /* [retval][out] */ VARIANT_BOOL *pSuspendRequired);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_SuspendRequired )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ VARIANT_BOOL suspendRequired);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *AcceptBreakpointManager )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ IDTSBreakpointManager100 *pBreakpointManager);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DebugMode )( 
            IDTSBreakpointSite100 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInDebugMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DebugMode )( 
            IDTSBreakpointSite100 * This,
            /* [in] */ VARIANT_BOOL isInDebugMode);
        
        END_INTERFACE
    } IDTSBreakpointSite100Vtbl;

    interface IDTSBreakpointSite100
    {
        CONST_VTBL struct IDTSBreakpointSite100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSBreakpointSite100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSBreakpointSite100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSBreakpointSite100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSBreakpointSite100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSBreakpointSite100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSBreakpointSite100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSBreakpointSite100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSBreakpointSite100_SuspendExecution(This)	\
    ( (This)->lpVtbl -> SuspendExecution(This) ) 

#define IDTSBreakpointSite100_ResumeExecution(This)	\
    ( (This)->lpVtbl -> ResumeExecution(This) ) 

#define IDTSBreakpointSite100_get_SuspendRequired(This,pSuspendRequired)	\
    ( (This)->lpVtbl -> get_SuspendRequired(This,pSuspendRequired) ) 

#define IDTSBreakpointSite100_put_SuspendRequired(This,suspendRequired)	\
    ( (This)->lpVtbl -> put_SuspendRequired(This,suspendRequired) ) 


#define IDTSBreakpointSite100_AcceptBreakpointManager(This,pBreakpointManager)	\
    ( (This)->lpVtbl -> AcceptBreakpointManager(This,pBreakpointManager) ) 

#define IDTSBreakpointSite100_get_DebugMode(This,pIsInDebugMode)	\
    ( (This)->lpVtbl -> get_DebugMode(This,pIsInDebugMode) ) 

#define IDTSBreakpointSite100_put_DebugMode(This,isInDebugMode)	\
    ( (This)->lpVtbl -> put_DebugMode(This,isInDebugMode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSBreakpointSite100_INTERFACE_DEFINED__ */


#ifndef __IDTSBreakpointTarget100_INTERFACE_DEFINED__
#define __IDTSBreakpointTarget100_INTERFACE_DEFINED__

/* interface IDTSBreakpointTarget100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSBreakpointTarget100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("45D02A18-36D8-4D9F-BD6C-A92A0AC577F8")
    IDTSBreakpointTarget100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Owner( 
            /* [retval][out] */ IDTSBreakpointSite100 **ppBreakpointSite) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Description( 
            /* [retval][out] */ BSTR *pDescription) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Enabled( 
            /* [retval][out] */ VARIANT_BOOL *pIsEnabled) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Enabled( 
            /* [in] */ VARIANT_BOOL isEnabled) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HitCount( 
            /* [retval][out] */ long *pHitCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ID( 
            /* [retval][out] */ long *pID) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HitTarget( 
            /* [retval][out] */ long *pHitTarget) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HitTarget( 
            /* [in] */ long hitTarget) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_HitTest( 
            /* [retval][out] */ DTSBreakpointHitTest *pHitTest) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_HitTest( 
            /* [in] */ DTSBreakpointHitTest hitTest) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_BreakOnExpressionChange( 
            /* [retval][out] */ VARIANT_BOOL *pbBreak) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_BreakOnExpressionChange( 
            /* [in] */ VARIANT_BOOL bBreak) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ResetHitCount( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSBreakpointTarget100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSBreakpointTarget100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSBreakpointTarget100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSBreakpointTarget100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Owner )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ IDTSBreakpointSite100 **ppBreakpointSite);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Description )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ BSTR *pDescription);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Enabled )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsEnabled);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Enabled )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ VARIANT_BOOL isEnabled);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HitCount )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ long *pHitCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ID )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ long *pID);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HitTarget )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ long *pHitTarget);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HitTarget )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ long hitTarget);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_HitTest )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ DTSBreakpointHitTest *pHitTest);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_HitTest )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ DTSBreakpointHitTest hitTest);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BreakOnExpressionChange )( 
            IDTSBreakpointTarget100 * This,
            /* [retval][out] */ VARIANT_BOOL *pbBreak);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BreakOnExpressionChange )( 
            IDTSBreakpointTarget100 * This,
            /* [in] */ VARIANT_BOOL bBreak);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ResetHitCount )( 
            IDTSBreakpointTarget100 * This);
        
        END_INTERFACE
    } IDTSBreakpointTarget100Vtbl;

    interface IDTSBreakpointTarget100
    {
        CONST_VTBL struct IDTSBreakpointTarget100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSBreakpointTarget100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSBreakpointTarget100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSBreakpointTarget100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSBreakpointTarget100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSBreakpointTarget100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSBreakpointTarget100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSBreakpointTarget100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSBreakpointTarget100_get_Owner(This,ppBreakpointSite)	\
    ( (This)->lpVtbl -> get_Owner(This,ppBreakpointSite) ) 

#define IDTSBreakpointTarget100_get_Description(This,pDescription)	\
    ( (This)->lpVtbl -> get_Description(This,pDescription) ) 

#define IDTSBreakpointTarget100_get_Enabled(This,pIsEnabled)	\
    ( (This)->lpVtbl -> get_Enabled(This,pIsEnabled) ) 

#define IDTSBreakpointTarget100_put_Enabled(This,isEnabled)	\
    ( (This)->lpVtbl -> put_Enabled(This,isEnabled) ) 

#define IDTSBreakpointTarget100_get_HitCount(This,pHitCount)	\
    ( (This)->lpVtbl -> get_HitCount(This,pHitCount) ) 

#define IDTSBreakpointTarget100_get_ID(This,pID)	\
    ( (This)->lpVtbl -> get_ID(This,pID) ) 

#define IDTSBreakpointTarget100_get_HitTarget(This,pHitTarget)	\
    ( (This)->lpVtbl -> get_HitTarget(This,pHitTarget) ) 

#define IDTSBreakpointTarget100_put_HitTarget(This,hitTarget)	\
    ( (This)->lpVtbl -> put_HitTarget(This,hitTarget) ) 

#define IDTSBreakpointTarget100_get_HitTest(This,pHitTest)	\
    ( (This)->lpVtbl -> get_HitTest(This,pHitTest) ) 

#define IDTSBreakpointTarget100_put_HitTest(This,hitTest)	\
    ( (This)->lpVtbl -> put_HitTest(This,hitTest) ) 

#define IDTSBreakpointTarget100_get_BreakOnExpressionChange(This,pbBreak)	\
    ( (This)->lpVtbl -> get_BreakOnExpressionChange(This,pbBreak) ) 

#define IDTSBreakpointTarget100_put_BreakOnExpressionChange(This,bBreak)	\
    ( (This)->lpVtbl -> put_BreakOnExpressionChange(This,bBreak) ) 

#define IDTSBreakpointTarget100_ResetHitCount(This)	\
    ( (This)->lpVtbl -> ResetHitCount(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSBreakpointTarget100_INTERFACE_DEFINED__ */


#ifndef __IDTSBreakpointTargets100_INTERFACE_DEFINED__
#define __IDTSBreakpointTargets100_INTERFACE_DEFINED__

/* interface IDTSBreakpointTargets100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSBreakpointTargets100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05D32F5E-45A2-4B05-8DF3-F9FE5D695DCE")
    IDTSBreakpointTargets100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSBreakpointTarget100 **ppBreakpointTarget) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSBreakpointTargets100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSBreakpointTargets100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSBreakpointTargets100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSBreakpointTargets100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSBreakpointTargets100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSBreakpointTargets100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSBreakpointTargets100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSBreakpointTargets100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSBreakpointTargets100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSBreakpointTarget100 **ppBreakpointTarget);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSBreakpointTargets100 * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSBreakpointTargets100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSBreakpointTargets100Vtbl;

    interface IDTSBreakpointTargets100
    {
        CONST_VTBL struct IDTSBreakpointTargets100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSBreakpointTargets100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSBreakpointTargets100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSBreakpointTargets100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSBreakpointTargets100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSBreakpointTargets100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSBreakpointTargets100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSBreakpointTargets100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSBreakpointTargets100_get_Item(This,Index,ppBreakpointTarget)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppBreakpointTarget) ) 

#define IDTSBreakpointTargets100_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IDTSBreakpointTargets100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSBreakpointTargets100_INTERFACE_DEFINED__ */


#ifndef __IDTSComponentPersist100_INTERFACE_DEFINED__
#define __IDTSComponentPersist100_INTERFACE_DEFINED__

/* interface IDTSComponentPersist100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSComponentPersist100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("24E6EDC0-2DED-4375-AF97-969C6C50F46D")
    IDTSComponentPersist100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadFromXML( 
            /* [in] */ IDispatch *pDOMElement,
            IDTSInfoEvents100 *pEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToXML( 
            /* [in] */ IDispatch *pDOMDocument,
            IDTSInfoEvents100 *pEvents) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSComponentPersist100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSComponentPersist100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSComponentPersist100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSComponentPersist100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSComponentPersist100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSComponentPersist100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSComponentPersist100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSComponentPersist100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadFromXML )( 
            IDTSComponentPersist100 * This,
            /* [in] */ IDispatch *pDOMElement,
            IDTSInfoEvents100 *pEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToXML )( 
            IDTSComponentPersist100 * This,
            /* [in] */ IDispatch *pDOMDocument,
            IDTSInfoEvents100 *pEvents);
        
        END_INTERFACE
    } IDTSComponentPersist100Vtbl;

    interface IDTSComponentPersist100
    {
        CONST_VTBL struct IDTSComponentPersist100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSComponentPersist100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSComponentPersist100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSComponentPersist100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSComponentPersist100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSComponentPersist100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSComponentPersist100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSComponentPersist100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSComponentPersist100_LoadFromXML(This,pDOMElement,pEvents)	\
    ( (This)->lpVtbl -> LoadFromXML(This,pDOMElement,pEvents) ) 

#define IDTSComponentPersist100_SaveToXML(This,pDOMDocument,pEvents)	\
    ( (This)->lpVtbl -> SaveToXML(This,pDOMDocument,pEvents) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSComponentPersist100_INTERFACE_DEFINED__ */


#ifndef __IDTSExecutionMetrics100_INTERFACE_DEFINED__
#define __IDTSExecutionMetrics100_INTERFACE_DEFINED__

/* interface IDTSExecutionMetrics100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSExecutionMetrics100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AA6FB6D5-889B-4718-A9C7-2962B8F02296")
    IDTSExecutionMetrics100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StartTime( 
            /* [retval][out] */ DATE *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_StopTime( 
            /* [retval][out] */ DATE *RetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionDuration( 
            /* [retval][out] */ LONG *RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSExecutionMetrics100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSExecutionMetrics100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSExecutionMetrics100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSExecutionMetrics100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSExecutionMetrics100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSExecutionMetrics100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSExecutionMetrics100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSExecutionMetrics100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StartTime )( 
            IDTSExecutionMetrics100 * This,
            /* [retval][out] */ DATE *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_StopTime )( 
            IDTSExecutionMetrics100 * This,
            /* [retval][out] */ DATE *RetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionDuration )( 
            IDTSExecutionMetrics100 * This,
            /* [retval][out] */ LONG *RetVal);
        
        END_INTERFACE
    } IDTSExecutionMetrics100Vtbl;

    interface IDTSExecutionMetrics100
    {
        CONST_VTBL struct IDTSExecutionMetrics100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSExecutionMetrics100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSExecutionMetrics100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSExecutionMetrics100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSExecutionMetrics100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSExecutionMetrics100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSExecutionMetrics100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSExecutionMetrics100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSExecutionMetrics100_get_StartTime(This,RetVal)	\
    ( (This)->lpVtbl -> get_StartTime(This,RetVal) ) 

#define IDTSExecutionMetrics100_get_StopTime(This,RetVal)	\
    ( (This)->lpVtbl -> get_StopTime(This,RetVal) ) 

#define IDTSExecutionMetrics100_get_ExecutionDuration(This,RetVal)	\
    ( (This)->lpVtbl -> get_ExecutionDuration(This,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSExecutionMetrics100_INTERFACE_DEFINED__ */


#ifndef __IDTSEventHandler100_INTERFACE_DEFINED__
#define __IDTSEventHandler100_INTERFACE_DEFINED__

/* interface IDTSEventHandler100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEventHandler100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DAA76123-1CAD-41E5-8721-FAE9EC979CBE")
    IDTSEventHandler100 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEventHandler100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEventHandler100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEventHandler100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEventHandler100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEventHandler100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEventHandler100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEventHandler100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEventHandler100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } IDTSEventHandler100Vtbl;

    interface IDTSEventHandler100
    {
        CONST_VTBL struct IDTSEventHandler100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEventHandler100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEventHandler100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEventHandler100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEventHandler100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEventHandler100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEventHandler100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEventHandler100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEventHandler100_INTERFACE_DEFINED__ */


#ifndef __IDTSHttpClientConnection100_INTERFACE_DEFINED__
#define __IDTSHttpClientConnection100_INTERFACE_DEFINED__

/* interface IDTSHttpClientConnection100 */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSHttpClientConnection100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04104C95-0625-4130-9692-105CA1354AB3")
    IDTSHttpClientConnection100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerURL( 
            /* [retval][out] */ BSTR *pServerURL) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerURL( 
            /* [in] */ BSTR serverURL) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseServerCredentials( 
            /* [retval][out] */ VARIANT_BOOL *pUseServerCredentials) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseServerCredentials( 
            /* [in] */ VARIANT_BOOL useServerCredentials) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerUserName( 
            /* [retval][out] */ BSTR *pServerUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerUserName( 
            /* [in] */ BSTR serverUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerPassword( 
            /* [in] */ BSTR serverPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerDomain( 
            /* [retval][out] */ BSTR *pServerDomain) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerDomain( 
            /* [in] */ BSTR serverDomain) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseProxy( 
            /* [retval][out] */ VARIANT_BOOL *pUseProxy) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseProxy( 
            /* [in] */ VARIANT_BOOL useProxy) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyURL( 
            /* [retval][out] */ BSTR *pProxyURL) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyURL( 
            /* [in] */ BSTR proxyURL) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_BypassProxyOnLocal( 
            /* [retval][out] */ VARIANT_BOOL *pBypassProxyOnLocal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_BypassProxyOnLocal( 
            /* [in] */ VARIANT_BOOL bypassProxyOnLocal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyUserName( 
            /* [retval][out] */ BSTR *pProxyUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyUserName( 
            /* [in] */ BSTR proxyUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyPassword( 
            /* [in] */ BSTR proxyPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyDomain( 
            /* [retval][out] */ BSTR *pProxyDomain) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyDomain( 
            /* [in] */ BSTR proxyDomain) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Timeout( 
            /* [retval][out] */ int *pTimeout) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Timeout( 
            /* [in] */ int timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyBypassList( 
            /* [retval][out] */ SAFEARRAY * *pProxyBypassList) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyBypassList( 
            /* [in] */ SAFEARRAY * proxyBypassList) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Certificate( 
            /* [retval][out] */ SAFEARRAY * *pCertificate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Certificate( 
            /* [in] */ SAFEARRAY * certificate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseProxyCredentials( 
            /* [retval][out] */ VARIANT_BOOL *pUseProxyCredentials) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseProxyCredentials( 
            /* [in] */ VARIANT_BOOL useProxyCredentials) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CertificateIdentifier( 
            /* [retval][out] */ BSTR *pCertificateIdentifier) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CertificateIdentifier( 
            /* [in] */ BSTR certificateIdentifier) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DownloadFile( 
            /* [in] */ BSTR fileName,
            /* [in] */ VARIANT_BOOL vbOverwriteDestination) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DownloadData( 
            /* [retval][out] */ SAFEARRAY * *ppData) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE OpenRead( 
            /* [retval][out] */ IStream **ppFileStream) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseSecureConnection( 
            /* [retval][out] */ VARIANT_BOOL *pUseSecureConnection) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseSecureConnection( 
            /* [in] */ VARIANT_BOOL useSecureConnection) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChunkSize( 
            /* [retval][out] */ int *pChunkSize) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ChunkSize( 
            /* [in] */ int chunkSize) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ShowCertificateDialog( 
            /* [in] */ LONGLONG hWnd) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ IUnknown **punkClone) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetServerPassword( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProxyPassword( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSHttpClientConnection100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSHttpClientConnection100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSHttpClientConnection100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSHttpClientConnection100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerURL )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pServerURL);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerURL )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR serverURL);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseServerCredentials )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseServerCredentials);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseServerCredentials )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ VARIANT_BOOL useServerCredentials);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerUserName )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pServerUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerUserName )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR serverUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerPassword )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR serverPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerDomain )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pServerDomain);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerDomain )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR serverDomain);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxy )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseProxy);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxy )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ VARIANT_BOOL useProxy);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyURL )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pProxyURL);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyURL )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR proxyURL);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BypassProxyOnLocal )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *pBypassProxyOnLocal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BypassProxyOnLocal )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ VARIANT_BOOL bypassProxyOnLocal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pProxyUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR proxyUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR proxyPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyDomain )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pProxyDomain);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyDomain )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR proxyDomain);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Timeout )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ int *pTimeout);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Timeout )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ int timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyBypassList )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ SAFEARRAY * *pProxyBypassList);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyBypassList )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ SAFEARRAY * proxyBypassList);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Certificate )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ SAFEARRAY * *pCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Certificate )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ SAFEARRAY * certificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyCredentials )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseProxyCredentials);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyCredentials )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ VARIANT_BOOL useProxyCredentials);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CertificateIdentifier )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *pCertificateIdentifier);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CertificateIdentifier )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR certificateIdentifier);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DownloadFile )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ BSTR fileName,
            /* [in] */ VARIANT_BOOL vbOverwriteDestination);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DownloadData )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ SAFEARRAY * *ppData);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *OpenRead )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ IStream **ppFileStream);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseSecureConnection )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseSecureConnection);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseSecureConnection )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ VARIANT_BOOL useSecureConnection);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChunkSize )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ int *pChunkSize);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChunkSize )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ int chunkSize);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ShowCertificateDialog )( 
            IDTSHttpClientConnection100 * This,
            /* [in] */ LONGLONG hWnd);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Clone )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ IUnknown **punkClone);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetServerPassword )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetProxyPassword )( 
            IDTSHttpClientConnection100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        END_INTERFACE
    } IDTSHttpClientConnection100Vtbl;

    interface IDTSHttpClientConnection100
    {
        CONST_VTBL struct IDTSHttpClientConnection100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSHttpClientConnection100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSHttpClientConnection100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSHttpClientConnection100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSHttpClientConnection100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSHttpClientConnection100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSHttpClientConnection100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSHttpClientConnection100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSHttpClientConnection100_get_ServerURL(This,pServerURL)	\
    ( (This)->lpVtbl -> get_ServerURL(This,pServerURL) ) 

#define IDTSHttpClientConnection100_put_ServerURL(This,serverURL)	\
    ( (This)->lpVtbl -> put_ServerURL(This,serverURL) ) 

#define IDTSHttpClientConnection100_get_UseServerCredentials(This,pUseServerCredentials)	\
    ( (This)->lpVtbl -> get_UseServerCredentials(This,pUseServerCredentials) ) 

#define IDTSHttpClientConnection100_put_UseServerCredentials(This,useServerCredentials)	\
    ( (This)->lpVtbl -> put_UseServerCredentials(This,useServerCredentials) ) 

#define IDTSHttpClientConnection100_get_ServerUserName(This,pServerUserName)	\
    ( (This)->lpVtbl -> get_ServerUserName(This,pServerUserName) ) 

#define IDTSHttpClientConnection100_put_ServerUserName(This,serverUserName)	\
    ( (This)->lpVtbl -> put_ServerUserName(This,serverUserName) ) 

#define IDTSHttpClientConnection100_put_ServerPassword(This,serverPassword)	\
    ( (This)->lpVtbl -> put_ServerPassword(This,serverPassword) ) 

#define IDTSHttpClientConnection100_get_ServerDomain(This,pServerDomain)	\
    ( (This)->lpVtbl -> get_ServerDomain(This,pServerDomain) ) 

#define IDTSHttpClientConnection100_put_ServerDomain(This,serverDomain)	\
    ( (This)->lpVtbl -> put_ServerDomain(This,serverDomain) ) 

#define IDTSHttpClientConnection100_get_UseProxy(This,pUseProxy)	\
    ( (This)->lpVtbl -> get_UseProxy(This,pUseProxy) ) 

#define IDTSHttpClientConnection100_put_UseProxy(This,useProxy)	\
    ( (This)->lpVtbl -> put_UseProxy(This,useProxy) ) 

#define IDTSHttpClientConnection100_get_ProxyURL(This,pProxyURL)	\
    ( (This)->lpVtbl -> get_ProxyURL(This,pProxyURL) ) 

#define IDTSHttpClientConnection100_put_ProxyURL(This,proxyURL)	\
    ( (This)->lpVtbl -> put_ProxyURL(This,proxyURL) ) 

#define IDTSHttpClientConnection100_get_BypassProxyOnLocal(This,pBypassProxyOnLocal)	\
    ( (This)->lpVtbl -> get_BypassProxyOnLocal(This,pBypassProxyOnLocal) ) 

#define IDTSHttpClientConnection100_put_BypassProxyOnLocal(This,bypassProxyOnLocal)	\
    ( (This)->lpVtbl -> put_BypassProxyOnLocal(This,bypassProxyOnLocal) ) 

#define IDTSHttpClientConnection100_get_ProxyUserName(This,pProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,pProxyUserName) ) 

#define IDTSHttpClientConnection100_put_ProxyUserName(This,proxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,proxyUserName) ) 

#define IDTSHttpClientConnection100_put_ProxyPassword(This,proxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,proxyPassword) ) 

#define IDTSHttpClientConnection100_get_ProxyDomain(This,pProxyDomain)	\
    ( (This)->lpVtbl -> get_ProxyDomain(This,pProxyDomain) ) 

#define IDTSHttpClientConnection100_put_ProxyDomain(This,proxyDomain)	\
    ( (This)->lpVtbl -> put_ProxyDomain(This,proxyDomain) ) 

#define IDTSHttpClientConnection100_get_Timeout(This,pTimeout)	\
    ( (This)->lpVtbl -> get_Timeout(This,pTimeout) ) 

#define IDTSHttpClientConnection100_put_Timeout(This,timeout)	\
    ( (This)->lpVtbl -> put_Timeout(This,timeout) ) 

#define IDTSHttpClientConnection100_get_ProxyBypassList(This,pProxyBypassList)	\
    ( (This)->lpVtbl -> get_ProxyBypassList(This,pProxyBypassList) ) 

#define IDTSHttpClientConnection100_put_ProxyBypassList(This,proxyBypassList)	\
    ( (This)->lpVtbl -> put_ProxyBypassList(This,proxyBypassList) ) 

#define IDTSHttpClientConnection100_get_Certificate(This,pCertificate)	\
    ( (This)->lpVtbl -> get_Certificate(This,pCertificate) ) 

#define IDTSHttpClientConnection100_put_Certificate(This,certificate)	\
    ( (This)->lpVtbl -> put_Certificate(This,certificate) ) 

#define IDTSHttpClientConnection100_get_UseProxyCredentials(This,pUseProxyCredentials)	\
    ( (This)->lpVtbl -> get_UseProxyCredentials(This,pUseProxyCredentials) ) 

#define IDTSHttpClientConnection100_put_UseProxyCredentials(This,useProxyCredentials)	\
    ( (This)->lpVtbl -> put_UseProxyCredentials(This,useProxyCredentials) ) 

#define IDTSHttpClientConnection100_get_CertificateIdentifier(This,pCertificateIdentifier)	\
    ( (This)->lpVtbl -> get_CertificateIdentifier(This,pCertificateIdentifier) ) 

#define IDTSHttpClientConnection100_put_CertificateIdentifier(This,certificateIdentifier)	\
    ( (This)->lpVtbl -> put_CertificateIdentifier(This,certificateIdentifier) ) 

#define IDTSHttpClientConnection100_DownloadFile(This,fileName,vbOverwriteDestination)	\
    ( (This)->lpVtbl -> DownloadFile(This,fileName,vbOverwriteDestination) ) 

#define IDTSHttpClientConnection100_DownloadData(This,ppData)	\
    ( (This)->lpVtbl -> DownloadData(This,ppData) ) 

#define IDTSHttpClientConnection100_OpenRead(This,ppFileStream)	\
    ( (This)->lpVtbl -> OpenRead(This,ppFileStream) ) 

#define IDTSHttpClientConnection100_get_UseSecureConnection(This,pUseSecureConnection)	\
    ( (This)->lpVtbl -> get_UseSecureConnection(This,pUseSecureConnection) ) 

#define IDTSHttpClientConnection100_put_UseSecureConnection(This,useSecureConnection)	\
    ( (This)->lpVtbl -> put_UseSecureConnection(This,useSecureConnection) ) 

#define IDTSHttpClientConnection100_get_ChunkSize(This,pChunkSize)	\
    ( (This)->lpVtbl -> get_ChunkSize(This,pChunkSize) ) 

#define IDTSHttpClientConnection100_put_ChunkSize(This,chunkSize)	\
    ( (This)->lpVtbl -> put_ChunkSize(This,chunkSize) ) 

#define IDTSHttpClientConnection100_ShowCertificateDialog(This,hWnd)	\
    ( (This)->lpVtbl -> ShowCertificateDialog(This,hWnd) ) 

#define IDTSHttpClientConnection100_Clone(This,punkClone)	\
    ( (This)->lpVtbl -> Clone(This,punkClone) ) 

#define IDTSHttpClientConnection100_GetServerPassword(This,RetVal)	\
    ( (This)->lpVtbl -> GetServerPassword(This,RetVal) ) 

#define IDTSHttpClientConnection100_GetProxyPassword(This,RetVal)	\
    ( (This)->lpVtbl -> GetProxyPassword(This,RetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSHttpClientConnection100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerHttp100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerHttp100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerHttp100 */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerHttp100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("57EB0296-CCDE-4FF0-9F32-804BADD42905")
    IDTSConnectionManagerHttp100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerURL( 
            /* [retval][out] */ BSTR *pServerURL) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerURL( 
            /* [in] */ BSTR serverURL) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseServerCredentials( 
            /* [retval][out] */ VARIANT_BOOL *pUseServerCredentials) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseServerCredentials( 
            /* [in] */ VARIANT_BOOL useServerCredentials) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerUserName( 
            /* [retval][out] */ BSTR *pServerUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerUserName( 
            /* [in] */ BSTR serverUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerPassword( 
            /* [in] */ BSTR serverPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerDomain( 
            /* [retval][out] */ BSTR *pServerDomain) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerDomain( 
            /* [in] */ BSTR serverDomain) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseProxy( 
            /* [retval][out] */ VARIANT_BOOL *pUseProxy) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseProxy( 
            /* [in] */ VARIANT_BOOL useProxy) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyURL( 
            /* [retval][out] */ BSTR *pProxyURL) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyURL( 
            /* [in] */ BSTR proxyURL) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_BypassProxyOnLocal( 
            /* [retval][out] */ VARIANT_BOOL *pBypassProxyOnLocal) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_BypassProxyOnLocal( 
            /* [in] */ VARIANT_BOOL bypassProxyOnLocal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyUserName( 
            /* [retval][out] */ BSTR *pProxyUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyUserName( 
            /* [in] */ BSTR proxyUserName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyPassword( 
            /* [in] */ BSTR proxyPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyDomain( 
            /* [retval][out] */ BSTR *pProxyDomain) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyDomain( 
            /* [in] */ BSTR proxyDomain) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Timeout( 
            /* [retval][out] */ int *pTimeout) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Timeout( 
            /* [in] */ int timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ProxyBypassList( 
            /* [retval][out] */ SAFEARRAY * *pProxyBypassList) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ProxyBypassList( 
            /* [in] */ SAFEARRAY * proxyBypassList) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Certificate( 
            /* [retval][out] */ SAFEARRAY * *pCertificate) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Certificate( 
            /* [in] */ SAFEARRAY * certificate) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseProxyCredentials( 
            /* [retval][out] */ VARIANT_BOOL *pUseProxyCredentials) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseProxyCredentials( 
            /* [in] */ VARIANT_BOOL useProxyCredentials) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CertificateIdentifier( 
            /* [retval][out] */ BSTR *pCertificateIdentifier) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CertificateIdentifier( 
            /* [in] */ BSTR certificateIdentifier) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseSecureConnection( 
            /* [retval][out] */ VARIANT_BOOL *pUseSecureConnection) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseSecureConnection( 
            /* [in] */ VARIANT_BOOL useSecureConnection) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChunkSize( 
            /* [retval][out] */ int *pChunkSize) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ChunkSize( 
            /* [in] */ int chunkSize) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerHttp100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerHttp100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerHttp100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerHttp100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerURL )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pServerURL);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerURL )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR serverURL);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseServerCredentials )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseServerCredentials);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseServerCredentials )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ VARIANT_BOOL useServerCredentials);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerUserName )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pServerUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerUserName )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR serverUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerPassword )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR serverPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerDomain )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pServerDomain);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerDomain )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR serverDomain);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxy )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseProxy);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxy )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ VARIANT_BOOL useProxy);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyURL )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pProxyURL);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyURL )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR proxyURL);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_BypassProxyOnLocal )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ VARIANT_BOOL *pBypassProxyOnLocal);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_BypassProxyOnLocal )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ VARIANT_BOOL bypassProxyOnLocal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pProxyUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR proxyUserName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR proxyPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyDomain )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pProxyDomain);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyDomain )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR proxyDomain);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Timeout )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ int *pTimeout);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Timeout )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ int timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyBypassList )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ SAFEARRAY * *pProxyBypassList);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyBypassList )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ SAFEARRAY * proxyBypassList);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Certificate )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ SAFEARRAY * *pCertificate);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Certificate )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ SAFEARRAY * certificate);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyCredentials )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseProxyCredentials);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyCredentials )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ VARIANT_BOOL useProxyCredentials);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CertificateIdentifier )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ BSTR *pCertificateIdentifier);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CertificateIdentifier )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ BSTR certificateIdentifier);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseSecureConnection )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUseSecureConnection);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseSecureConnection )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ VARIANT_BOOL useSecureConnection);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChunkSize )( 
            IDTSConnectionManagerHttp100 * This,
            /* [retval][out] */ int *pChunkSize);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChunkSize )( 
            IDTSConnectionManagerHttp100 * This,
            /* [in] */ int chunkSize);
        
        END_INTERFACE
    } IDTSConnectionManagerHttp100Vtbl;

    interface IDTSConnectionManagerHttp100
    {
        CONST_VTBL struct IDTSConnectionManagerHttp100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerHttp100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerHttp100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerHttp100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerHttp100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerHttp100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerHttp100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerHttp100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerHttp100_get_ServerURL(This,pServerURL)	\
    ( (This)->lpVtbl -> get_ServerURL(This,pServerURL) ) 

#define IDTSConnectionManagerHttp100_put_ServerURL(This,serverURL)	\
    ( (This)->lpVtbl -> put_ServerURL(This,serverURL) ) 

#define IDTSConnectionManagerHttp100_get_UseServerCredentials(This,pUseServerCredentials)	\
    ( (This)->lpVtbl -> get_UseServerCredentials(This,pUseServerCredentials) ) 

#define IDTSConnectionManagerHttp100_put_UseServerCredentials(This,useServerCredentials)	\
    ( (This)->lpVtbl -> put_UseServerCredentials(This,useServerCredentials) ) 

#define IDTSConnectionManagerHttp100_get_ServerUserName(This,pServerUserName)	\
    ( (This)->lpVtbl -> get_ServerUserName(This,pServerUserName) ) 

#define IDTSConnectionManagerHttp100_put_ServerUserName(This,serverUserName)	\
    ( (This)->lpVtbl -> put_ServerUserName(This,serverUserName) ) 

#define IDTSConnectionManagerHttp100_put_ServerPassword(This,serverPassword)	\
    ( (This)->lpVtbl -> put_ServerPassword(This,serverPassword) ) 

#define IDTSConnectionManagerHttp100_get_ServerDomain(This,pServerDomain)	\
    ( (This)->lpVtbl -> get_ServerDomain(This,pServerDomain) ) 

#define IDTSConnectionManagerHttp100_put_ServerDomain(This,serverDomain)	\
    ( (This)->lpVtbl -> put_ServerDomain(This,serverDomain) ) 

#define IDTSConnectionManagerHttp100_get_UseProxy(This,pUseProxy)	\
    ( (This)->lpVtbl -> get_UseProxy(This,pUseProxy) ) 

#define IDTSConnectionManagerHttp100_put_UseProxy(This,useProxy)	\
    ( (This)->lpVtbl -> put_UseProxy(This,useProxy) ) 

#define IDTSConnectionManagerHttp100_get_ProxyURL(This,pProxyURL)	\
    ( (This)->lpVtbl -> get_ProxyURL(This,pProxyURL) ) 

#define IDTSConnectionManagerHttp100_put_ProxyURL(This,proxyURL)	\
    ( (This)->lpVtbl -> put_ProxyURL(This,proxyURL) ) 

#define IDTSConnectionManagerHttp100_get_BypassProxyOnLocal(This,pBypassProxyOnLocal)	\
    ( (This)->lpVtbl -> get_BypassProxyOnLocal(This,pBypassProxyOnLocal) ) 

#define IDTSConnectionManagerHttp100_put_BypassProxyOnLocal(This,bypassProxyOnLocal)	\
    ( (This)->lpVtbl -> put_BypassProxyOnLocal(This,bypassProxyOnLocal) ) 

#define IDTSConnectionManagerHttp100_get_ProxyUserName(This,pProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,pProxyUserName) ) 

#define IDTSConnectionManagerHttp100_put_ProxyUserName(This,proxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,proxyUserName) ) 

#define IDTSConnectionManagerHttp100_put_ProxyPassword(This,proxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,proxyPassword) ) 

#define IDTSConnectionManagerHttp100_get_ProxyDomain(This,pProxyDomain)	\
    ( (This)->lpVtbl -> get_ProxyDomain(This,pProxyDomain) ) 

#define IDTSConnectionManagerHttp100_put_ProxyDomain(This,proxyDomain)	\
    ( (This)->lpVtbl -> put_ProxyDomain(This,proxyDomain) ) 

#define IDTSConnectionManagerHttp100_get_Timeout(This,pTimeout)	\
    ( (This)->lpVtbl -> get_Timeout(This,pTimeout) ) 

#define IDTSConnectionManagerHttp100_put_Timeout(This,timeout)	\
    ( (This)->lpVtbl -> put_Timeout(This,timeout) ) 

#define IDTSConnectionManagerHttp100_get_ProxyBypassList(This,pProxyBypassList)	\
    ( (This)->lpVtbl -> get_ProxyBypassList(This,pProxyBypassList) ) 

#define IDTSConnectionManagerHttp100_put_ProxyBypassList(This,proxyBypassList)	\
    ( (This)->lpVtbl -> put_ProxyBypassList(This,proxyBypassList) ) 

#define IDTSConnectionManagerHttp100_get_Certificate(This,pCertificate)	\
    ( (This)->lpVtbl -> get_Certificate(This,pCertificate) ) 

#define IDTSConnectionManagerHttp100_put_Certificate(This,certificate)	\
    ( (This)->lpVtbl -> put_Certificate(This,certificate) ) 

#define IDTSConnectionManagerHttp100_get_UseProxyCredentials(This,pUseProxyCredentials)	\
    ( (This)->lpVtbl -> get_UseProxyCredentials(This,pUseProxyCredentials) ) 

#define IDTSConnectionManagerHttp100_put_UseProxyCredentials(This,useProxyCredentials)	\
    ( (This)->lpVtbl -> put_UseProxyCredentials(This,useProxyCredentials) ) 

#define IDTSConnectionManagerHttp100_get_CertificateIdentifier(This,pCertificateIdentifier)	\
    ( (This)->lpVtbl -> get_CertificateIdentifier(This,pCertificateIdentifier) ) 

#define IDTSConnectionManagerHttp100_put_CertificateIdentifier(This,certificateIdentifier)	\
    ( (This)->lpVtbl -> put_CertificateIdentifier(This,certificateIdentifier) ) 

#define IDTSConnectionManagerHttp100_get_UseSecureConnection(This,pUseSecureConnection)	\
    ( (This)->lpVtbl -> get_UseSecureConnection(This,pUseSecureConnection) ) 

#define IDTSConnectionManagerHttp100_put_UseSecureConnection(This,useSecureConnection)	\
    ( (This)->lpVtbl -> put_UseSecureConnection(This,useSecureConnection) ) 

#define IDTSConnectionManagerHttp100_get_ChunkSize(This,pChunkSize)	\
    ( (This)->lpVtbl -> get_ChunkSize(This,pChunkSize) ) 

#define IDTSConnectionManagerHttp100_put_ChunkSize(This,chunkSize)	\
    ( (This)->lpVtbl -> put_ChunkSize(This,chunkSize) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerHttp100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerFtp100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerFtp100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerFtp100 */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerFtp100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A35E05E2-E7A2-40BC-9F7A-A0CB2264B888")
    IDTSConnectionManagerFtp100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerName( 
            /* [retval][out] */ BSTR *pServerName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerName( 
            /* [in] */ BSTR serverName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerPort( 
            /* [retval][out] */ int *pServerPort) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerPort( 
            /* [in] */ int serverPort) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerUsername( 
            /* [retval][out] */ BSTR *pServerUsername) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerUsername( 
            /* [in] */ BSTR serverUsername) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerPassword( 
            /* [in] */ BSTR serverPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TimeOut( 
            /* [retval][out] */ int *pTimeout) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TimeOut( 
            /* [in] */ int timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Retries( 
            /* [retval][out] */ int *pRetries) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Retries( 
            /* [in] */ int retries) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsePassiveMode( 
            /* [retval][out] */ VARIANT_BOOL *pUsePassiveMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UsePassiveMode( 
            /* [in] */ VARIANT_BOOL usePassiveMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChunkSize( 
            /* [retval][out] */ int *pChunkSize) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ChunkSize( 
            /* [in] */ int chunkSize) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerFtp100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerFtp100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerFtp100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerFtp100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerName )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ BSTR *pServerName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerName )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ BSTR serverName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerPort )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ int *pServerPort);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerPort )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ int serverPort);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerUsername )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ BSTR *pServerUsername);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerUsername )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ BSTR serverUsername);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerPassword )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ BSTR serverPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeOut )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ int *pTimeout);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeOut )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ int timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Retries )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ int *pRetries);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Retries )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ int retries);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsePassiveMode )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUsePassiveMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UsePassiveMode )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ VARIANT_BOOL usePassiveMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChunkSize )( 
            IDTSConnectionManagerFtp100 * This,
            /* [retval][out] */ int *pChunkSize);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChunkSize )( 
            IDTSConnectionManagerFtp100 * This,
            /* [in] */ int chunkSize);
        
        END_INTERFACE
    } IDTSConnectionManagerFtp100Vtbl;

    interface IDTSConnectionManagerFtp100
    {
        CONST_VTBL struct IDTSConnectionManagerFtp100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerFtp100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerFtp100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerFtp100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerFtp100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerFtp100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerFtp100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerFtp100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerFtp100_get_ServerName(This,pServerName)	\
    ( (This)->lpVtbl -> get_ServerName(This,pServerName) ) 

#define IDTSConnectionManagerFtp100_put_ServerName(This,serverName)	\
    ( (This)->lpVtbl -> put_ServerName(This,serverName) ) 

#define IDTSConnectionManagerFtp100_get_ServerPort(This,pServerPort)	\
    ( (This)->lpVtbl -> get_ServerPort(This,pServerPort) ) 

#define IDTSConnectionManagerFtp100_put_ServerPort(This,serverPort)	\
    ( (This)->lpVtbl -> put_ServerPort(This,serverPort) ) 

#define IDTSConnectionManagerFtp100_get_ServerUsername(This,pServerUsername)	\
    ( (This)->lpVtbl -> get_ServerUsername(This,pServerUsername) ) 

#define IDTSConnectionManagerFtp100_put_ServerUsername(This,serverUsername)	\
    ( (This)->lpVtbl -> put_ServerUsername(This,serverUsername) ) 

#define IDTSConnectionManagerFtp100_put_ServerPassword(This,serverPassword)	\
    ( (This)->lpVtbl -> put_ServerPassword(This,serverPassword) ) 

#define IDTSConnectionManagerFtp100_get_TimeOut(This,pTimeout)	\
    ( (This)->lpVtbl -> get_TimeOut(This,pTimeout) ) 

#define IDTSConnectionManagerFtp100_put_TimeOut(This,timeout)	\
    ( (This)->lpVtbl -> put_TimeOut(This,timeout) ) 

#define IDTSConnectionManagerFtp100_get_Retries(This,pRetries)	\
    ( (This)->lpVtbl -> get_Retries(This,pRetries) ) 

#define IDTSConnectionManagerFtp100_put_Retries(This,retries)	\
    ( (This)->lpVtbl -> put_Retries(This,retries) ) 

#define IDTSConnectionManagerFtp100_get_UsePassiveMode(This,pUsePassiveMode)	\
    ( (This)->lpVtbl -> get_UsePassiveMode(This,pUsePassiveMode) ) 

#define IDTSConnectionManagerFtp100_put_UsePassiveMode(This,usePassiveMode)	\
    ( (This)->lpVtbl -> put_UsePassiveMode(This,usePassiveMode) ) 

#define IDTSConnectionManagerFtp100_get_ChunkSize(This,pChunkSize)	\
    ( (This)->lpVtbl -> get_ChunkSize(This,pChunkSize) ) 

#define IDTSConnectionManagerFtp100_put_ChunkSize(This,chunkSize)	\
    ( (This)->lpVtbl -> put_ChunkSize(This,chunkSize) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerFtp100_INTERFACE_DEFINED__ */


#ifndef __IDTSFtpClientConnection100_INTERFACE_DEFINED__
#define __IDTSFtpClientConnection100_INTERFACE_DEFINED__

/* interface IDTSFtpClientConnection100 */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSFtpClientConnection100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B8DDF87-DA19-4F28-A3F6-88DD2D4BCBE7")
    IDTSFtpClientConnection100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerName( 
            /* [retval][out] */ BSTR *pServerName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerName( 
            /* [in] */ BSTR serverName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerPort( 
            /* [retval][out] */ int *pServerPort) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerPort( 
            /* [in] */ int serverPort) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ServerUsername( 
            /* [retval][out] */ BSTR *pServerUsername) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerUsername( 
            /* [in] */ BSTR serverUsername) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ServerPassword( 
            /* [in] */ BSTR serverPassword) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_TimeOut( 
            /* [retval][out] */ int *pTimeout) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_TimeOut( 
            /* [in] */ int timeout) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Retries( 
            /* [retval][out] */ int *pRetries) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Retries( 
            /* [in] */ int retries) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UsePassiveMode( 
            /* [retval][out] */ VARIANT_BOOL *pUsePassiveMode) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UsePassiveMode( 
            /* [in] */ VARIANT_BOOL usePassiveMode) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ChunkSize( 
            /* [retval][out] */ int *pChunkSize) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ChunkSize( 
            /* [in] */ int chunkSize) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Connect( 
            /* [retval][out] */ VARIANT_BOOL *bConnected) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateRemoteDirectory( 
            /* [in] */ BSTR remoteDirectoryPath) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteRemoteDirectory( 
            /* [in] */ BSTR remoteDirectoryPath) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetWorkingDirectory( 
            /* [retval][out] */ BSTR *pCurrentDirectory) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE DeleteFiles( 
            /* [in] */ SAFEARRAY * remoteFiles) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ReceiveFiles( 
            /* [in] */ SAFEARRAY * remoteFileNames,
            /* [in] */ BSTR localPath,
            /* [in] */ VARIANT_BOOL overWrite,
            /* [in] */ VARIANT_BOOL transferASCII) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SetWorkingDirectory( 
            /* [in] */ BSTR currentDirectory) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SendFiles( 
            /* [in] */ SAFEARRAY * localFileNames,
            /* [in] */ BSTR remotePath,
            /* [in] */ VARIANT_BOOL overWrite,
            /* [in] */ VARIANT_BOOL transferASCII) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetListing( 
            /* [out] */ SAFEARRAY * *pFolderNames,
            /* [out] */ SAFEARRAY * *pFileNames) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSFtpClientConnection100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSFtpClientConnection100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSFtpClientConnection100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSFtpClientConnection100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerName )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ BSTR *pServerName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerName )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ BSTR serverName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerPort )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ int *pServerPort);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerPort )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ int serverPort);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ServerUsername )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ BSTR *pServerUsername);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerUsername )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ BSTR serverUsername);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ServerPassword )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ BSTR serverPassword);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_TimeOut )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ int *pTimeout);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_TimeOut )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ int timeout);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Retries )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ int *pRetries);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Retries )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ int retries);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsePassiveMode )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *pUsePassiveMode);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UsePassiveMode )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ VARIANT_BOOL usePassiveMode);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ChunkSize )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ int *pChunkSize);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ChunkSize )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ int chunkSize);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Connect )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ VARIANT_BOOL *bConnected);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *CreateRemoteDirectory )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ BSTR remoteDirectoryPath);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteRemoteDirectory )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ BSTR remoteDirectoryPath);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetWorkingDirectory )( 
            IDTSFtpClientConnection100 * This,
            /* [retval][out] */ BSTR *pCurrentDirectory);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *DeleteFiles )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ SAFEARRAY * remoteFiles);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ReceiveFiles )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ SAFEARRAY * remoteFileNames,
            /* [in] */ BSTR localPath,
            /* [in] */ VARIANT_BOOL overWrite,
            /* [in] */ VARIANT_BOOL transferASCII);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SetWorkingDirectory )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ BSTR currentDirectory);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SendFiles )( 
            IDTSFtpClientConnection100 * This,
            /* [in] */ SAFEARRAY * localFileNames,
            /* [in] */ BSTR remotePath,
            /* [in] */ VARIANT_BOOL overWrite,
            /* [in] */ VARIANT_BOOL transferASCII);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IDTSFtpClientConnection100 * This);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetListing )( 
            IDTSFtpClientConnection100 * This,
            /* [out] */ SAFEARRAY * *pFolderNames,
            /* [out] */ SAFEARRAY * *pFileNames);
        
        END_INTERFACE
    } IDTSFtpClientConnection100Vtbl;

    interface IDTSFtpClientConnection100
    {
        CONST_VTBL struct IDTSFtpClientConnection100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSFtpClientConnection100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSFtpClientConnection100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSFtpClientConnection100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSFtpClientConnection100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSFtpClientConnection100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSFtpClientConnection100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSFtpClientConnection100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSFtpClientConnection100_get_ServerName(This,pServerName)	\
    ( (This)->lpVtbl -> get_ServerName(This,pServerName) ) 

#define IDTSFtpClientConnection100_put_ServerName(This,serverName)	\
    ( (This)->lpVtbl -> put_ServerName(This,serverName) ) 

#define IDTSFtpClientConnection100_get_ServerPort(This,pServerPort)	\
    ( (This)->lpVtbl -> get_ServerPort(This,pServerPort) ) 

#define IDTSFtpClientConnection100_put_ServerPort(This,serverPort)	\
    ( (This)->lpVtbl -> put_ServerPort(This,serverPort) ) 

#define IDTSFtpClientConnection100_get_ServerUsername(This,pServerUsername)	\
    ( (This)->lpVtbl -> get_ServerUsername(This,pServerUsername) ) 

#define IDTSFtpClientConnection100_put_ServerUsername(This,serverUsername)	\
    ( (This)->lpVtbl -> put_ServerUsername(This,serverUsername) ) 

#define IDTSFtpClientConnection100_put_ServerPassword(This,serverPassword)	\
    ( (This)->lpVtbl -> put_ServerPassword(This,serverPassword) ) 

#define IDTSFtpClientConnection100_get_TimeOut(This,pTimeout)	\
    ( (This)->lpVtbl -> get_TimeOut(This,pTimeout) ) 

#define IDTSFtpClientConnection100_put_TimeOut(This,timeout)	\
    ( (This)->lpVtbl -> put_TimeOut(This,timeout) ) 

#define IDTSFtpClientConnection100_get_Retries(This,pRetries)	\
    ( (This)->lpVtbl -> get_Retries(This,pRetries) ) 

#define IDTSFtpClientConnection100_put_Retries(This,retries)	\
    ( (This)->lpVtbl -> put_Retries(This,retries) ) 

#define IDTSFtpClientConnection100_get_UsePassiveMode(This,pUsePassiveMode)	\
    ( (This)->lpVtbl -> get_UsePassiveMode(This,pUsePassiveMode) ) 

#define IDTSFtpClientConnection100_put_UsePassiveMode(This,usePassiveMode)	\
    ( (This)->lpVtbl -> put_UsePassiveMode(This,usePassiveMode) ) 

#define IDTSFtpClientConnection100_get_ChunkSize(This,pChunkSize)	\
    ( (This)->lpVtbl -> get_ChunkSize(This,pChunkSize) ) 

#define IDTSFtpClientConnection100_put_ChunkSize(This,chunkSize)	\
    ( (This)->lpVtbl -> put_ChunkSize(This,chunkSize) ) 

#define IDTSFtpClientConnection100_Connect(This,bConnected)	\
    ( (This)->lpVtbl -> Connect(This,bConnected) ) 

#define IDTSFtpClientConnection100_CreateRemoteDirectory(This,remoteDirectoryPath)	\
    ( (This)->lpVtbl -> CreateRemoteDirectory(This,remoteDirectoryPath) ) 

#define IDTSFtpClientConnection100_DeleteRemoteDirectory(This,remoteDirectoryPath)	\
    ( (This)->lpVtbl -> DeleteRemoteDirectory(This,remoteDirectoryPath) ) 

#define IDTSFtpClientConnection100_GetWorkingDirectory(This,pCurrentDirectory)	\
    ( (This)->lpVtbl -> GetWorkingDirectory(This,pCurrentDirectory) ) 

#define IDTSFtpClientConnection100_DeleteFiles(This,remoteFiles)	\
    ( (This)->lpVtbl -> DeleteFiles(This,remoteFiles) ) 

#define IDTSFtpClientConnection100_ReceiveFiles(This,remoteFileNames,localPath,overWrite,transferASCII)	\
    ( (This)->lpVtbl -> ReceiveFiles(This,remoteFileNames,localPath,overWrite,transferASCII) ) 

#define IDTSFtpClientConnection100_SetWorkingDirectory(This,currentDirectory)	\
    ( (This)->lpVtbl -> SetWorkingDirectory(This,currentDirectory) ) 

#define IDTSFtpClientConnection100_SendFiles(This,localFileNames,remotePath,overWrite,transferASCII)	\
    ( (This)->lpVtbl -> SendFiles(This,localFileNames,remotePath,overWrite,transferASCII) ) 

#define IDTSFtpClientConnection100_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define IDTSFtpClientConnection100_GetListing(This,pFolderNames,pFileNames)	\
    ( (This)->lpVtbl -> GetListing(This,pFolderNames,pFileNames) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSFtpClientConnection100_INTERFACE_DEFINED__ */


#ifndef __IDTSPersist100_INTERFACE_DEFINED__
#define __IDTSPersist100_INTERFACE_DEFINED__

/* interface IDTSPersist100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPersist100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2C4C48C-88E4-4A6E-BDA4-AB464A35B2EE")
    IDTSPersist100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveToXML( 
            /* [in] */ IDispatch *pDoc,
            /* [in] */ IDispatch *pNode,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadFromXML( 
            /* [in] */ IDispatch *pNode,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPersist100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPersist100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPersist100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPersist100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPersist100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPersist100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPersist100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPersist100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SaveToXML )( 
            IDTSPersist100 * This,
            /* [in] */ IDispatch *pDoc,
            /* [in] */ IDispatch *pNode,
            /* [in] */ IDTSEvents100 *pEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadFromXML )( 
            IDTSPersist100 * This,
            /* [in] */ IDispatch *pNode,
            /* [in] */ IDTSEvents100 *pEvents);
        
        END_INTERFACE
    } IDTSPersist100Vtbl;

    interface IDTSPersist100
    {
        CONST_VTBL struct IDTSPersist100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPersist100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPersist100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPersist100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPersist100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPersist100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPersist100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPersist100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPersist100_SaveToXML(This,pDoc,pNode,pEvents)	\
    ( (This)->lpVtbl -> SaveToXML(This,pDoc,pNode,pEvents) ) 

#define IDTSPersist100_LoadFromXML(This,pNode,pEvents)	\
    ( (This)->lpVtbl -> LoadFromXML(This,pNode,pEvents) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPersist100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackagePersist100_INTERFACE_DEFINED__
#define __IDTSPackagePersist100_INTERFACE_DEFINED__

/* interface IDTSPackagePersist100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPackagePersist100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B8D808B-EE1E-4E8F-9F04-DB42058415CF")
    IDTSPackagePersist100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SavePackageToXML( 
            /* [out] */ VARIANT *pvDestination,
            /* [in] */ VARIANT_BOOL vbReturnDOM,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE LoadPackageFromXML( 
            /* [in] */ VARIANT vSource,
            /* [in] */ VARIANT_BOOL vbSourceIsLocation,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ClonePackageToXML( 
            /* [out] */ VARIANT *pvDestination,
            /* [in] */ VARIANT_BOOL vbReturnDOM,
            /* [in] */ IDTSEvents100 *pEvents) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackagePersist100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackagePersist100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackagePersist100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackagePersist100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackagePersist100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackagePersist100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackagePersist100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackagePersist100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *SavePackageToXML )( 
            IDTSPackagePersist100 * This,
            /* [out] */ VARIANT *pvDestination,
            /* [in] */ VARIANT_BOOL vbReturnDOM,
            /* [in] */ IDTSEvents100 *pEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *LoadPackageFromXML )( 
            IDTSPackagePersist100 * This,
            /* [in] */ VARIANT vSource,
            /* [in] */ VARIANT_BOOL vbSourceIsLocation,
            /* [in] */ IDTSEvents100 *pEvents);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *ClonePackageToXML )( 
            IDTSPackagePersist100 * This,
            /* [out] */ VARIANT *pvDestination,
            /* [in] */ VARIANT_BOOL vbReturnDOM,
            /* [in] */ IDTSEvents100 *pEvents);
        
        END_INTERFACE
    } IDTSPackagePersist100Vtbl;

    interface IDTSPackagePersist100
    {
        CONST_VTBL struct IDTSPackagePersist100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackagePersist100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackagePersist100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackagePersist100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackagePersist100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackagePersist100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackagePersist100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackagePersist100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackagePersist100_SavePackageToXML(This,pvDestination,vbReturnDOM,pEvents)	\
    ( (This)->lpVtbl -> SavePackageToXML(This,pvDestination,vbReturnDOM,pEvents) ) 

#define IDTSPackagePersist100_LoadPackageFromXML(This,vSource,vbSourceIsLocation,pEvents)	\
    ( (This)->lpVtbl -> LoadPackageFromXML(This,vSource,vbSourceIsLocation,pEvents) ) 

#define IDTSPackagePersist100_ClonePackageToXML(This,pvDestination,vbReturnDOM,pEvents)	\
    ( (This)->lpVtbl -> ClonePackageToXML(This,pvDestination,vbReturnDOM,pEvents) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackagePersist100_INTERFACE_DEFINED__ */


#ifndef __IDTSObjectReferenceTracker100_INTERFACE_DEFINED__
#define __IDTSObjectReferenceTracker100_INTERFACE_DEFINED__

/* interface IDTSObjectReferenceTracker100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSObjectReferenceTracker100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48E6E2DF-207A-46EC-998C-1273FDF732D8")
    IDTSObjectReferenceTracker100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE AddReference( 
            /* [in] */ BSTR ObjectNameOrID,
            /* [in] */ DTSObjectReferenceType RefType,
            /* [out][in] */ long *RefListID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE RemoveReference( 
            /* [in] */ BSTR ObjectNameOrID,
            /* [in] */ DTSObjectReferenceType RefType,
            /* [out][in] */ long *RefListID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE DestroyList( 
            /* [in] */ long RefListID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetListInfo( 
            /* [in] */ long RefListID,
            /* [in] */ BSTR UsageLocation,
            /* [in] */ BSTR UsageDescription) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSObjectReferenceTracker100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSObjectReferenceTracker100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSObjectReferenceTracker100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSObjectReferenceTracker100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *AddReference )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ BSTR ObjectNameOrID,
            /* [in] */ DTSObjectReferenceType RefType,
            /* [out][in] */ long *RefListID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *RemoveReference )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ BSTR ObjectNameOrID,
            /* [in] */ DTSObjectReferenceType RefType,
            /* [out][in] */ long *RefListID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *DestroyList )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ long RefListID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetListInfo )( 
            IDTSObjectReferenceTracker100 * This,
            /* [in] */ long RefListID,
            /* [in] */ BSTR UsageLocation,
            /* [in] */ BSTR UsageDescription);
        
        END_INTERFACE
    } IDTSObjectReferenceTracker100Vtbl;

    interface IDTSObjectReferenceTracker100
    {
        CONST_VTBL struct IDTSObjectReferenceTracker100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSObjectReferenceTracker100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSObjectReferenceTracker100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSObjectReferenceTracker100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSObjectReferenceTracker100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSObjectReferenceTracker100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSObjectReferenceTracker100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSObjectReferenceTracker100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSObjectReferenceTracker100_AddReference(This,ObjectNameOrID,RefType,RefListID)	\
    ( (This)->lpVtbl -> AddReference(This,ObjectNameOrID,RefType,RefListID) ) 

#define IDTSObjectReferenceTracker100_RemoveReference(This,ObjectNameOrID,RefType,RefListID)	\
    ( (This)->lpVtbl -> RemoveReference(This,ObjectNameOrID,RefType,RefListID) ) 

#define IDTSObjectReferenceTracker100_DestroyList(This,RefListID)	\
    ( (This)->lpVtbl -> DestroyList(This,RefListID) ) 

#define IDTSObjectReferenceTracker100_SetListInfo(This,RefListID,UsageLocation,UsageDescription)	\
    ( (This)->lpVtbl -> SetListInfo(This,RefListID,UsageLocation,UsageDescription) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSObjectReferenceTracker100_INTERFACE_DEFINED__ */


#ifndef __IDTSEnumReferencedObjects100_INTERFACE_DEFINED__
#define __IDTSEnumReferencedObjects100_INTERFACE_DEFINED__

/* interface IDTSEnumReferencedObjects100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSEnumReferencedObjects100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85083BAB-2788-4F45-BA04-820A16EB74E7")
    IDTSEnumReferencedObjects100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Object( 
            /* [retval][out] */ IUnknown **RetVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ReferenceType( 
            /* [retval][out] */ DTSObjectReferenceType *RetVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsageLocation( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UsageDescription( 
            /* [retval][out] */ BSTR *RetVal) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Next( void) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSEnumReferencedObjects100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSEnumReferencedObjects100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSEnumReferencedObjects100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSEnumReferencedObjects100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSEnumReferencedObjects100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSEnumReferencedObjects100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSEnumReferencedObjects100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSEnumReferencedObjects100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Object )( 
            IDTSEnumReferencedObjects100 * This,
            /* [retval][out] */ IUnknown **RetVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ReferenceType )( 
            IDTSEnumReferencedObjects100 * This,
            /* [retval][out] */ DTSObjectReferenceType *RetVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsageLocation )( 
            IDTSEnumReferencedObjects100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UsageDescription )( 
            IDTSEnumReferencedObjects100 * This,
            /* [retval][out] */ BSTR *RetVal);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Next )( 
            IDTSEnumReferencedObjects100 * This);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IDTSEnumReferencedObjects100 * This);
        
        END_INTERFACE
    } IDTSEnumReferencedObjects100Vtbl;

    interface IDTSEnumReferencedObjects100
    {
        CONST_VTBL struct IDTSEnumReferencedObjects100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSEnumReferencedObjects100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSEnumReferencedObjects100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSEnumReferencedObjects100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSEnumReferencedObjects100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSEnumReferencedObjects100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSEnumReferencedObjects100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSEnumReferencedObjects100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSEnumReferencedObjects100_get_Object(This,RetVal)	\
    ( (This)->lpVtbl -> get_Object(This,RetVal) ) 

#define IDTSEnumReferencedObjects100_get_ReferenceType(This,RetVal)	\
    ( (This)->lpVtbl -> get_ReferenceType(This,RetVal) ) 

#define IDTSEnumReferencedObjects100_get_UsageLocation(This,RetVal)	\
    ( (This)->lpVtbl -> get_UsageLocation(This,RetVal) ) 

#define IDTSEnumReferencedObjects100_get_UsageDescription(This,RetVal)	\
    ( (This)->lpVtbl -> get_UsageDescription(This,RetVal) ) 

#define IDTSEnumReferencedObjects100_Next(This)	\
    ( (This)->lpVtbl -> Next(This) ) 

#define IDTSEnumReferencedObjects100_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSEnumReferencedObjects100_INTERFACE_DEFINED__ */


#ifndef __IDTSServerUsageControl100_INTERFACE_DEFINED__
#define __IDTSServerUsageControl100_INTERFACE_DEFINED__

/* interface IDTSServerUsageControl100 */
/* [unique][helpstring][uuid][hidden][dual][object] */ 


EXTERN_C const IID IID_IDTSServerUsageControl100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A5FD88EE-D6C0-4DB5-A2D6-2B3837ACE26D")
    IDTSServerUsageControl100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_UseServerForFeatureEnumeration( 
            VARIANT_BOOL useServer) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSServerUsageControl100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSServerUsageControl100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSServerUsageControl100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSServerUsageControl100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSServerUsageControl100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSServerUsageControl100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSServerUsageControl100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSServerUsageControl100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseServerForFeatureEnumeration )( 
            IDTSServerUsageControl100 * This,
            VARIANT_BOOL useServer);
        
        END_INTERFACE
    } IDTSServerUsageControl100Vtbl;

    interface IDTSServerUsageControl100
    {
        CONST_VTBL struct IDTSServerUsageControl100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSServerUsageControl100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSServerUsageControl100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSServerUsageControl100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSServerUsageControl100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSServerUsageControl100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSServerUsageControl100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSServerUsageControl100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSServerUsageControl100_put_UseServerForFeatureEnumeration(This,useServer)	\
    ( (This)->lpVtbl -> put_UseServerForFeatureEnumeration(This,useServer) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSServerUsageControl100_INTERFACE_DEFINED__ */


#ifndef __IDTSRunningPackage100_INTERFACE_DEFINED__
#define __IDTSRunningPackage100_INTERFACE_DEFINED__

/* interface IDTSRunningPackage100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSRunningPackage100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2628C6F3-4B28-4D7F-8947-C078DEEE5432")
    IDTSRunningPackage100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_InstanceID( 
            /* [retval][out] */ GUID *instID) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_UserName( 
            /* [retval][out] */ BSTR *userName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PackageID( 
            /* [retval][out] */ GUID *packageID) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PackageName( 
            /* [retval][out] */ BSTR *packageName) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_PackageDescription( 
            /* [retval][out] */ BSTR *packageDescription) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionStartTime( 
            /* [retval][out] */ DATE *pStartTime) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ExecutionDuration( 
            /* [retval][out] */ LONG *pExecutionDuration) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSRunningPackage100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSRunningPackage100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSRunningPackage100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSRunningPackage100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSRunningPackage100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSRunningPackage100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSRunningPackage100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSRunningPackage100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_InstanceID )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ GUID *instID);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UserName )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ BSTR *userName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageID )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ GUID *packageID);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageName )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ BSTR *packageName);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_PackageDescription )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ BSTR *packageDescription);
        
        HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IDTSRunningPackage100 * This);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionStartTime )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ DATE *pStartTime);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExecutionDuration )( 
            IDTSRunningPackage100 * This,
            /* [retval][out] */ LONG *pExecutionDuration);
        
        END_INTERFACE
    } IDTSRunningPackage100Vtbl;

    interface IDTSRunningPackage100
    {
        CONST_VTBL struct IDTSRunningPackage100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSRunningPackage100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSRunningPackage100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSRunningPackage100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSRunningPackage100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSRunningPackage100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSRunningPackage100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSRunningPackage100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSRunningPackage100_get_InstanceID(This,instID)	\
    ( (This)->lpVtbl -> get_InstanceID(This,instID) ) 

#define IDTSRunningPackage100_get_UserName(This,userName)	\
    ( (This)->lpVtbl -> get_UserName(This,userName) ) 

#define IDTSRunningPackage100_get_PackageID(This,packageID)	\
    ( (This)->lpVtbl -> get_PackageID(This,packageID) ) 

#define IDTSRunningPackage100_get_PackageName(This,packageName)	\
    ( (This)->lpVtbl -> get_PackageName(This,packageName) ) 

#define IDTSRunningPackage100_get_PackageDescription(This,packageDescription)	\
    ( (This)->lpVtbl -> get_PackageDescription(This,packageDescription) ) 

#define IDTSRunningPackage100_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IDTSRunningPackage100_get_ExecutionStartTime(This,pStartTime)	\
    ( (This)->lpVtbl -> get_ExecutionStartTime(This,pStartTime) ) 

#define IDTSRunningPackage100_get_ExecutionDuration(This,pExecutionDuration)	\
    ( (This)->lpVtbl -> get_ExecutionDuration(This,pExecutionDuration) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSRunningPackage100_INTERFACE_DEFINED__ */


#ifndef __IDTSRunningPackages100_INTERFACE_DEFINED__
#define __IDTSRunningPackages100_INTERFACE_DEFINED__

/* interface IDTSRunningPackages100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSRunningPackages100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E11111B8-745B-4620-9428-12BF297F323B")
    IDTSRunningPackages100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSRunningPackage100 **ppBreakpointTarget) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pCount) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSRunningPackages100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSRunningPackages100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSRunningPackages100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSRunningPackages100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSRunningPackages100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSRunningPackages100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSRunningPackages100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSRunningPackages100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSRunningPackages100 * This,
            /* [in] */ VARIANT Index,
            /* [retval][out] */ IDTSRunningPackage100 **ppBreakpointTarget);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSRunningPackages100 * This,
            /* [retval][out] */ long *pCount);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSRunningPackages100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        END_INTERFACE
    } IDTSRunningPackages100Vtbl;

    interface IDTSRunningPackages100
    {
        CONST_VTBL struct IDTSRunningPackages100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSRunningPackages100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSRunningPackages100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSRunningPackages100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSRunningPackages100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSRunningPackages100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSRunningPackages100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSRunningPackages100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSRunningPackages100_get_Item(This,Index,ppBreakpointTarget)	\
    ( (This)->lpVtbl -> get_Item(This,Index,ppBreakpointTarget) ) 

#define IDTSRunningPackages100_get_Count(This,pCount)	\
    ( (This)->lpVtbl -> get_Count(This,pCount) ) 

#define IDTSRunningPackages100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSRunningPackages100_INTERFACE_DEFINED__ */


#ifndef __IDTSDumpConfiguration100_INTERFACE_DEFINED__
#define __IDTSDumpConfiguration100_INTERFACE_DEFINED__

/* interface IDTSDumpConfiguration100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSDumpConfiguration100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9B314587-DC46-4B74-B9E2-AE79675EDD72")
    IDTSDumpConfiguration100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DumpOnAnyError( 
            /* [retval][out] */ VARIANT_BOOL *pvbEnable) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DumpOnAnyError( 
            /* [in] */ VARIANT_BOOL vbEnable) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_DumpDescriptor( 
            /* [retval][out] */ BSTR *pbstrDescriptor) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_DumpDescriptor( 
            /* [in] */ BSTR bstrDescriptor) = 0;
        
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EnableDump( 
            /* [retval][out] */ VARIANT_BOOL *pvbEnable) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EnableDump( 
            /* [in] */ VARIANT_BOOL vbEnable) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSDumpConfiguration100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSDumpConfiguration100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSDumpConfiguration100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSDumpConfiguration100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DumpOnAnyError )( 
            IDTSDumpConfiguration100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbEnable);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DumpOnAnyError )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ VARIANT_BOOL vbEnable);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DumpDescriptor )( 
            IDTSDumpConfiguration100 * This,
            /* [retval][out] */ BSTR *pbstrDescriptor);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DumpDescriptor )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ BSTR bstrDescriptor);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_EnableDump )( 
            IDTSDumpConfiguration100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbEnable);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_EnableDump )( 
            IDTSDumpConfiguration100 * This,
            /* [in] */ VARIANT_BOOL vbEnable);
        
        END_INTERFACE
    } IDTSDumpConfiguration100Vtbl;

    interface IDTSDumpConfiguration100
    {
        CONST_VTBL struct IDTSDumpConfiguration100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSDumpConfiguration100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSDumpConfiguration100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSDumpConfiguration100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSDumpConfiguration100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSDumpConfiguration100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSDumpConfiguration100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSDumpConfiguration100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSDumpConfiguration100_get_DumpOnAnyError(This,pvbEnable)	\
    ( (This)->lpVtbl -> get_DumpOnAnyError(This,pvbEnable) ) 

#define IDTSDumpConfiguration100_put_DumpOnAnyError(This,vbEnable)	\
    ( (This)->lpVtbl -> put_DumpOnAnyError(This,vbEnable) ) 

#define IDTSDumpConfiguration100_get_DumpDescriptor(This,pbstrDescriptor)	\
    ( (This)->lpVtbl -> get_DumpDescriptor(This,pbstrDescriptor) ) 

#define IDTSDumpConfiguration100_put_DumpDescriptor(This,bstrDescriptor)	\
    ( (This)->lpVtbl -> put_DumpDescriptor(This,bstrDescriptor) ) 

#define IDTSDumpConfiguration100_get_EnableDump(This,pvbEnable)	\
    ( (This)->lpVtbl -> get_EnableDump(This,pvbEnable) ) 

#define IDTSDumpConfiguration100_put_EnableDump(This,vbEnable)	\
    ( (This)->lpVtbl -> put_EnableDump(This,vbEnable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSDumpConfiguration100_INTERFACE_DEFINED__ */


#ifndef __IDTSConfigurationControl100_INTERFACE_DEFINED__
#define __IDTSConfigurationControl100_INTERFACE_DEFINED__

/* interface IDTSConfigurationControl100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConfigurationControl100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6CC45067-8B71-4709-8090-9F6C391C78E7")
    IDTSConfigurationControl100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_IgnoreConfigurationsOnLoad( 
            /* [retval][out] */ VARIANT_BOOL *RetVal) = 0;
        
        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_IgnoreConfigurationsOnLoad( 
            /* [in] */ VARIANT_BOOL NewVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConfigurationControl100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConfigurationControl100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConfigurationControl100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConfigurationControl100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConfigurationControl100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConfigurationControl100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConfigurationControl100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConfigurationControl100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IgnoreConfigurationsOnLoad )( 
            IDTSConfigurationControl100 * This,
            /* [retval][out] */ VARIANT_BOOL *RetVal);
        
        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IgnoreConfigurationsOnLoad )( 
            IDTSConfigurationControl100 * This,
            /* [in] */ VARIANT_BOOL NewVal);
        
        END_INTERFACE
    } IDTSConfigurationControl100Vtbl;

    interface IDTSConfigurationControl100
    {
        CONST_VTBL struct IDTSConfigurationControl100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConfigurationControl100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConfigurationControl100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConfigurationControl100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConfigurationControl100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConfigurationControl100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConfigurationControl100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConfigurationControl100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConfigurationControl100_get_IgnoreConfigurationsOnLoad(This,RetVal)	\
    ( (This)->lpVtbl -> get_IgnoreConfigurationsOnLoad(This,RetVal) ) 

#define IDTSConfigurationControl100_put_IgnoreConfigurationsOnLoad(This,NewVal)	\
    ( (This)->lpVtbl -> put_IgnoreConfigurationsOnLoad(This,NewVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConfigurationControl100_INTERFACE_DEFINED__ */


#ifndef __IDTSPackageInternal100_INTERFACE_DEFINED__
#define __IDTSPackageInternal100_INTERFACE_DEFINED__

/* interface IDTSPackageInternal100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSPackageInternal100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9d1ef4b6-8cef-4c85-8b17-5d3421f16592")
    IDTSPackageInternal100 : public IDispatch
    {
    public:
        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Parameters( 
            /* [retval][out] */ IDTSParameters100 **ppParameters) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SSISExecSuspend( 
            /* [in] */ BSTR CombinedId,
            /* [in] */ long ExecType) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetISServerExecutionID( 
            /* [in] */ long long ISServerExecutionID) = 0;
        
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE SetFlagRunningInOutProcess( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSPackageInternal100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSPackageInternal100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSPackageInternal100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSPackageInternal100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSPackageInternal100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSPackageInternal100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSPackageInternal100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSPackageInternal100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Parameters )( 
            IDTSPackageInternal100 * This,
            /* [retval][out] */ IDTSParameters100 **ppParameters);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SSISExecSuspend )( 
            IDTSPackageInternal100 * This,
            /* [in] */ BSTR CombinedId,
            /* [in] */ long ExecType);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetISServerExecutionID )( 
            IDTSPackageInternal100 * This,
            /* [in] */ long long ISServerExecutionID);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *SetFlagRunningInOutProcess )( 
            IDTSPackageInternal100 * This);
        
        END_INTERFACE
    } IDTSPackageInternal100Vtbl;

    interface IDTSPackageInternal100
    {
        CONST_VTBL struct IDTSPackageInternal100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSPackageInternal100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSPackageInternal100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSPackageInternal100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSPackageInternal100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSPackageInternal100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSPackageInternal100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSPackageInternal100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSPackageInternal100_get_Parameters(This,ppParameters)	\
    ( (This)->lpVtbl -> get_Parameters(This,ppParameters) ) 

#define IDTSPackageInternal100_SSISExecSuspend(This,CombinedId,ExecType)	\
    ( (This)->lpVtbl -> SSISExecSuspend(This,CombinedId,ExecType) ) 

#define IDTSPackageInternal100_SetISServerExecutionID(This,ISServerExecutionID)	\
    ( (This)->lpVtbl -> SetISServerExecutionID(This,ISServerExecutionID) ) 

#define IDTSPackageInternal100_SetFlagRunningInOutProcess(This)	\
    ( (This)->lpVtbl -> SetFlagRunningInOutProcess(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSPackageInternal100_INTERFACE_DEFINED__ */


#ifndef __IDTSVariableCreator100_INTERFACE_DEFINED__
#define __IDTSVariableCreator100_INTERFACE_DEFINED__

/* interface IDTSVariableCreator100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSVariableCreator100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("271FBE00-45B1-4594-89D2-413CD751D0D6")
    IDTSVariableCreator100 : public IDispatch
    {
    public:
        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE CreateVariable( 
            /* [in] */ IDTSParameter100 *pParameter,
            /* [retval][out] */ IDTSVariable100 **ppVariable) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSVariableCreator100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSVariableCreator100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSVariableCreator100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSVariableCreator100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSVariableCreator100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSVariableCreator100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSVariableCreator100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSVariableCreator100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE *CreateVariable )( 
            IDTSVariableCreator100 * This,
            /* [in] */ IDTSParameter100 *pParameter,
            /* [retval][out] */ IDTSVariable100 **ppVariable);
        
        END_INTERFACE
    } IDTSVariableCreator100Vtbl;

    interface IDTSVariableCreator100
    {
        CONST_VTBL struct IDTSVariableCreator100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSVariableCreator100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSVariableCreator100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSVariableCreator100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSVariableCreator100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSVariableCreator100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSVariableCreator100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSVariableCreator100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSVariableCreator100_CreateVariable(This,pParameter,ppVariable)	\
    ( (This)->lpVtbl -> CreateVariable(This,pParameter,ppVariable) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSVariableCreator100_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Package;

#ifdef __cplusplus

class DECLSPEC_UUID("02102D82-3E9A-48AE-8A3F-AC8C01F4A044")
Package;
#endif

EXTERN_C const CLSID CLSID_PackageNeutral;

#ifdef __cplusplus

class DECLSPEC_UUID("B5F5B1CF-7950-436C-B3BD-E193B1F5E5A5")
PackageNeutral;
#endif

EXTERN_C const CLSID CLSID_PackageRemote32;

#ifdef __cplusplus

class DECLSPEC_UUID("54719D66-18CF-463D-A30F-38BB0FD88876")
PackageRemote32;
#endif

EXTERN_C const CLSID CLSID_PackageRemote64;

#ifdef __cplusplus

class DECLSPEC_UUID("87DFB650-A967-47C4-A6C2-85E816880F0F")
PackageRemote64;
#endif

EXTERN_C const CLSID CLSID_TaskCreator32;

#ifdef __cplusplus

class DECLSPEC_UUID("70C1E6E0-BB94-4019-B1B0-50C81BB8D325")
TaskCreator32;
#endif

EXTERN_C const CLSID CLSID_TaskCreator64;

#ifdef __cplusplus

class DECLSPEC_UUID("C5E24379-0902-483B-940B-02B9046A4E0D")
TaskCreator64;
#endif

EXTERN_C const CLSID CLSID_VariableCreator;

#ifdef __cplusplus

class DECLSPEC_UUID("F1BF4047-C718-458D-BD76-DA001AFA77D5")
VariableCreator;
#endif

EXTERN_C const CLSID CLSID_TaskHost;

#ifdef __cplusplus

class DECLSPEC_UUID("1CB3E11A-EC95-477E-8A17-A6F626AFF84B")
TaskHost;
#endif

EXTERN_C const CLSID CLSID_EventHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("E1D9AC82-B789-496E-B5CF-3270EFE2E5A4")
EventHandler;
#endif

EXTERN_C const CLSID CLSID_VariableDispenser;

#ifdef __cplusplus

class DECLSPEC_UUID("C4A65C18-ABF3-4981-BC9A-EB2CF9DC1D7F")
VariableDispenser;
#endif

EXTERN_C const CLSID CLSID_Variable;

#ifdef __cplusplus

class DECLSPEC_UUID("D15993F9-E814-415C-95F2-B404AAB9119D")
Variable;
#endif

EXTERN_C const CLSID CLSID_Parameter;

#ifdef __cplusplus

class DECLSPEC_UUID("49004392-dec1-4e91-b1d0-ce124fa4829d")
Parameter;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerHost;

#ifdef __cplusplus

class DECLSPEC_UUID("58A324F0-5068-4A6A-A7FF-45B7CAECBC20")
ConnectionManagerHost;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerOleDb;

#ifdef __cplusplus

class DECLSPEC_UUID("F3F3005C-C3CB-4C61-B2A9-056035E4D8F2")
ConnectionManagerOleDb;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerOLAP;

#ifdef __cplusplus

class DECLSPEC_UUID("05B2302B-4C20-43FD-92B3-3A067A037436")
ConnectionManagerOLAP;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerOdbc;

#ifdef __cplusplus

class DECLSPEC_UUID("1818FF09-AF4D-4EA8-8C9D-0AB43B5775E5")
ConnectionManagerOdbc;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerAdo;

#ifdef __cplusplus

class DECLSPEC_UUID("FFEDAAC9-D6BD-4E6B-90AB-D4D296B5096A")
ConnectionManagerAdo;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerAdoNet;

#ifdef __cplusplus

class DECLSPEC_UUID("D5353B56-34DA-4C97-AC94-722B91013E89")
ConnectionManagerAdoNet;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerSqlMobile;

#ifdef __cplusplus

class DECLSPEC_UUID("718015B1-3A1D-443C-8DE3-E2FB38E202F3")
ConnectionManagerSqlMobile;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerFile;

#ifdef __cplusplus

class DECLSPEC_UUID("35C9F584-5881-4C0D-BE60-CC357DF0DA71")
ConnectionManagerFile;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerMultiFile;

#ifdef __cplusplus

class DECLSPEC_UUID("24BC3F86-AD7A-4A2D-B55E-A11132D655F4")
ConnectionManagerMultiFile;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerFlatFile;

#ifdef __cplusplus

class DECLSPEC_UUID("27833D52-88A7-43FF-BBB8-993D92BF2054")
ConnectionManagerFlatFile;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerMultiFlatFile;

#ifdef __cplusplus

class DECLSPEC_UUID("4A67FF3E-5F04-499C-BEE1-C65CA3BCC939")
ConnectionManagerMultiFlatFile;
#endif

EXTERN_C const CLSID CLSID_LogProviderHost;

#ifdef __cplusplus

class DECLSPEC_UUID("0586190F-18E7-4A96-844D-85D8120F4DF0")
LogProviderHost;
#endif

EXTERN_C const CLSID CLSID_LogProviderSQLServer;

#ifdef __cplusplus

class DECLSPEC_UUID("7AAEB244-E2A1-4F6A-907F-EB630B08FC11")
LogProviderSQLServer;
#endif

EXTERN_C const CLSID CLSID_LogProviderTextFile;

#ifdef __cplusplus

class DECLSPEC_UUID("B554698F-2465-4191-A16B-6558F598E474")
LogProviderTextFile;
#endif

EXTERN_C const CLSID CLSID_LogProviderXMLFile;

#ifdef __cplusplus

class DECLSPEC_UUID("3E7F2475-46B6-4E93-A6C1-3763504B97D3")
LogProviderXMLFile;
#endif

EXTERN_C const CLSID CLSID_LogProviderEventLog;

#ifdef __cplusplus

class DECLSPEC_UUID("9158C969-ECFE-4310-B5ED-2F28FF23E9A4")
LogProviderEventLog;
#endif

EXTERN_C const CLSID CLSID_LogProviderSQLProfiler;

#ifdef __cplusplus

class DECLSPEC_UUID("16E4D2F0-B3AA-478C-960A-5AEE5D5E4A5F")
LogProviderSQLProfiler;
#endif

EXTERN_C const CLSID CLSID_Application;

#ifdef __cplusplus

class DECLSPEC_UUID("C3EC6BC0-D544-47D5-A0F2-2825E47DBE24")
Application;
#endif

EXTERN_C const CLSID CLSID_Sequence;

#ifdef __cplusplus

class DECLSPEC_UUID("71BC64F3-2225-4231-8339-A6FE16F4A04F")
Sequence;
#endif

EXTERN_C const CLSID CLSID_ForEachLoop;

#ifdef __cplusplus

class DECLSPEC_UUID("DD2400B8-CA4E-44CB-9CAB-2E243F835228")
ForEachLoop;
#endif

EXTERN_C const CLSID CLSID_ForLoop;

#ifdef __cplusplus

class DECLSPEC_UUID("C4F485A2-0CD1-4D6A-A781-CDED435B2249")
ForLoop;
#endif

EXTERN_C const CLSID CLSID_PrecedenceConstraint;

#ifdef __cplusplus

class DECLSPEC_UUID("028CA4EC-E3E8-44A3-92FE-09B894A6D3E5")
PrecedenceConstraint;
#endif

EXTERN_C const CLSID CLSID_ForEachEnumeratorHost;

#ifdef __cplusplus

class DECLSPEC_UUID("84A010DC-8A4E-425C-8935-19C6E0A538A4")
ForEachEnumeratorHost;
#endif

EXTERN_C const CLSID CLSID_ForEachItemEnumerator;

#ifdef __cplusplus

class DECLSPEC_UUID("500A81E3-EDFE-45A9-88DA-2A2AECB19B35")
ForEachItemEnumerator;
#endif

EXTERN_C const CLSID CLSID_ExpressionEvaluator;

#ifdef __cplusplus

class DECLSPEC_UUID("8407F3FE-7F30-4FFC-B34E-F07E9DAF4041")
ExpressionEvaluator;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerHttp;

#ifdef __cplusplus

class DECLSPEC_UUID("A4F38AF2-DB25-4BCA-B0F6-025235B6873B")
ConnectionManagerHttp;
#endif

EXTERN_C const CLSID CLSID_HttpClientConnection100;

#ifdef __cplusplus

class DECLSPEC_UUID("A23157AE-F9B4-4FFC-AD0C-8985B69F4A42")
HttpClientConnection100;
#endif

EXTERN_C const CLSID CLSID_ConnectionManagerFtp;

#ifdef __cplusplus

class DECLSPEC_UUID("D104A621-755C-4B5C-9CD8-42C981868647")
ConnectionManagerFtp;
#endif

EXTERN_C const CLSID CLSID_FTPClientConnection100;

#ifdef __cplusplus

class DECLSPEC_UUID("12C3DEB3-CE00-4F91-A0C9-DE47CC542AB1")
FTPClientConnection100;
#endif

#ifndef __IDTSConnectionManagerExcel100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerExcel100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerExcel100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerExcel100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EB2C7CE0-27C7-4BC9-AF46-303B4BA12BD5")
    IDTSConnectionManagerExcel100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_FirstRowHasColumnName( 
            /* [in] */ VARIANT_BOOL vbFirstRowHasColumnName) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FirstRowHasColumnName( 
            /* [retval][out] */ VARIANT_BOOL *pvbFirstRowHasColumnName) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExcelFilePath( 
            /* [in] */ BSTR bstrExcelFilePath) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExcelFilePath( 
            /* [retval][out] */ BSTR *pbstrExcelFilePath) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_ExcelVersionNumber( 
            /* [in] */ DTSExcelVersion enumExcelVersionNumber) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_ExcelVersionNumber( 
            /* [retval][out] */ DTSExcelVersion *penumExcelVersionNumber) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerExcel100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerExcel100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerExcel100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerExcel100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_FirstRowHasColumnName )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ VARIANT_BOOL vbFirstRowHasColumnName);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_FirstRowHasColumnName )( 
            IDTSConnectionManagerExcel100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbFirstRowHasColumnName);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExcelFilePath )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ BSTR bstrExcelFilePath);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExcelFilePath )( 
            IDTSConnectionManagerExcel100 * This,
            /* [retval][out] */ BSTR *pbstrExcelFilePath);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ExcelVersionNumber )( 
            IDTSConnectionManagerExcel100 * This,
            /* [in] */ DTSExcelVersion enumExcelVersionNumber);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ExcelVersionNumber )( 
            IDTSConnectionManagerExcel100 * This,
            /* [retval][out] */ DTSExcelVersion *penumExcelVersionNumber);
        
        END_INTERFACE
    } IDTSConnectionManagerExcel100Vtbl;

    interface IDTSConnectionManagerExcel100
    {
        CONST_VTBL struct IDTSConnectionManagerExcel100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerExcel100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerExcel100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerExcel100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerExcel100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerExcel100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerExcel100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerExcel100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerExcel100_put_FirstRowHasColumnName(This,vbFirstRowHasColumnName)	\
    ( (This)->lpVtbl -> put_FirstRowHasColumnName(This,vbFirstRowHasColumnName) ) 

#define IDTSConnectionManagerExcel100_get_FirstRowHasColumnName(This,pvbFirstRowHasColumnName)	\
    ( (This)->lpVtbl -> get_FirstRowHasColumnName(This,pvbFirstRowHasColumnName) ) 

#define IDTSConnectionManagerExcel100_put_ExcelFilePath(This,bstrExcelFilePath)	\
    ( (This)->lpVtbl -> put_ExcelFilePath(This,bstrExcelFilePath) ) 

#define IDTSConnectionManagerExcel100_get_ExcelFilePath(This,pbstrExcelFilePath)	\
    ( (This)->lpVtbl -> get_ExcelFilePath(This,pbstrExcelFilePath) ) 

#define IDTSConnectionManagerExcel100_put_ExcelVersionNumber(This,enumExcelVersionNumber)	\
    ( (This)->lpVtbl -> put_ExcelVersionNumber(This,enumExcelVersionNumber) ) 

#define IDTSConnectionManagerExcel100_get_ExcelVersionNumber(This,penumExcelVersionNumber)	\
    ( (This)->lpVtbl -> get_ExcelVersionNumber(This,penumExcelVersionNumber) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerExcel100_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ConnectionManagerExcel;

#ifdef __cplusplus

class DECLSPEC_UUID("16C5E8E5-3B93-45AE-B266-F53A30110591")
ConnectionManagerExcel;
#endif

#ifndef __IDTSConnectionManagerCacheColumn100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerCacheColumn100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerCacheColumn100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerCacheColumn100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1864301A-85CF-46FD-BBFC-6BF058B87E8C")
    IDTSConnectionManagerCacheColumn100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataType( 
            /* [retval][out] */ enum DataType *peDataType) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_DataType( 
            /* [in] */ enum DataType eDataType) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Length( 
            /* [retval][out] */ long *plLength) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Length( 
            /* [in] */ long lLength) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Precision( 
            /* [retval][out] */ long *plPrecision) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Precision( 
            /* [in] */ long lPrecision) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Scale( 
            /* [retval][out] */ long *plScale) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Scale( 
            /* [in] */ long lScale) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_CodePage( 
            /* [retval][out] */ long *plCodePage) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_CodePage( 
            /* [in] */ long lCodePage) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_IndexPosition( 
            /* [in] */ long lIndexPosition) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_IndexPosition( 
            /* [retval][out] */ long *plIndexPosition) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerCacheColumn100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerCacheColumn100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerCacheColumn100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_DataType )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [retval][out] */ enum DataType *peDataType);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_DataType )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ enum DataType eDataType);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Length )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [retval][out] */ long *plLength);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Length )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ long lLength);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Precision )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [retval][out] */ long *plPrecision);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Precision )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ long lPrecision);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Scale )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [retval][out] */ long *plScale);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_Scale )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ long lScale);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_CodePage )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [retval][out] */ long *plCodePage);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_CodePage )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ long lCodePage);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_IndexPosition )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [in] */ long lIndexPosition);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_IndexPosition )( 
            IDTSConnectionManagerCacheColumn100 * This,
            /* [retval][out] */ long *plIndexPosition);
        
        END_INTERFACE
    } IDTSConnectionManagerCacheColumn100Vtbl;

    interface IDTSConnectionManagerCacheColumn100
    {
        CONST_VTBL struct IDTSConnectionManagerCacheColumn100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerCacheColumn100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerCacheColumn100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerCacheColumn100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerCacheColumn100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerCacheColumn100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerCacheColumn100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerCacheColumn100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerCacheColumn100_get_DataType(This,peDataType)	\
    ( (This)->lpVtbl -> get_DataType(This,peDataType) ) 

#define IDTSConnectionManagerCacheColumn100_put_DataType(This,eDataType)	\
    ( (This)->lpVtbl -> put_DataType(This,eDataType) ) 

#define IDTSConnectionManagerCacheColumn100_get_Length(This,plLength)	\
    ( (This)->lpVtbl -> get_Length(This,plLength) ) 

#define IDTSConnectionManagerCacheColumn100_put_Length(This,lLength)	\
    ( (This)->lpVtbl -> put_Length(This,lLength) ) 

#define IDTSConnectionManagerCacheColumn100_get_Precision(This,plPrecision)	\
    ( (This)->lpVtbl -> get_Precision(This,plPrecision) ) 

#define IDTSConnectionManagerCacheColumn100_put_Precision(This,lPrecision)	\
    ( (This)->lpVtbl -> put_Precision(This,lPrecision) ) 

#define IDTSConnectionManagerCacheColumn100_get_Scale(This,plScale)	\
    ( (This)->lpVtbl -> get_Scale(This,plScale) ) 

#define IDTSConnectionManagerCacheColumn100_put_Scale(This,lScale)	\
    ( (This)->lpVtbl -> put_Scale(This,lScale) ) 

#define IDTSConnectionManagerCacheColumn100_get_CodePage(This,plCodePage)	\
    ( (This)->lpVtbl -> get_CodePage(This,plCodePage) ) 

#define IDTSConnectionManagerCacheColumn100_put_CodePage(This,lCodePage)	\
    ( (This)->lpVtbl -> put_CodePage(This,lCodePage) ) 

#define IDTSConnectionManagerCacheColumn100_put_IndexPosition(This,lIndexPosition)	\
    ( (This)->lpVtbl -> put_IndexPosition(This,lIndexPosition) ) 

#define IDTSConnectionManagerCacheColumn100_get_IndexPosition(This,plIndexPosition)	\
    ( (This)->lpVtbl -> get_IndexPosition(This,plIndexPosition) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerCacheColumn100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerCacheColumns100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerCacheColumns100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerCacheColumns100 */
/* [unique][helpstring][uuid][dual][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerCacheColumns100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7DE154D-0A55-4193-8AA8-715A30262A28")
    IDTSConnectionManagerCacheColumns100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT Key,
            /* [retval][out] */ IDTSConnectionManagerCacheColumn100 **ppColumn) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *plRetVal) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [retval][out] */ IUnknown **ppEnum) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [retval][out] */ IDTSConnectionManagerCacheColumn100 **ppColumn) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT Key) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerCacheColumns100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerCacheColumns100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerCacheColumns100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [in] */ VARIANT Key,
            /* [retval][out] */ IDTSConnectionManagerCacheColumn100 **ppColumn);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [retval][out] */ long *plRetVal);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__NewEnum )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [retval][out] */ IUnknown **ppEnum);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [retval][out] */ IDTSConnectionManagerCacheColumn100 **ppColumn);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDTSConnectionManagerCacheColumns100 * This,
            /* [in] */ VARIANT Key);
        
        END_INTERFACE
    } IDTSConnectionManagerCacheColumns100Vtbl;

    interface IDTSConnectionManagerCacheColumns100
    {
        CONST_VTBL struct IDTSConnectionManagerCacheColumns100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerCacheColumns100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerCacheColumns100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerCacheColumns100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerCacheColumns100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerCacheColumns100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerCacheColumns100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerCacheColumns100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerCacheColumns100_get_Item(This,Key,ppColumn)	\
    ( (This)->lpVtbl -> get_Item(This,Key,ppColumn) ) 

#define IDTSConnectionManagerCacheColumns100_get_Count(This,plRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,plRetVal) ) 

#define IDTSConnectionManagerCacheColumns100_get__NewEnum(This,ppEnum)	\
    ( (This)->lpVtbl -> get__NewEnum(This,ppEnum) ) 

#define IDTSConnectionManagerCacheColumns100_Add(This,ppColumn)	\
    ( (This)->lpVtbl -> Add(This,ppColumn) ) 

#define IDTSConnectionManagerCacheColumns100_Remove(This,Key)	\
    ( (This)->lpVtbl -> Remove(This,Key) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerCacheColumns100_INTERFACE_DEFINED__ */


#ifndef __IDTSConnectionManagerCache100_INTERFACE_DEFINED__
#define __IDTSConnectionManagerCache100_INTERFACE_DEFINED__

/* interface IDTSConnectionManagerCache100 */
/* [unique][helpstring][nonextensible][dual][uuid][object] */ 


EXTERN_C const IID IID_IDTSConnectionManagerCache100;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("019B69A5-AC5B-47BF-BEF7-5BB67F121DA1")
    IDTSConnectionManagerCache100 : public IDispatch
    {
    public:
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Columns( 
            /* [retval][out] */ IDTSConnectionManagerCacheColumns100 **ppColumns) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseFile( 
            /* [retval][out] */ VARIANT_BOOL *pvbUseFile) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseFile( 
            /* [in] */ VARIANT_BOOL vbUseFile) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_UseEncryption( 
            /* [retval][out] */ VARIANT_BOOL *pvbUseEncryption) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_UseEncryption( 
            /* [in] */ VARIANT_BOOL vbUseEncryption) = 0;
        
        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RetainData( 
            /* [retval][out] */ VARIANT_BOOL *pvbRetain) = 0;
        
        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_RetainData( 
            /* [in] */ VARIANT_BOOL vbRetain) = 0;
        
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetFileColumns( 
            /* [in] */ BSTR bstrFileName,
            /* [retval][out] */ IDTSConnectionManagerCacheColumns100 **ppColumns) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDTSConnectionManagerCache100Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            __RPC__deref_out _Result_nullonfailure_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDTSConnectionManagerCache100 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDTSConnectionManagerCache100 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDTSConnectionManagerCache100 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_Columns )( 
            IDTSConnectionManagerCache100 * This,
            /* [retval][out] */ IDTSConnectionManagerCacheColumns100 **ppColumns);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseFile )( 
            IDTSConnectionManagerCache100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUseFile);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseFile )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ VARIANT_BOOL vbUseFile);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_UseEncryption )( 
            IDTSConnectionManagerCache100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbUseEncryption);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_UseEncryption )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ VARIANT_BOOL vbUseEncryption);
        
        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_RetainData )( 
            IDTSConnectionManagerCache100 * This,
            /* [retval][out] */ VARIANT_BOOL *pvbRetain);
        
        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_RetainData )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ VARIANT_BOOL vbRetain);
        
        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE *GetFileColumns )( 
            IDTSConnectionManagerCache100 * This,
            /* [in] */ BSTR bstrFileName,
            /* [retval][out] */ IDTSConnectionManagerCacheColumns100 **ppColumns);
        
        END_INTERFACE
    } IDTSConnectionManagerCache100Vtbl;

    interface IDTSConnectionManagerCache100
    {
        CONST_VTBL struct IDTSConnectionManagerCache100Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDTSConnectionManagerCache100_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDTSConnectionManagerCache100_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDTSConnectionManagerCache100_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDTSConnectionManagerCache100_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDTSConnectionManagerCache100_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDTSConnectionManagerCache100_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDTSConnectionManagerCache100_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDTSConnectionManagerCache100_get_Columns(This,ppColumns)	\
    ( (This)->lpVtbl -> get_Columns(This,ppColumns) ) 

#define IDTSConnectionManagerCache100_get_UseFile(This,pvbUseFile)	\
    ( (This)->lpVtbl -> get_UseFile(This,pvbUseFile) ) 

#define IDTSConnectionManagerCache100_put_UseFile(This,vbUseFile)	\
    ( (This)->lpVtbl -> put_UseFile(This,vbUseFile) ) 

#define IDTSConnectionManagerCache100_get_UseEncryption(This,pvbUseEncryption)	\
    ( (This)->lpVtbl -> get_UseEncryption(This,pvbUseEncryption) ) 

#define IDTSConnectionManagerCache100_put_UseEncryption(This,vbUseEncryption)	\
    ( (This)->lpVtbl -> put_UseEncryption(This,vbUseEncryption) ) 

#define IDTSConnectionManagerCache100_get_RetainData(This,pvbRetain)	\
    ( (This)->lpVtbl -> get_RetainData(This,pvbRetain) ) 

#define IDTSConnectionManagerCache100_put_RetainData(This,vbRetain)	\
    ( (This)->lpVtbl -> put_RetainData(This,vbRetain) ) 

#define IDTSConnectionManagerCache100_GetFileColumns(This,bstrFileName,ppColumns)	\
    ( (This)->lpVtbl -> GetFileColumns(This,bstrFileName,ppColumns) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDTSConnectionManagerCache100_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ConnectionManagerCache;

#ifdef __cplusplus

class DECLSPEC_UUID("1CC36899-A0ED-4899-892C-ED1CE92B2438")
ConnectionManagerCache;
#endif

EXTERN_C const CLSID CLSID_ReplacementTask;

#ifdef __cplusplus

class DECLSPEC_UUID("8E789515-A52C-4C06-8503-E797EA8292CD")
ReplacementTask;
#endif
#endif /* __DTSLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


